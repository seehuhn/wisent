# LR(1) parser, autogenerated on 2025-07-05 11:01:00
# generator: wisent 0.6.2, http://seehuhn.de/pages/wisent
# source: examples/javascript/javascript.wi

# All parts of this file which are not taken verbatim from the input grammar
# are covered by the following notice:
#
# Copyright (C) 2008, 2009  Jochen Voss <voss@seehuhn.de>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#   1. Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#
#   2. Redistributions in binary form must reproduce the above
#      copyright notice, this list of conditions and the following
#      disclaimer in the documentation and/or other materials provided
#      with the distribution.
#
#   3. The name of the author may not be used to endorse or promote
#      products derived from this software without specific prior
#      written permission.
#
# This software is provided by the author "as is" and any express or
# implied warranties, including, but not limited to, the implied
# warranties of merchantability and fitness for a particular purpose
# are disclaimed.  In no event shall the author be liable for any
# direct, indirect, incidental, special, exemplary, or consequential
# damages (including, but not limited to, procurement of substitute
# goods or services; loss of use, data, or profits; or business
# interruption) however caused and on any theory of liability, whether
# in contract, strict liability, or tort (including negligence or
# otherwise) arising in any way out of the use of this software, even
# if advised of the possibility of such damage.

from itertools import chain

class Unique(object):

    """Unique objects for use as markers.

    These objects are internally used to represent the start symbol
    and the end-of-input marker of the grammar.
    """

    def __init__(self, label):
        """Create a new unique object.

        `label` is a string which is used as a textual representation
        of the object.
        """
        self.label = label

    def __repr__(self):
        """Return the `label` given at object construction."""
        return self.label

class Parser(object):

    """LR(1) parser class.

    terminal symbols:
      '&', '&&', '(', ')', '+', ',', '-', '.', ':', ';', '=', '?',
      'ASSIGNMENT_OPERATOR', 'BREAK', 'CONTINUE', 'DELETE', 'ELSE',
      'EQUALITY_OPERATOR', 'FALSE', 'FLOAT', 'FOR', 'FUNCTION', 'IDENTIFIER',
      'IF', 'IN', 'INCREMENT_OPERATOR', 'INTEGER', 'MULTIPLICATIVE_OPERATOR',
      'NEW', 'NULL', 'RELATIONAL_OPERATOR', 'RETURN', 'SHIFT_OPERATOR',
      'STRING', 'THIS', 'TRUE', 'UNARY_OPERATOR', 'VAR', 'WHILE', 'WITH', '[',
      ']', '^', '{', '|', '||', '}'

    nonterminal symbols:
      'AdditiveExpression', 'AndExpression', 'ArgumentList', 'ArgumentListOpt',
      'AssignmentExpression', 'BitwiseAndExpression', 'BitwiseOrExpression',
      'BitwiseXorExpression', 'CompoundStatement', 'Condition',
      'ConditionalExpression', 'ConstructorCall', 'Element',
      'EqualityExpression', 'Expression', 'ExpressionOpt', 'MemberExpression',
      'MultiplicativeExpression', 'OrExpression', 'ParameterList',
      'ParameterListOpt', 'PrimaryExpression', 'Program',
      'RelationalExpression', 'ShiftExpression', 'Statement', 'Statements',
      'UnaryExpression', 'Variable', 'Variables', 'VariablesOrExpression'

    production rules:
      'Program' -> '_0*'
      '_0*' ->
      '_0*' -> '_0*' 'Element'
      'Element' -> 'FUNCTION' 'IDENTIFIER' '(' 'ParameterListOpt' ')' 'CompoundStatement'
      'Element' -> 'Statement'
      'ParameterListOpt' ->
      'ParameterListOpt' -> 'ParameterList'
      'ParameterList' -> 'IDENTIFIER' '_3*'
      '_3*' ->
      '_3*' -> '_3*' ',' 'IDENTIFIER'
      'CompoundStatement' -> '{' 'Statements' '}'
      'Statements' -> '_4*'
      '_4*' ->
      '_4*' -> '_4*' 'Statement'
      'Statement' -> ';'
      'Statement' -> 'IF' 'Condition' 'Statement'
      'Statement' -> 'IF' 'Condition' 'Statement' 'ELSE' 'Statement'
      'Statement' -> 'WHILE' 'Condition' 'Statement'
      'Statement' -> 'FOR' '(' ';' 'ExpressionOpt' ';' 'ExpressionOpt' ')' 'Statement'
      'Statement' -> 'FOR' '(' 'VariablesOrExpression' ';' 'ExpressionOpt' ';' 'ExpressionOpt' ')' 'Statement'
      'Statement' -> 'FOR' '(' 'VariablesOrExpression' 'IN' 'Expression' ')' 'Statement'
      'Statement' -> 'BREAK' ';'
      'Statement' -> 'CONTINUE' ';'
      'Statement' -> 'WITH' '(' 'Expression' ')' 'Statement'
      'Statement' -> 'RETURN' 'ExpressionOpt' ';'
      'Statement' -> 'CompoundStatement'
      'Statement' -> 'VariablesOrExpression' ';'
      'Condition' -> 'Expression'
      'VariablesOrExpression' -> 'VAR' 'Variables'
      'VariablesOrExpression' -> 'Expression'
      'Variables' -> 'Variable' '_7*'
      '_7*' ->
      '_7*' -> '_7*' ',' 'Variable'
      'Variable' -> 'IDENTIFIER'
      'Variable' -> 'IDENTIFIER' '=' 'AssignmentExpression'
      'ExpressionOpt' ->
      'ExpressionOpt' -> 'Expression'
      'Expression' -> 'AssignmentExpression'
      'Expression' -> 'AssignmentExpression' ',' 'Expression'
      'AssignmentExpression' -> 'ConditionalExpression'
      'AssignmentExpression' -> 'ConditionalExpression' 'ASSIGNMENT_OPERATOR' 'AssignmentExpression'
      'ConditionalExpression' -> 'OrExpression'
      'ConditionalExpression' -> 'OrExpression' '?' 'AssignmentExpression' ':' 'AssignmentExpression'
      'OrExpression' -> 'AndExpression'
      'OrExpression' -> 'AndExpression' '||' 'OrExpression'
      'AndExpression' -> 'BitwiseOrExpression'
      'AndExpression' -> 'BitwiseOrExpression' '&&' 'AndExpression'
      'BitwiseOrExpression' -> 'BitwiseXorExpression'
      'BitwiseOrExpression' -> 'BitwiseXorExpression' '|' 'BitwiseOrExpression'
      'BitwiseXorExpression' -> 'BitwiseAndExpression'
      'BitwiseXorExpression' -> 'BitwiseAndExpression' '^' 'BitwiseXorExpression'
      'BitwiseAndExpression' -> 'EqualityExpression'
      'BitwiseAndExpression' -> 'EqualityExpression' '&' 'BitwiseAndExpression'
      'EqualityExpression' -> 'RelationalExpression'
      'EqualityExpression' -> 'RelationalExpression' 'EQUALITY_OPERATOR' 'EqualityExpression'
      'RelationalExpression' -> 'ShiftExpression'
      'RelationalExpression' -> 'RelationalExpression' 'RELATIONAL_OPERATOR' 'ShiftExpression'
      'ShiftExpression' -> 'AdditiveExpression'
      'ShiftExpression' -> 'AdditiveExpression' 'SHIFT_OPERATOR' 'ShiftExpression'
      'AdditiveExpression' -> 'MultiplicativeExpression'
      'AdditiveExpression' -> 'MultiplicativeExpression' '+' 'AdditiveExpression'
      'AdditiveExpression' -> 'MultiplicativeExpression' '-' 'AdditiveExpression'
      'MultiplicativeExpression' -> 'UnaryExpression'
      'MultiplicativeExpression' -> 'UnaryExpression' 'MULTIPLICATIVE_OPERATOR' 'MultiplicativeExpression'
      'UnaryExpression' -> 'MemberExpression'
      'UnaryExpression' -> 'UNARY_OPERATOR' 'UnaryExpression'
      'UnaryExpression' -> '-' 'UnaryExpression'
      'UnaryExpression' -> 'INCREMENT_OPERATOR' 'MemberExpression'
      'UnaryExpression' -> 'MemberExpression' 'INCREMENT_OPERATOR'
      'UnaryExpression' -> 'NEW' '_10?' 'ConstructorCall'
      '_10?' ->
      '_10?' -> 'THIS' '.'
      'UnaryExpression' -> 'DELETE' 'MemberExpression'
      'ConstructorCall' -> 'IDENTIFIER'
      'ConstructorCall' -> 'IDENTIFIER' '(' 'ArgumentListOpt' ')'
      'ConstructorCall' -> 'IDENTIFIER' '.' 'ConstructorCall'
      'MemberExpression' -> 'PrimaryExpression'
      'MemberExpression' -> 'PrimaryExpression' '.' 'MemberExpression'
      'MemberExpression' -> 'PrimaryExpression' '[' 'Expression' ']'
      'MemberExpression' -> 'PrimaryExpression' '(' 'ArgumentListOpt' ')'
      'ArgumentListOpt' ->
      'ArgumentListOpt' -> 'ArgumentList'
      'ArgumentList' -> 'AssignmentExpression'
      'ArgumentList' -> 'AssignmentExpression' ',' 'ArgumentList'
      'PrimaryExpression' -> '(' 'Expression' ')'
      'PrimaryExpression' -> 'IDENTIFIER'
      'PrimaryExpression' -> 'INTEGER'
      'PrimaryExpression' -> 'FLOAT'
      'PrimaryExpression' -> 'STRING'
      'PrimaryExpression' -> 'FALSE'
      'PrimaryExpression' -> 'TRUE'
      'PrimaryExpression' -> 'NULL'
      'PrimaryExpression' -> 'THIS'
    """

    class ParseErrors(Exception):

        """Exception class to represent a collection of parse errors.

        Instances of this class have two attributes, `errors` and `tree`.
        `errors` is a list of tuples, each describing one error.
        Each tuple consists of the first input token which could not
        be processed and the list of grammar symbols which were allowed
        at this point.
        `tree` is a "repaired" parse tree which might be used for further
        error checking, or `None` if no repair was possible.
        """

        def __init__(self, errors, tree):
            msg = "%d parse errors"%len(errors)
            Exception.__init__(self, msg)
            self.errors = errors
            self.tree = tree

    terminals = [ '&', '&&', '(', ')', '+', ',', '-', '.', ':', ';', '=', '?',
                  'ASSIGNMENT_OPERATOR', 'BREAK', 'CONTINUE', 'DELETE', 'ELSE',
                  'EQUALITY_OPERATOR', 'FALSE', 'FLOAT', 'FOR', 'FUNCTION',
                  'IDENTIFIER', 'IF', 'IN', 'INCREMENT_OPERATOR', 'INTEGER',
                  'MULTIPLICATIVE_OPERATOR', 'NEW', 'NULL',
                  'RELATIONAL_OPERATOR', 'RETURN', 'SHIFT_OPERATOR', 'STRING',
                  'THIS', 'TRUE', 'UNARY_OPERATOR', 'VAR', 'WHILE', 'WITH',
                  '[', ']', '^', '{', '|', '||', '}' ]
    _transparent = [ '_0*', '_10?', '_3*', '_4*', '_7*' ]
    EOF = Unique('EOF')
    S = Unique('S')

    _halting_state = 164
    _reduce = {
        (0, '('): ('_0*', 0), (0, '-'): ('_0*', 0), (0, ';'): ('_0*', 0),
        (0, 'BREAK'): ('_0*', 0), (0, 'CONTINUE'): ('_0*', 0),
        (0, 'DELETE'): ('_0*', 0), (0, 'FALSE'): ('_0*', 0),
        (0, 'FLOAT'): ('_0*', 0), (0, 'FOR'): ('_0*', 0),
        (0, 'FUNCTION'): ('_0*', 0), (0, 'IDENTIFIER'): ('_0*', 0),
        (0, 'IF'): ('_0*', 0), (0, 'INCREMENT_OPERATOR'): ('_0*', 0),
        (0, 'INTEGER'): ('_0*', 0), (0, 'NEW'): ('_0*', 0),
        (0, 'NULL'): ('_0*', 0), (0, 'RETURN'): ('_0*', 0),
        (0, 'STRING'): ('_0*', 0), (0, 'THIS'): ('_0*', 0),
        (0, 'TRUE'): ('_0*', 0), (0, 'UNARY_OPERATOR'): ('_0*', 0),
        (0, 'VAR'): ('_0*', 0), (0, 'WHILE'): ('_0*', 0),
        (0, 'WITH'): ('_0*', 0), (0, '{'): ('_0*', 0), (0, EOF): ('_0*', 0),
        (10, '('): ('Element', 1), (10, '-'): ('Element', 1),
        (10, ';'): ('Element', 1), (10, 'BREAK'): ('Element', 1),
        (10, 'CONTINUE'): ('Element', 1), (10, 'DELETE'): ('Element', 1),
        (10, 'FALSE'): ('Element', 1), (10, 'FLOAT'): ('Element', 1),
        (10, 'FOR'): ('Element', 1), (10, 'FUNCTION'): ('Element', 1),
        (10, 'IDENTIFIER'): ('Element', 1), (10, 'IF'): ('Element', 1),
        (10, 'INCREMENT_OPERATOR'): ('Element', 1),
        (10, 'INTEGER'): ('Element', 1), (10, 'NEW'): ('Element', 1),
        (10, 'NULL'): ('Element', 1), (10, 'RETURN'): ('Element', 1),
        (10, 'STRING'): ('Element', 1), (10, 'THIS'): ('Element', 1),
        (10, 'TRUE'): ('Element', 1), (10, 'UNARY_OPERATOR'): ('Element', 1),
        (10, 'VAR'): ('Element', 1), (10, 'WHILE'): ('Element', 1),
        (10, 'WITH'): ('Element', 1), (10, '{'): ('Element', 1),
        (10, EOF): ('Element', 1), (101, '&&'): ('BitwiseAndExpression', 3),
        (101, '('): ('BitwiseAndExpression', 3),
        (101, ')'): ('BitwiseAndExpression', 3),
        (101, ','): ('BitwiseAndExpression', 3),
        (101, '-'): ('BitwiseAndExpression', 3),
        (101, ':'): ('BitwiseAndExpression', 3),
        (101, ';'): ('BitwiseAndExpression', 3),
        (101, '?'): ('BitwiseAndExpression', 3),
        (101, 'ASSIGNMENT_OPERATOR'): ('BitwiseAndExpression', 3),
        (101, 'BREAK'): ('BitwiseAndExpression', 3),
        (101, 'CONTINUE'): ('BitwiseAndExpression', 3),
        (101, 'DELETE'): ('BitwiseAndExpression', 3),
        (101, 'FALSE'): ('BitwiseAndExpression', 3),
        (101, 'FLOAT'): ('BitwiseAndExpression', 3),
        (101, 'FOR'): ('BitwiseAndExpression', 3),
        (101, 'IDENTIFIER'): ('BitwiseAndExpression', 3),
        (101, 'IF'): ('BitwiseAndExpression', 3),
        (101, 'IN'): ('BitwiseAndExpression', 3),
        (101, 'INCREMENT_OPERATOR'): ('BitwiseAndExpression', 3),
        (101, 'INTEGER'): ('BitwiseAndExpression', 3),
        (101, 'NEW'): ('BitwiseAndExpression', 3),
        (101, 'NULL'): ('BitwiseAndExpression', 3),
        (101, 'RETURN'): ('BitwiseAndExpression', 3),
        (101, 'STRING'): ('BitwiseAndExpression', 3),
        (101, 'THIS'): ('BitwiseAndExpression', 3),
        (101, 'TRUE'): ('BitwiseAndExpression', 3),
        (101, 'UNARY_OPERATOR'): ('BitwiseAndExpression', 3),
        (101, 'VAR'): ('BitwiseAndExpression', 3),
        (101, 'WHILE'): ('BitwiseAndExpression', 3),
        (101, 'WITH'): ('BitwiseAndExpression', 3),
        (101, ']'): ('BitwiseAndExpression', 3),
        (101, '^'): ('BitwiseAndExpression', 3),
        (101, '{'): ('BitwiseAndExpression', 3),
        (101, '|'): ('BitwiseAndExpression', 3),
        (101, '||'): ('BitwiseAndExpression', 3),
        (102, '&&'): ('EqualityExpression', 1),
        (102, '&'): ('EqualityExpression', 1),
        (102, '('): ('EqualityExpression', 1),
        (102, ')'): ('EqualityExpression', 1),
        (102, ','): ('EqualityExpression', 1),
        (102, '-'): ('EqualityExpression', 1),
        (102, ':'): ('EqualityExpression', 1),
        (102, ';'): ('EqualityExpression', 1),
        (102, '?'): ('EqualityExpression', 1),
        (102, 'ASSIGNMENT_OPERATOR'): ('EqualityExpression', 1),
        (102, 'BREAK'): ('EqualityExpression', 1),
        (102, 'CONTINUE'): ('EqualityExpression', 1),
        (102, 'DELETE'): ('EqualityExpression', 1),
        (102, 'FALSE'): ('EqualityExpression', 1),
        (102, 'FLOAT'): ('EqualityExpression', 1),
        (102, 'FOR'): ('EqualityExpression', 1),
        (102, 'IDENTIFIER'): ('EqualityExpression', 1),
        (102, 'IF'): ('EqualityExpression', 1),
        (102, 'IN'): ('EqualityExpression', 1),
        (102, 'INCREMENT_OPERATOR'): ('EqualityExpression', 1),
        (102, 'INTEGER'): ('EqualityExpression', 1),
        (102, 'NEW'): ('EqualityExpression', 1),
        (102, 'NULL'): ('EqualityExpression', 1),
        (102, 'RETURN'): ('EqualityExpression', 1),
        (102, 'STRING'): ('EqualityExpression', 1),
        (102, 'THIS'): ('EqualityExpression', 1),
        (102, 'TRUE'): ('EqualityExpression', 1),
        (102, 'UNARY_OPERATOR'): ('EqualityExpression', 1),
        (102, 'VAR'): ('EqualityExpression', 1),
        (102, 'WHILE'): ('EqualityExpression', 1),
        (102, 'WITH'): ('EqualityExpression', 1),
        (102, ']'): ('EqualityExpression', 1),
        (102, '^'): ('EqualityExpression', 1),
        (102, '{'): ('EqualityExpression', 1),
        (102, '|'): ('EqualityExpression', 1),
        (102, '||'): ('EqualityExpression', 1),
        (104, '&&'): ('EqualityExpression', 3),
        (104, '&'): ('EqualityExpression', 3),
        (104, '('): ('EqualityExpression', 3),
        (104, ')'): ('EqualityExpression', 3),
        (104, ','): ('EqualityExpression', 3),
        (104, '-'): ('EqualityExpression', 3),
        (104, ':'): ('EqualityExpression', 3),
        (104, ';'): ('EqualityExpression', 3),
        (104, '?'): ('EqualityExpression', 3),
        (104, 'ASSIGNMENT_OPERATOR'): ('EqualityExpression', 3),
        (104, 'BREAK'): ('EqualityExpression', 3),
        (104, 'CONTINUE'): ('EqualityExpression', 3),
        (104, 'DELETE'): ('EqualityExpression', 3),
        (104, 'FALSE'): ('EqualityExpression', 3),
        (104, 'FLOAT'): ('EqualityExpression', 3),
        (104, 'FOR'): ('EqualityExpression', 3),
        (104, 'IDENTIFIER'): ('EqualityExpression', 3),
        (104, 'IF'): ('EqualityExpression', 3),
        (104, 'IN'): ('EqualityExpression', 3),
        (104, 'INCREMENT_OPERATOR'): ('EqualityExpression', 3),
        (104, 'INTEGER'): ('EqualityExpression', 3),
        (104, 'NEW'): ('EqualityExpression', 3),
        (104, 'NULL'): ('EqualityExpression', 3),
        (104, 'RETURN'): ('EqualityExpression', 3),
        (104, 'STRING'): ('EqualityExpression', 3),
        (104, 'THIS'): ('EqualityExpression', 3),
        (104, 'TRUE'): ('EqualityExpression', 3),
        (104, 'UNARY_OPERATOR'): ('EqualityExpression', 3),
        (104, 'VAR'): ('EqualityExpression', 3),
        (104, 'WHILE'): ('EqualityExpression', 3),
        (104, 'WITH'): ('EqualityExpression', 3),
        (104, ']'): ('EqualityExpression', 3),
        (104, '^'): ('EqualityExpression', 3),
        (104, '{'): ('EqualityExpression', 3),
        (104, '|'): ('EqualityExpression', 3),
        (104, '||'): ('EqualityExpression', 3),
        (105, '&&'): ('RelationalExpression', 1),
        (105, '&'): ('RelationalExpression', 1),
        (105, '('): ('RelationalExpression', 1),
        (105, ')'): ('RelationalExpression', 1),
        (105, ','): ('RelationalExpression', 1),
        (105, '-'): ('RelationalExpression', 1),
        (105, ':'): ('RelationalExpression', 1),
        (105, ';'): ('RelationalExpression', 1),
        (105, '?'): ('RelationalExpression', 1),
        (105, 'ASSIGNMENT_OPERATOR'): ('RelationalExpression', 1),
        (105, 'BREAK'): ('RelationalExpression', 1),
        (105, 'CONTINUE'): ('RelationalExpression', 1),
        (105, 'DELETE'): ('RelationalExpression', 1),
        (105, 'EQUALITY_OPERATOR'): ('RelationalExpression', 1),
        (105, 'FALSE'): ('RelationalExpression', 1),
        (105, 'FLOAT'): ('RelationalExpression', 1),
        (105, 'FOR'): ('RelationalExpression', 1),
        (105, 'IDENTIFIER'): ('RelationalExpression', 1),
        (105, 'IF'): ('RelationalExpression', 1),
        (105, 'IN'): ('RelationalExpression', 1),
        (105, 'INCREMENT_OPERATOR'): ('RelationalExpression', 1),
        (105, 'INTEGER'): ('RelationalExpression', 1),
        (105, 'NEW'): ('RelationalExpression', 1),
        (105, 'NULL'): ('RelationalExpression', 1),
        (105, 'RELATIONAL_OPERATOR'): ('RelationalExpression', 1),
        (105, 'RETURN'): ('RelationalExpression', 1),
        (105, 'STRING'): ('RelationalExpression', 1),
        (105, 'THIS'): ('RelationalExpression', 1),
        (105, 'TRUE'): ('RelationalExpression', 1),
        (105, 'UNARY_OPERATOR'): ('RelationalExpression', 1),
        (105, 'VAR'): ('RelationalExpression', 1),
        (105, 'WHILE'): ('RelationalExpression', 1),
        (105, 'WITH'): ('RelationalExpression', 1),
        (105, ']'): ('RelationalExpression', 1),
        (105, '^'): ('RelationalExpression', 1),
        (105, '{'): ('RelationalExpression', 1),
        (105, '|'): ('RelationalExpression', 1),
        (105, '||'): ('RelationalExpression', 1),
        (107, '&&'): ('RelationalExpression', 3),
        (107, '&'): ('RelationalExpression', 3),
        (107, '('): ('RelationalExpression', 3),
        (107, ')'): ('RelationalExpression', 3),
        (107, ','): ('RelationalExpression', 3),
        (107, '-'): ('RelationalExpression', 3),
        (107, ':'): ('RelationalExpression', 3),
        (107, ';'): ('RelationalExpression', 3),
        (107, '?'): ('RelationalExpression', 3),
        (107, 'ASSIGNMENT_OPERATOR'): ('RelationalExpression', 3),
        (107, 'BREAK'): ('RelationalExpression', 3),
        (107, 'CONTINUE'): ('RelationalExpression', 3),
        (107, 'DELETE'): ('RelationalExpression', 3),
        (107, 'EQUALITY_OPERATOR'): ('RelationalExpression', 3),
        (107, 'FALSE'): ('RelationalExpression', 3),
        (107, 'FLOAT'): ('RelationalExpression', 3),
        (107, 'FOR'): ('RelationalExpression', 3),
        (107, 'IDENTIFIER'): ('RelationalExpression', 3),
        (107, 'IF'): ('RelationalExpression', 3),
        (107, 'IN'): ('RelationalExpression', 3),
        (107, 'INCREMENT_OPERATOR'): ('RelationalExpression', 3),
        (107, 'INTEGER'): ('RelationalExpression', 3),
        (107, 'NEW'): ('RelationalExpression', 3),
        (107, 'NULL'): ('RelationalExpression', 3),
        (107, 'RELATIONAL_OPERATOR'): ('RelationalExpression', 3),
        (107, 'RETURN'): ('RelationalExpression', 3),
        (107, 'STRING'): ('RelationalExpression', 3),
        (107, 'THIS'): ('RelationalExpression', 3),
        (107, 'TRUE'): ('RelationalExpression', 3),
        (107, 'UNARY_OPERATOR'): ('RelationalExpression', 3),
        (107, 'VAR'): ('RelationalExpression', 3),
        (107, 'WHILE'): ('RelationalExpression', 3),
        (107, 'WITH'): ('RelationalExpression', 3),
        (107, ']'): ('RelationalExpression', 3),
        (107, '^'): ('RelationalExpression', 3),
        (107, '{'): ('RelationalExpression', 3),
        (107, '|'): ('RelationalExpression', 3),
        (107, '||'): ('RelationalExpression', 3),
        (108, '&&'): ('ShiftExpression', 1),
        (108, '&'): ('ShiftExpression', 1), (108, '('): ('ShiftExpression', 1),
        (108, ')'): ('ShiftExpression', 1), (108, ','): ('ShiftExpression', 1),
        (108, '-'): ('ShiftExpression', 1), (108, ':'): ('ShiftExpression', 1),
        (108, ';'): ('ShiftExpression', 1), (108, '?'): ('ShiftExpression', 1),
        (108, 'ASSIGNMENT_OPERATOR'): ('ShiftExpression', 1),
        (108, 'BREAK'): ('ShiftExpression', 1),
        (108, 'CONTINUE'): ('ShiftExpression', 1),
        (108, 'DELETE'): ('ShiftExpression', 1),
        (108, 'EQUALITY_OPERATOR'): ('ShiftExpression', 1),
        (108, 'FALSE'): ('ShiftExpression', 1),
        (108, 'FLOAT'): ('ShiftExpression', 1),
        (108, 'FOR'): ('ShiftExpression', 1),
        (108, 'IDENTIFIER'): ('ShiftExpression', 1),
        (108, 'IF'): ('ShiftExpression', 1),
        (108, 'IN'): ('ShiftExpression', 1),
        (108, 'INCREMENT_OPERATOR'): ('ShiftExpression', 1),
        (108, 'INTEGER'): ('ShiftExpression', 1),
        (108, 'NEW'): ('ShiftExpression', 1),
        (108, 'NULL'): ('ShiftExpression', 1),
        (108, 'RELATIONAL_OPERATOR'): ('ShiftExpression', 1),
        (108, 'RETURN'): ('ShiftExpression', 1),
        (108, 'STRING'): ('ShiftExpression', 1),
        (108, 'THIS'): ('ShiftExpression', 1),
        (108, 'TRUE'): ('ShiftExpression', 1),
        (108, 'UNARY_OPERATOR'): ('ShiftExpression', 1),
        (108, 'VAR'): ('ShiftExpression', 1),
        (108, 'WHILE'): ('ShiftExpression', 1),
        (108, 'WITH'): ('ShiftExpression', 1),
        (108, ']'): ('ShiftExpression', 1), (108, '^'): ('ShiftExpression', 1),
        (108, '{'): ('ShiftExpression', 1), (108, '|'): ('ShiftExpression', 1),
        (108, '||'): ('ShiftExpression', 1),
        (11, ')'): ('ParameterListOpt', 1),
        (110, '&&'): ('ShiftExpression', 3),
        (110, '&'): ('ShiftExpression', 3), (110, '('): ('ShiftExpression', 3),
        (110, ')'): ('ShiftExpression', 3), (110, ','): ('ShiftExpression', 3),
        (110, '-'): ('ShiftExpression', 3), (110, ':'): ('ShiftExpression', 3),
        (110, ';'): ('ShiftExpression', 3), (110, '?'): ('ShiftExpression', 3),
        (110, 'ASSIGNMENT_OPERATOR'): ('ShiftExpression', 3),
        (110, 'BREAK'): ('ShiftExpression', 3),
        (110, 'CONTINUE'): ('ShiftExpression', 3),
        (110, 'DELETE'): ('ShiftExpression', 3),
        (110, 'EQUALITY_OPERATOR'): ('ShiftExpression', 3),
        (110, 'FALSE'): ('ShiftExpression', 3),
        (110, 'FLOAT'): ('ShiftExpression', 3),
        (110, 'FOR'): ('ShiftExpression', 3),
        (110, 'IDENTIFIER'): ('ShiftExpression', 3),
        (110, 'IF'): ('ShiftExpression', 3),
        (110, 'IN'): ('ShiftExpression', 3),
        (110, 'INCREMENT_OPERATOR'): ('ShiftExpression', 3),
        (110, 'INTEGER'): ('ShiftExpression', 3),
        (110, 'NEW'): ('ShiftExpression', 3),
        (110, 'NULL'): ('ShiftExpression', 3),
        (110, 'RELATIONAL_OPERATOR'): ('ShiftExpression', 3),
        (110, 'RETURN'): ('ShiftExpression', 3),
        (110, 'STRING'): ('ShiftExpression', 3),
        (110, 'THIS'): ('ShiftExpression', 3),
        (110, 'TRUE'): ('ShiftExpression', 3),
        (110, 'UNARY_OPERATOR'): ('ShiftExpression', 3),
        (110, 'VAR'): ('ShiftExpression', 3),
        (110, 'WHILE'): ('ShiftExpression', 3),
        (110, 'WITH'): ('ShiftExpression', 3),
        (110, ']'): ('ShiftExpression', 3), (110, '^'): ('ShiftExpression', 3),
        (110, '{'): ('ShiftExpression', 3), (110, '|'): ('ShiftExpression', 3),
        (110, '||'): ('ShiftExpression', 3),
        (111, '&&'): ('AdditiveExpression', 1),
        (111, '&'): ('AdditiveExpression', 1),
        (111, '('): ('AdditiveExpression', 1),
        (111, ')'): ('AdditiveExpression', 1),
        (111, ','): ('AdditiveExpression', 1),
        (111, ':'): ('AdditiveExpression', 1),
        (111, ';'): ('AdditiveExpression', 1),
        (111, '?'): ('AdditiveExpression', 1),
        (111, 'ASSIGNMENT_OPERATOR'): ('AdditiveExpression', 1),
        (111, 'BREAK'): ('AdditiveExpression', 1),
        (111, 'CONTINUE'): ('AdditiveExpression', 1),
        (111, 'DELETE'): ('AdditiveExpression', 1),
        (111, 'EQUALITY_OPERATOR'): ('AdditiveExpression', 1),
        (111, 'FALSE'): ('AdditiveExpression', 1),
        (111, 'FLOAT'): ('AdditiveExpression', 1),
        (111, 'FOR'): ('AdditiveExpression', 1),
        (111, 'IDENTIFIER'): ('AdditiveExpression', 1),
        (111, 'IF'): ('AdditiveExpression', 1),
        (111, 'IN'): ('AdditiveExpression', 1),
        (111, 'INCREMENT_OPERATOR'): ('AdditiveExpression', 1),
        (111, 'INTEGER'): ('AdditiveExpression', 1),
        (111, 'NEW'): ('AdditiveExpression', 1),
        (111, 'NULL'): ('AdditiveExpression', 1),
        (111, 'RELATIONAL_OPERATOR'): ('AdditiveExpression', 1),
        (111, 'RETURN'): ('AdditiveExpression', 1),
        (111, 'SHIFT_OPERATOR'): ('AdditiveExpression', 1),
        (111, 'STRING'): ('AdditiveExpression', 1),
        (111, 'THIS'): ('AdditiveExpression', 1),
        (111, 'TRUE'): ('AdditiveExpression', 1),
        (111, 'UNARY_OPERATOR'): ('AdditiveExpression', 1),
        (111, 'VAR'): ('AdditiveExpression', 1),
        (111, 'WHILE'): ('AdditiveExpression', 1),
        (111, 'WITH'): ('AdditiveExpression', 1),
        (111, ']'): ('AdditiveExpression', 1),
        (111, '^'): ('AdditiveExpression', 1),
        (111, '{'): ('AdditiveExpression', 1),
        (111, '|'): ('AdditiveExpression', 1),
        (111, '||'): ('AdditiveExpression', 1),
        (113, '&&'): ('AdditiveExpression', 3),
        (113, '&'): ('AdditiveExpression', 3),
        (113, '('): ('AdditiveExpression', 3),
        (113, ')'): ('AdditiveExpression', 3),
        (113, ','): ('AdditiveExpression', 3),
        (113, '-'): ('AdditiveExpression', 3),
        (113, ':'): ('AdditiveExpression', 3),
        (113, ';'): ('AdditiveExpression', 3),
        (113, '?'): ('AdditiveExpression', 3),
        (113, 'ASSIGNMENT_OPERATOR'): ('AdditiveExpression', 3),
        (113, 'BREAK'): ('AdditiveExpression', 3),
        (113, 'CONTINUE'): ('AdditiveExpression', 3),
        (113, 'DELETE'): ('AdditiveExpression', 3),
        (113, 'EQUALITY_OPERATOR'): ('AdditiveExpression', 3),
        (113, 'FALSE'): ('AdditiveExpression', 3),
        (113, 'FLOAT'): ('AdditiveExpression', 3),
        (113, 'FOR'): ('AdditiveExpression', 3),
        (113, 'IDENTIFIER'): ('AdditiveExpression', 3),
        (113, 'IF'): ('AdditiveExpression', 3),
        (113, 'IN'): ('AdditiveExpression', 3),
        (113, 'INCREMENT_OPERATOR'): ('AdditiveExpression', 3),
        (113, 'INTEGER'): ('AdditiveExpression', 3),
        (113, 'NEW'): ('AdditiveExpression', 3),
        (113, 'NULL'): ('AdditiveExpression', 3),
        (113, 'RELATIONAL_OPERATOR'): ('AdditiveExpression', 3),
        (113, 'RETURN'): ('AdditiveExpression', 3),
        (113, 'SHIFT_OPERATOR'): ('AdditiveExpression', 3),
        (113, 'STRING'): ('AdditiveExpression', 3),
        (113, 'THIS'): ('AdditiveExpression', 3),
        (113, 'TRUE'): ('AdditiveExpression', 3),
        (113, 'UNARY_OPERATOR'): ('AdditiveExpression', 3),
        (113, 'VAR'): ('AdditiveExpression', 3),
        (113, 'WHILE'): ('AdditiveExpression', 3),
        (113, 'WITH'): ('AdditiveExpression', 3),
        (113, ']'): ('AdditiveExpression', 3),
        (113, '^'): ('AdditiveExpression', 3),
        (113, '{'): ('AdditiveExpression', 3),
        (113, '|'): ('AdditiveExpression', 3),
        (113, '||'): ('AdditiveExpression', 3),
        (115, '&&'): ('AdditiveExpression', 3),
        (115, '&'): ('AdditiveExpression', 3),
        (115, '('): ('AdditiveExpression', 3),
        (115, ')'): ('AdditiveExpression', 3),
        (115, ','): ('AdditiveExpression', 3),
        (115, '-'): ('AdditiveExpression', 3),
        (115, ':'): ('AdditiveExpression', 3),
        (115, ';'): ('AdditiveExpression', 3),
        (115, '?'): ('AdditiveExpression', 3),
        (115, 'ASSIGNMENT_OPERATOR'): ('AdditiveExpression', 3),
        (115, 'BREAK'): ('AdditiveExpression', 3),
        (115, 'CONTINUE'): ('AdditiveExpression', 3),
        (115, 'DELETE'): ('AdditiveExpression', 3),
        (115, 'EQUALITY_OPERATOR'): ('AdditiveExpression', 3),
        (115, 'FALSE'): ('AdditiveExpression', 3),
        (115, 'FLOAT'): ('AdditiveExpression', 3),
        (115, 'FOR'): ('AdditiveExpression', 3),
        (115, 'IDENTIFIER'): ('AdditiveExpression', 3),
        (115, 'IF'): ('AdditiveExpression', 3),
        (115, 'IN'): ('AdditiveExpression', 3),
        (115, 'INCREMENT_OPERATOR'): ('AdditiveExpression', 3),
        (115, 'INTEGER'): ('AdditiveExpression', 3),
        (115, 'NEW'): ('AdditiveExpression', 3),
        (115, 'NULL'): ('AdditiveExpression', 3),
        (115, 'RELATIONAL_OPERATOR'): ('AdditiveExpression', 3),
        (115, 'RETURN'): ('AdditiveExpression', 3),
        (115, 'SHIFT_OPERATOR'): ('AdditiveExpression', 3),
        (115, 'STRING'): ('AdditiveExpression', 3),
        (115, 'THIS'): ('AdditiveExpression', 3),
        (115, 'TRUE'): ('AdditiveExpression', 3),
        (115, 'UNARY_OPERATOR'): ('AdditiveExpression', 3),
        (115, 'VAR'): ('AdditiveExpression', 3),
        (115, 'WHILE'): ('AdditiveExpression', 3),
        (115, 'WITH'): ('AdditiveExpression', 3),
        (115, ']'): ('AdditiveExpression', 3),
        (115, '^'): ('AdditiveExpression', 3),
        (115, '{'): ('AdditiveExpression', 3),
        (115, '|'): ('AdditiveExpression', 3),
        (115, '||'): ('AdditiveExpression', 3),
        (116, '&&'): ('MultiplicativeExpression', 1),
        (116, '&'): ('MultiplicativeExpression', 1),
        (116, '('): ('MultiplicativeExpression', 1),
        (116, ')'): ('MultiplicativeExpression', 1),
        (116, '+'): ('MultiplicativeExpression', 1),
        (116, ','): ('MultiplicativeExpression', 1),
        (116, '-'): ('MultiplicativeExpression', 1),
        (116, ':'): ('MultiplicativeExpression', 1),
        (116, ';'): ('MultiplicativeExpression', 1),
        (116, '?'): ('MultiplicativeExpression', 1),
        (116, 'ASSIGNMENT_OPERATOR'): ('MultiplicativeExpression', 1),
        (116, 'BREAK'): ('MultiplicativeExpression', 1),
        (116, 'CONTINUE'): ('MultiplicativeExpression', 1),
        (116, 'DELETE'): ('MultiplicativeExpression', 1),
        (116, 'EQUALITY_OPERATOR'): ('MultiplicativeExpression', 1),
        (116, 'FALSE'): ('MultiplicativeExpression', 1),
        (116, 'FLOAT'): ('MultiplicativeExpression', 1),
        (116, 'FOR'): ('MultiplicativeExpression', 1),
        (116, 'IDENTIFIER'): ('MultiplicativeExpression', 1),
        (116, 'IF'): ('MultiplicativeExpression', 1),
        (116, 'IN'): ('MultiplicativeExpression', 1),
        (116, 'INCREMENT_OPERATOR'): ('MultiplicativeExpression', 1),
        (116, 'INTEGER'): ('MultiplicativeExpression', 1),
        (116, 'NEW'): ('MultiplicativeExpression', 1),
        (116, 'NULL'): ('MultiplicativeExpression', 1),
        (116, 'RELATIONAL_OPERATOR'): ('MultiplicativeExpression', 1),
        (116, 'RETURN'): ('MultiplicativeExpression', 1),
        (116, 'SHIFT_OPERATOR'): ('MultiplicativeExpression', 1),
        (116, 'STRING'): ('MultiplicativeExpression', 1),
        (116, 'THIS'): ('MultiplicativeExpression', 1),
        (116, 'TRUE'): ('MultiplicativeExpression', 1),
        (116, 'UNARY_OPERATOR'): ('MultiplicativeExpression', 1),
        (116, 'VAR'): ('MultiplicativeExpression', 1),
        (116, 'WHILE'): ('MultiplicativeExpression', 1),
        (116, 'WITH'): ('MultiplicativeExpression', 1),
        (116, ']'): ('MultiplicativeExpression', 1),
        (116, '^'): ('MultiplicativeExpression', 1),
        (116, '{'): ('MultiplicativeExpression', 1),
        (116, '|'): ('MultiplicativeExpression', 1),
        (116, '||'): ('MultiplicativeExpression', 1),
        (118, '&&'): ('MultiplicativeExpression', 3),
        (118, '&'): ('MultiplicativeExpression', 3),
        (118, '('): ('MultiplicativeExpression', 3),
        (118, ')'): ('MultiplicativeExpression', 3),
        (118, '+'): ('MultiplicativeExpression', 3),
        (118, ','): ('MultiplicativeExpression', 3),
        (118, '-'): ('MultiplicativeExpression', 3),
        (118, ':'): ('MultiplicativeExpression', 3),
        (118, ';'): ('MultiplicativeExpression', 3),
        (118, '?'): ('MultiplicativeExpression', 3),
        (118, 'ASSIGNMENT_OPERATOR'): ('MultiplicativeExpression', 3),
        (118, 'BREAK'): ('MultiplicativeExpression', 3),
        (118, 'CONTINUE'): ('MultiplicativeExpression', 3),
        (118, 'DELETE'): ('MultiplicativeExpression', 3),
        (118, 'EQUALITY_OPERATOR'): ('MultiplicativeExpression', 3),
        (118, 'FALSE'): ('MultiplicativeExpression', 3),
        (118, 'FLOAT'): ('MultiplicativeExpression', 3),
        (118, 'FOR'): ('MultiplicativeExpression', 3),
        (118, 'IDENTIFIER'): ('MultiplicativeExpression', 3),
        (118, 'IF'): ('MultiplicativeExpression', 3),
        (118, 'IN'): ('MultiplicativeExpression', 3),
        (118, 'INCREMENT_OPERATOR'): ('MultiplicativeExpression', 3),
        (118, 'INTEGER'): ('MultiplicativeExpression', 3),
        (118, 'NEW'): ('MultiplicativeExpression', 3),
        (118, 'NULL'): ('MultiplicativeExpression', 3),
        (118, 'RELATIONAL_OPERATOR'): ('MultiplicativeExpression', 3),
        (118, 'RETURN'): ('MultiplicativeExpression', 3),
        (118, 'SHIFT_OPERATOR'): ('MultiplicativeExpression', 3),
        (118, 'STRING'): ('MultiplicativeExpression', 3),
        (118, 'THIS'): ('MultiplicativeExpression', 3),
        (118, 'TRUE'): ('MultiplicativeExpression', 3),
        (118, 'UNARY_OPERATOR'): ('MultiplicativeExpression', 3),
        (118, 'VAR'): ('MultiplicativeExpression', 3),
        (118, 'WHILE'): ('MultiplicativeExpression', 3),
        (118, 'WITH'): ('MultiplicativeExpression', 3),
        (118, ']'): ('MultiplicativeExpression', 3),
        (118, '^'): ('MultiplicativeExpression', 3),
        (118, '{'): ('MultiplicativeExpression', 3),
        (118, '|'): ('MultiplicativeExpression', 3),
        (118, '||'): ('MultiplicativeExpression', 3),
        (119, '&&'): ('UnaryExpression', 1),
        (119, '&'): ('UnaryExpression', 1), (119, '('): ('UnaryExpression', 1),
        (119, ')'): ('UnaryExpression', 1), (119, '+'): ('UnaryExpression', 1),
        (119, ','): ('UnaryExpression', 1), (119, '-'): ('UnaryExpression', 1),
        (119, ':'): ('UnaryExpression', 1), (119, ';'): ('UnaryExpression', 1),
        (119, '?'): ('UnaryExpression', 1),
        (119, 'ASSIGNMENT_OPERATOR'): ('UnaryExpression', 1),
        (119, 'BREAK'): ('UnaryExpression', 1),
        (119, 'CONTINUE'): ('UnaryExpression', 1),
        (119, 'DELETE'): ('UnaryExpression', 1),
        (119, 'EQUALITY_OPERATOR'): ('UnaryExpression', 1),
        (119, 'FALSE'): ('UnaryExpression', 1),
        (119, 'FLOAT'): ('UnaryExpression', 1),
        (119, 'FOR'): ('UnaryExpression', 1),
        (119, 'IDENTIFIER'): ('UnaryExpression', 1),
        (119, 'IF'): ('UnaryExpression', 1),
        (119, 'IN'): ('UnaryExpression', 1),
        (119, 'INTEGER'): ('UnaryExpression', 1),
        (119, 'MULTIPLICATIVE_OPERATOR'): ('UnaryExpression', 1),
        (119, 'NEW'): ('UnaryExpression', 1),
        (119, 'NULL'): ('UnaryExpression', 1),
        (119, 'RELATIONAL_OPERATOR'): ('UnaryExpression', 1),
        (119, 'RETURN'): ('UnaryExpression', 1),
        (119, 'SHIFT_OPERATOR'): ('UnaryExpression', 1),
        (119, 'STRING'): ('UnaryExpression', 1),
        (119, 'THIS'): ('UnaryExpression', 1),
        (119, 'TRUE'): ('UnaryExpression', 1),
        (119, 'UNARY_OPERATOR'): ('UnaryExpression', 1),
        (119, 'VAR'): ('UnaryExpression', 1),
        (119, 'WHILE'): ('UnaryExpression', 1),
        (119, 'WITH'): ('UnaryExpression', 1),
        (119, ']'): ('UnaryExpression', 1), (119, '^'): ('UnaryExpression', 1),
        (119, '{'): ('UnaryExpression', 1), (119, '|'): ('UnaryExpression', 1),
        (119, '||'): ('UnaryExpression', 1), (12, ')'): ('_3*', 0),
        (12, ','): ('_3*', 0), (121, '&&'): ('UnaryExpression', 2),
        (121, '&'): ('UnaryExpression', 2), (121, '('): ('UnaryExpression', 2),
        (121, ')'): ('UnaryExpression', 2), (121, '+'): ('UnaryExpression', 2),
        (121, ','): ('UnaryExpression', 2), (121, '-'): ('UnaryExpression', 2),
        (121, ':'): ('UnaryExpression', 2), (121, ';'): ('UnaryExpression', 2),
        (121, '?'): ('UnaryExpression', 2),
        (121, 'ASSIGNMENT_OPERATOR'): ('UnaryExpression', 2),
        (121, 'BREAK'): ('UnaryExpression', 2),
        (121, 'CONTINUE'): ('UnaryExpression', 2),
        (121, 'DELETE'): ('UnaryExpression', 2),
        (121, 'EQUALITY_OPERATOR'): ('UnaryExpression', 2),
        (121, 'FALSE'): ('UnaryExpression', 2),
        (121, 'FLOAT'): ('UnaryExpression', 2),
        (121, 'FOR'): ('UnaryExpression', 2),
        (121, 'IDENTIFIER'): ('UnaryExpression', 2),
        (121, 'IF'): ('UnaryExpression', 2),
        (121, 'IN'): ('UnaryExpression', 2),
        (121, 'INCREMENT_OPERATOR'): ('UnaryExpression', 2),
        (121, 'INTEGER'): ('UnaryExpression', 2),
        (121, 'MULTIPLICATIVE_OPERATOR'): ('UnaryExpression', 2),
        (121, 'NEW'): ('UnaryExpression', 2),
        (121, 'NULL'): ('UnaryExpression', 2),
        (121, 'RELATIONAL_OPERATOR'): ('UnaryExpression', 2),
        (121, 'RETURN'): ('UnaryExpression', 2),
        (121, 'SHIFT_OPERATOR'): ('UnaryExpression', 2),
        (121, 'STRING'): ('UnaryExpression', 2),
        (121, 'THIS'): ('UnaryExpression', 2),
        (121, 'TRUE'): ('UnaryExpression', 2),
        (121, 'UNARY_OPERATOR'): ('UnaryExpression', 2),
        (121, 'VAR'): ('UnaryExpression', 2),
        (121, 'WHILE'): ('UnaryExpression', 2),
        (121, 'WITH'): ('UnaryExpression', 2),
        (121, ']'): ('UnaryExpression', 2), (121, '^'): ('UnaryExpression', 2),
        (121, '{'): ('UnaryExpression', 2), (121, '|'): ('UnaryExpression', 2),
        (121, '||'): ('UnaryExpression', 2),
        (123, '&&'): ('UnaryExpression', 2),
        (123, '&'): ('UnaryExpression', 2), (123, '('): ('UnaryExpression', 2),
        (123, ')'): ('UnaryExpression', 2), (123, '+'): ('UnaryExpression', 2),
        (123, ','): ('UnaryExpression', 2), (123, '-'): ('UnaryExpression', 2),
        (123, ':'): ('UnaryExpression', 2), (123, ';'): ('UnaryExpression', 2),
        (123, '?'): ('UnaryExpression', 2),
        (123, 'ASSIGNMENT_OPERATOR'): ('UnaryExpression', 2),
        (123, 'BREAK'): ('UnaryExpression', 2),
        (123, 'CONTINUE'): ('UnaryExpression', 2),
        (123, 'DELETE'): ('UnaryExpression', 2),
        (123, 'EQUALITY_OPERATOR'): ('UnaryExpression', 2),
        (123, 'FALSE'): ('UnaryExpression', 2),
        (123, 'FLOAT'): ('UnaryExpression', 2),
        (123, 'FOR'): ('UnaryExpression', 2),
        (123, 'IDENTIFIER'): ('UnaryExpression', 2),
        (123, 'IF'): ('UnaryExpression', 2),
        (123, 'IN'): ('UnaryExpression', 2),
        (123, 'INCREMENT_OPERATOR'): ('UnaryExpression', 2),
        (123, 'INTEGER'): ('UnaryExpression', 2),
        (123, 'MULTIPLICATIVE_OPERATOR'): ('UnaryExpression', 2),
        (123, 'NEW'): ('UnaryExpression', 2),
        (123, 'NULL'): ('UnaryExpression', 2),
        (123, 'RELATIONAL_OPERATOR'): ('UnaryExpression', 2),
        (123, 'RETURN'): ('UnaryExpression', 2),
        (123, 'SHIFT_OPERATOR'): ('UnaryExpression', 2),
        (123, 'STRING'): ('UnaryExpression', 2),
        (123, 'THIS'): ('UnaryExpression', 2),
        (123, 'TRUE'): ('UnaryExpression', 2),
        (123, 'UNARY_OPERATOR'): ('UnaryExpression', 2),
        (123, 'VAR'): ('UnaryExpression', 2),
        (123, 'WHILE'): ('UnaryExpression', 2),
        (123, 'WITH'): ('UnaryExpression', 2),
        (123, ']'): ('UnaryExpression', 2), (123, '^'): ('UnaryExpression', 2),
        (123, '{'): ('UnaryExpression', 2), (123, '|'): ('UnaryExpression', 2),
        (123, '||'): ('UnaryExpression', 2),
        (125, '&&'): ('UnaryExpression', 2),
        (125, '&'): ('UnaryExpression', 2), (125, '('): ('UnaryExpression', 2),
        (125, ')'): ('UnaryExpression', 2), (125, '+'): ('UnaryExpression', 2),
        (125, ','): ('UnaryExpression', 2), (125, '-'): ('UnaryExpression', 2),
        (125, ':'): ('UnaryExpression', 2), (125, ';'): ('UnaryExpression', 2),
        (125, '?'): ('UnaryExpression', 2),
        (125, 'ASSIGNMENT_OPERATOR'): ('UnaryExpression', 2),
        (125, 'BREAK'): ('UnaryExpression', 2),
        (125, 'CONTINUE'): ('UnaryExpression', 2),
        (125, 'DELETE'): ('UnaryExpression', 2),
        (125, 'EQUALITY_OPERATOR'): ('UnaryExpression', 2),
        (125, 'FALSE'): ('UnaryExpression', 2),
        (125, 'FLOAT'): ('UnaryExpression', 2),
        (125, 'FOR'): ('UnaryExpression', 2),
        (125, 'IDENTIFIER'): ('UnaryExpression', 2),
        (125, 'IF'): ('UnaryExpression', 2),
        (125, 'IN'): ('UnaryExpression', 2),
        (125, 'INCREMENT_OPERATOR'): ('UnaryExpression', 2),
        (125, 'INTEGER'): ('UnaryExpression', 2),
        (125, 'MULTIPLICATIVE_OPERATOR'): ('UnaryExpression', 2),
        (125, 'NEW'): ('UnaryExpression', 2),
        (125, 'NULL'): ('UnaryExpression', 2),
        (125, 'RELATIONAL_OPERATOR'): ('UnaryExpression', 2),
        (125, 'RETURN'): ('UnaryExpression', 2),
        (125, 'SHIFT_OPERATOR'): ('UnaryExpression', 2),
        (125, 'STRING'): ('UnaryExpression', 2),
        (125, 'THIS'): ('UnaryExpression', 2),
        (125, 'TRUE'): ('UnaryExpression', 2),
        (125, 'UNARY_OPERATOR'): ('UnaryExpression', 2),
        (125, 'VAR'): ('UnaryExpression', 2),
        (125, 'WHILE'): ('UnaryExpression', 2),
        (125, 'WITH'): ('UnaryExpression', 2),
        (125, ']'): ('UnaryExpression', 2), (125, '^'): ('UnaryExpression', 2),
        (125, '{'): ('UnaryExpression', 2), (125, '|'): ('UnaryExpression', 2),
        (125, '||'): ('UnaryExpression', 2),
        (126, '&&'): ('UnaryExpression', 2),
        (126, '&'): ('UnaryExpression', 2), (126, '('): ('UnaryExpression', 2),
        (126, ')'): ('UnaryExpression', 2), (126, '+'): ('UnaryExpression', 2),
        (126, ','): ('UnaryExpression', 2), (126, '-'): ('UnaryExpression', 2),
        (126, ':'): ('UnaryExpression', 2), (126, ';'): ('UnaryExpression', 2),
        (126, '?'): ('UnaryExpression', 2),
        (126, 'ASSIGNMENT_OPERATOR'): ('UnaryExpression', 2),
        (126, 'BREAK'): ('UnaryExpression', 2),
        (126, 'CONTINUE'): ('UnaryExpression', 2),
        (126, 'DELETE'): ('UnaryExpression', 2),
        (126, 'EQUALITY_OPERATOR'): ('UnaryExpression', 2),
        (126, 'FALSE'): ('UnaryExpression', 2),
        (126, 'FLOAT'): ('UnaryExpression', 2),
        (126, 'FOR'): ('UnaryExpression', 2),
        (126, 'IDENTIFIER'): ('UnaryExpression', 2),
        (126, 'IF'): ('UnaryExpression', 2),
        (126, 'IN'): ('UnaryExpression', 2),
        (126, 'INCREMENT_OPERATOR'): ('UnaryExpression', 2),
        (126, 'INTEGER'): ('UnaryExpression', 2),
        (126, 'MULTIPLICATIVE_OPERATOR'): ('UnaryExpression', 2),
        (126, 'NEW'): ('UnaryExpression', 2),
        (126, 'NULL'): ('UnaryExpression', 2),
        (126, 'RELATIONAL_OPERATOR'): ('UnaryExpression', 2),
        (126, 'RETURN'): ('UnaryExpression', 2),
        (126, 'SHIFT_OPERATOR'): ('UnaryExpression', 2),
        (126, 'STRING'): ('UnaryExpression', 2),
        (126, 'THIS'): ('UnaryExpression', 2),
        (126, 'TRUE'): ('UnaryExpression', 2),
        (126, 'UNARY_OPERATOR'): ('UnaryExpression', 2),
        (126, 'VAR'): ('UnaryExpression', 2),
        (126, 'WHILE'): ('UnaryExpression', 2),
        (126, 'WITH'): ('UnaryExpression', 2),
        (126, ']'): ('UnaryExpression', 2), (126, '^'): ('UnaryExpression', 2),
        (126, '{'): ('UnaryExpression', 2), (126, '|'): ('UnaryExpression', 2),
        (126, '||'): ('UnaryExpression', 2), (127, 'IDENTIFIER'): ('_10?', 0),
        (129, '&&'): ('UnaryExpression', 3),
        (129, '&'): ('UnaryExpression', 3), (129, '('): ('UnaryExpression', 3),
        (129, ')'): ('UnaryExpression', 3), (129, '+'): ('UnaryExpression', 3),
        (129, ','): ('UnaryExpression', 3), (129, '-'): ('UnaryExpression', 3),
        (129, ':'): ('UnaryExpression', 3), (129, ';'): ('UnaryExpression', 3),
        (129, '?'): ('UnaryExpression', 3),
        (129, 'ASSIGNMENT_OPERATOR'): ('UnaryExpression', 3),
        (129, 'BREAK'): ('UnaryExpression', 3),
        (129, 'CONTINUE'): ('UnaryExpression', 3),
        (129, 'DELETE'): ('UnaryExpression', 3),
        (129, 'EQUALITY_OPERATOR'): ('UnaryExpression', 3),
        (129, 'FALSE'): ('UnaryExpression', 3),
        (129, 'FLOAT'): ('UnaryExpression', 3),
        (129, 'FOR'): ('UnaryExpression', 3),
        (129, 'IDENTIFIER'): ('UnaryExpression', 3),
        (129, 'IF'): ('UnaryExpression', 3),
        (129, 'IN'): ('UnaryExpression', 3),
        (129, 'INCREMENT_OPERATOR'): ('UnaryExpression', 3),
        (129, 'INTEGER'): ('UnaryExpression', 3),
        (129, 'MULTIPLICATIVE_OPERATOR'): ('UnaryExpression', 3),
        (129, 'NEW'): ('UnaryExpression', 3),
        (129, 'NULL'): ('UnaryExpression', 3),
        (129, 'RELATIONAL_OPERATOR'): ('UnaryExpression', 3),
        (129, 'RETURN'): ('UnaryExpression', 3),
        (129, 'SHIFT_OPERATOR'): ('UnaryExpression', 3),
        (129, 'STRING'): ('UnaryExpression', 3),
        (129, 'THIS'): ('UnaryExpression', 3),
        (129, 'TRUE'): ('UnaryExpression', 3),
        (129, 'UNARY_OPERATOR'): ('UnaryExpression', 3),
        (129, 'VAR'): ('UnaryExpression', 3),
        (129, 'WHILE'): ('UnaryExpression', 3),
        (129, 'WITH'): ('UnaryExpression', 3),
        (129, ']'): ('UnaryExpression', 3), (129, '^'): ('UnaryExpression', 3),
        (129, '{'): ('UnaryExpression', 3), (129, '|'): ('UnaryExpression', 3),
        (129, '||'): ('UnaryExpression', 3), (13, ')'): ('ParameterList', 2),
        (131, 'IDENTIFIER'): ('_10?', 2), (133, '&&'): ('UnaryExpression', 2),
        (133, '&'): ('UnaryExpression', 2), (133, '('): ('UnaryExpression', 2),
        (133, ')'): ('UnaryExpression', 2), (133, '+'): ('UnaryExpression', 2),
        (133, ','): ('UnaryExpression', 2), (133, '-'): ('UnaryExpression', 2),
        (133, ':'): ('UnaryExpression', 2), (133, ';'): ('UnaryExpression', 2),
        (133, '?'): ('UnaryExpression', 2),
        (133, 'ASSIGNMENT_OPERATOR'): ('UnaryExpression', 2),
        (133, 'BREAK'): ('UnaryExpression', 2),
        (133, 'CONTINUE'): ('UnaryExpression', 2),
        (133, 'DELETE'): ('UnaryExpression', 2),
        (133, 'EQUALITY_OPERATOR'): ('UnaryExpression', 2),
        (133, 'FALSE'): ('UnaryExpression', 2),
        (133, 'FLOAT'): ('UnaryExpression', 2),
        (133, 'FOR'): ('UnaryExpression', 2),
        (133, 'IDENTIFIER'): ('UnaryExpression', 2),
        (133, 'IF'): ('UnaryExpression', 2),
        (133, 'IN'): ('UnaryExpression', 2),
        (133, 'INCREMENT_OPERATOR'): ('UnaryExpression', 2),
        (133, 'INTEGER'): ('UnaryExpression', 2),
        (133, 'MULTIPLICATIVE_OPERATOR'): ('UnaryExpression', 2),
        (133, 'NEW'): ('UnaryExpression', 2),
        (133, 'NULL'): ('UnaryExpression', 2),
        (133, 'RELATIONAL_OPERATOR'): ('UnaryExpression', 2),
        (133, 'RETURN'): ('UnaryExpression', 2),
        (133, 'SHIFT_OPERATOR'): ('UnaryExpression', 2),
        (133, 'STRING'): ('UnaryExpression', 2),
        (133, 'THIS'): ('UnaryExpression', 2),
        (133, 'TRUE'): ('UnaryExpression', 2),
        (133, 'UNARY_OPERATOR'): ('UnaryExpression', 2),
        (133, 'VAR'): ('UnaryExpression', 2),
        (133, 'WHILE'): ('UnaryExpression', 2),
        (133, 'WITH'): ('UnaryExpression', 2),
        (133, ']'): ('UnaryExpression', 2), (133, '^'): ('UnaryExpression', 2),
        (133, '{'): ('UnaryExpression', 2), (133, '|'): ('UnaryExpression', 2),
        (133, '||'): ('UnaryExpression', 2),
        (134, '&&'): ('ConstructorCall', 1),
        (134, '&'): ('ConstructorCall', 1), (134, ')'): ('ConstructorCall', 1),
        (134, '+'): ('ConstructorCall', 1), (134, ','): ('ConstructorCall', 1),
        (134, '-'): ('ConstructorCall', 1), (134, ':'): ('ConstructorCall', 1),
        (134, ';'): ('ConstructorCall', 1), (134, '?'): ('ConstructorCall', 1),
        (134, 'ASSIGNMENT_OPERATOR'): ('ConstructorCall', 1),
        (134, 'BREAK'): ('ConstructorCall', 1),
        (134, 'CONTINUE'): ('ConstructorCall', 1),
        (134, 'DELETE'): ('ConstructorCall', 1),
        (134, 'EQUALITY_OPERATOR'): ('ConstructorCall', 1),
        (134, 'FALSE'): ('ConstructorCall', 1),
        (134, 'FLOAT'): ('ConstructorCall', 1),
        (134, 'FOR'): ('ConstructorCall', 1),
        (134, 'IDENTIFIER'): ('ConstructorCall', 1),
        (134, 'IF'): ('ConstructorCall', 1),
        (134, 'IN'): ('ConstructorCall', 1),
        (134, 'INCREMENT_OPERATOR'): ('ConstructorCall', 1),
        (134, 'INTEGER'): ('ConstructorCall', 1),
        (134, 'MULTIPLICATIVE_OPERATOR'): ('ConstructorCall', 1),
        (134, 'NEW'): ('ConstructorCall', 1),
        (134, 'NULL'): ('ConstructorCall', 1),
        (134, 'RELATIONAL_OPERATOR'): ('ConstructorCall', 1),
        (134, 'RETURN'): ('ConstructorCall', 1),
        (134, 'SHIFT_OPERATOR'): ('ConstructorCall', 1),
        (134, 'STRING'): ('ConstructorCall', 1),
        (134, 'THIS'): ('ConstructorCall', 1),
        (134, 'TRUE'): ('ConstructorCall', 1),
        (134, 'UNARY_OPERATOR'): ('ConstructorCall', 1),
        (134, 'VAR'): ('ConstructorCall', 1),
        (134, 'WHILE'): ('ConstructorCall', 1),
        (134, 'WITH'): ('ConstructorCall', 1),
        (134, ']'): ('ConstructorCall', 1), (134, '^'): ('ConstructorCall', 1),
        (134, '{'): ('ConstructorCall', 1), (134, '|'): ('ConstructorCall', 1),
        (134, '||'): ('ConstructorCall', 1),
        (135, ')'): ('ArgumentListOpt', 0),
        (137, '&&'): ('ConstructorCall', 4),
        (137, '&'): ('ConstructorCall', 4), (137, '('): ('ConstructorCall', 4),
        (137, ')'): ('ConstructorCall', 4), (137, '+'): ('ConstructorCall', 4),
        (137, ','): ('ConstructorCall', 4), (137, '-'): ('ConstructorCall', 4),
        (137, ':'): ('ConstructorCall', 4), (137, ';'): ('ConstructorCall', 4),
        (137, '?'): ('ConstructorCall', 4),
        (137, 'ASSIGNMENT_OPERATOR'): ('ConstructorCall', 4),
        (137, 'BREAK'): ('ConstructorCall', 4),
        (137, 'CONTINUE'): ('ConstructorCall', 4),
        (137, 'DELETE'): ('ConstructorCall', 4),
        (137, 'EQUALITY_OPERATOR'): ('ConstructorCall', 4),
        (137, 'FALSE'): ('ConstructorCall', 4),
        (137, 'FLOAT'): ('ConstructorCall', 4),
        (137, 'FOR'): ('ConstructorCall', 4),
        (137, 'IDENTIFIER'): ('ConstructorCall', 4),
        (137, 'IF'): ('ConstructorCall', 4),
        (137, 'IN'): ('ConstructorCall', 4),
        (137, 'INCREMENT_OPERATOR'): ('ConstructorCall', 4),
        (137, 'INTEGER'): ('ConstructorCall', 4),
        (137, 'MULTIPLICATIVE_OPERATOR'): ('ConstructorCall', 4),
        (137, 'NEW'): ('ConstructorCall', 4),
        (137, 'NULL'): ('ConstructorCall', 4),
        (137, 'RELATIONAL_OPERATOR'): ('ConstructorCall', 4),
        (137, 'RETURN'): ('ConstructorCall', 4),
        (137, 'SHIFT_OPERATOR'): ('ConstructorCall', 4),
        (137, 'STRING'): ('ConstructorCall', 4),
        (137, 'THIS'): ('ConstructorCall', 4),
        (137, 'TRUE'): ('ConstructorCall', 4),
        (137, 'UNARY_OPERATOR'): ('ConstructorCall', 4),
        (137, 'VAR'): ('ConstructorCall', 4),
        (137, 'WHILE'): ('ConstructorCall', 4),
        (137, 'WITH'): ('ConstructorCall', 4),
        (137, ']'): ('ConstructorCall', 4), (137, '^'): ('ConstructorCall', 4),
        (137, '{'): ('ConstructorCall', 4), (137, '|'): ('ConstructorCall', 4),
        (137, '||'): ('ConstructorCall', 4),
        (139, '&&'): ('ConstructorCall', 3),
        (139, '&'): ('ConstructorCall', 3), (139, '('): ('ConstructorCall', 3),
        (139, ')'): ('ConstructorCall', 3), (139, '+'): ('ConstructorCall', 3),
        (139, ','): ('ConstructorCall', 3), (139, '-'): ('ConstructorCall', 3),
        (139, ':'): ('ConstructorCall', 3), (139, ';'): ('ConstructorCall', 3),
        (139, '?'): ('ConstructorCall', 3),
        (139, 'ASSIGNMENT_OPERATOR'): ('ConstructorCall', 3),
        (139, 'BREAK'): ('ConstructorCall', 3),
        (139, 'CONTINUE'): ('ConstructorCall', 3),
        (139, 'DELETE'): ('ConstructorCall', 3),
        (139, 'EQUALITY_OPERATOR'): ('ConstructorCall', 3),
        (139, 'FALSE'): ('ConstructorCall', 3),
        (139, 'FLOAT'): ('ConstructorCall', 3),
        (139, 'FOR'): ('ConstructorCall', 3),
        (139, 'IDENTIFIER'): ('ConstructorCall', 3),
        (139, 'IF'): ('ConstructorCall', 3),
        (139, 'IN'): ('ConstructorCall', 3),
        (139, 'INCREMENT_OPERATOR'): ('ConstructorCall', 3),
        (139, 'INTEGER'): ('ConstructorCall', 3),
        (139, 'MULTIPLICATIVE_OPERATOR'): ('ConstructorCall', 3),
        (139, 'NEW'): ('ConstructorCall', 3),
        (139, 'NULL'): ('ConstructorCall', 3),
        (139, 'RELATIONAL_OPERATOR'): ('ConstructorCall', 3),
        (139, 'RETURN'): ('ConstructorCall', 3),
        (139, 'SHIFT_OPERATOR'): ('ConstructorCall', 3),
        (139, 'STRING'): ('ConstructorCall', 3),
        (139, 'THIS'): ('ConstructorCall', 3),
        (139, 'TRUE'): ('ConstructorCall', 3),
        (139, 'UNARY_OPERATOR'): ('ConstructorCall', 3),
        (139, 'VAR'): ('ConstructorCall', 3),
        (139, 'WHILE'): ('ConstructorCall', 3),
        (139, 'WITH'): ('ConstructorCall', 3),
        (139, ']'): ('ConstructorCall', 3), (139, '^'): ('ConstructorCall', 3),
        (139, '{'): ('ConstructorCall', 3), (139, '|'): ('ConstructorCall', 3),
        (139, '||'): ('ConstructorCall', 3),
        (140, '&&'): ('MemberExpression', 1),
        (140, '&'): ('MemberExpression', 1),
        (140, ')'): ('MemberExpression', 1),
        (140, '+'): ('MemberExpression', 1),
        (140, ','): ('MemberExpression', 1),
        (140, '-'): ('MemberExpression', 1),
        (140, ':'): ('MemberExpression', 1),
        (140, ';'): ('MemberExpression', 1),
        (140, '?'): ('MemberExpression', 1),
        (140, 'ASSIGNMENT_OPERATOR'): ('MemberExpression', 1),
        (140, 'BREAK'): ('MemberExpression', 1),
        (140, 'CONTINUE'): ('MemberExpression', 1),
        (140, 'DELETE'): ('MemberExpression', 1),
        (140, 'EQUALITY_OPERATOR'): ('MemberExpression', 1),
        (140, 'FALSE'): ('MemberExpression', 1),
        (140, 'FLOAT'): ('MemberExpression', 1),
        (140, 'FOR'): ('MemberExpression', 1),
        (140, 'IDENTIFIER'): ('MemberExpression', 1),
        (140, 'IF'): ('MemberExpression', 1),
        (140, 'IN'): ('MemberExpression', 1),
        (140, 'INCREMENT_OPERATOR'): ('MemberExpression', 1),
        (140, 'INTEGER'): ('MemberExpression', 1),
        (140, 'MULTIPLICATIVE_OPERATOR'): ('MemberExpression', 1),
        (140, 'NEW'): ('MemberExpression', 1),
        (140, 'NULL'): ('MemberExpression', 1),
        (140, 'RELATIONAL_OPERATOR'): ('MemberExpression', 1),
        (140, 'RETURN'): ('MemberExpression', 1),
        (140, 'SHIFT_OPERATOR'): ('MemberExpression', 1),
        (140, 'STRING'): ('MemberExpression', 1),
        (140, 'THIS'): ('MemberExpression', 1),
        (140, 'TRUE'): ('MemberExpression', 1),
        (140, 'UNARY_OPERATOR'): ('MemberExpression', 1),
        (140, 'VAR'): ('MemberExpression', 1),
        (140, 'WHILE'): ('MemberExpression', 1),
        (140, 'WITH'): ('MemberExpression', 1),
        (140, ']'): ('MemberExpression', 1),
        (140, '^'): ('MemberExpression', 1),
        (140, '{'): ('MemberExpression', 1),
        (140, '|'): ('MemberExpression', 1),
        (140, '||'): ('MemberExpression', 1),
        (142, '&&'): ('MemberExpression', 3),
        (142, '&'): ('MemberExpression', 3),
        (142, '('): ('MemberExpression', 3),
        (142, ')'): ('MemberExpression', 3),
        (142, '+'): ('MemberExpression', 3),
        (142, ','): ('MemberExpression', 3),
        (142, '-'): ('MemberExpression', 3),
        (142, ':'): ('MemberExpression', 3),
        (142, ';'): ('MemberExpression', 3),
        (142, '?'): ('MemberExpression', 3),
        (142, 'ASSIGNMENT_OPERATOR'): ('MemberExpression', 3),
        (142, 'BREAK'): ('MemberExpression', 3),
        (142, 'CONTINUE'): ('MemberExpression', 3),
        (142, 'DELETE'): ('MemberExpression', 3),
        (142, 'EQUALITY_OPERATOR'): ('MemberExpression', 3),
        (142, 'FALSE'): ('MemberExpression', 3),
        (142, 'FLOAT'): ('MemberExpression', 3),
        (142, 'FOR'): ('MemberExpression', 3),
        (142, 'IDENTIFIER'): ('MemberExpression', 3),
        (142, 'IF'): ('MemberExpression', 3),
        (142, 'IN'): ('MemberExpression', 3),
        (142, 'INCREMENT_OPERATOR'): ('MemberExpression', 3),
        (142, 'INTEGER'): ('MemberExpression', 3),
        (142, 'MULTIPLICATIVE_OPERATOR'): ('MemberExpression', 3),
        (142, 'NEW'): ('MemberExpression', 3),
        (142, 'NULL'): ('MemberExpression', 3),
        (142, 'RELATIONAL_OPERATOR'): ('MemberExpression', 3),
        (142, 'RETURN'): ('MemberExpression', 3),
        (142, 'SHIFT_OPERATOR'): ('MemberExpression', 3),
        (142, 'STRING'): ('MemberExpression', 3),
        (142, 'THIS'): ('MemberExpression', 3),
        (142, 'TRUE'): ('MemberExpression', 3),
        (142, 'UNARY_OPERATOR'): ('MemberExpression', 3),
        (142, 'VAR'): ('MemberExpression', 3),
        (142, 'WHILE'): ('MemberExpression', 3),
        (142, 'WITH'): ('MemberExpression', 3),
        (142, ']'): ('MemberExpression', 3),
        (142, '^'): ('MemberExpression', 3),
        (142, '{'): ('MemberExpression', 3),
        (142, '|'): ('MemberExpression', 3),
        (142, '||'): ('MemberExpression', 3),
        (145, '&&'): ('MemberExpression', 4),
        (145, '&'): ('MemberExpression', 4),
        (145, '('): ('MemberExpression', 4),
        (145, ')'): ('MemberExpression', 4),
        (145, '+'): ('MemberExpression', 4),
        (145, ','): ('MemberExpression', 4),
        (145, '-'): ('MemberExpression', 4),
        (145, ':'): ('MemberExpression', 4),
        (145, ';'): ('MemberExpression', 4),
        (145, '?'): ('MemberExpression', 4),
        (145, 'ASSIGNMENT_OPERATOR'): ('MemberExpression', 4),
        (145, 'BREAK'): ('MemberExpression', 4),
        (145, 'CONTINUE'): ('MemberExpression', 4),
        (145, 'DELETE'): ('MemberExpression', 4),
        (145, 'EQUALITY_OPERATOR'): ('MemberExpression', 4),
        (145, 'FALSE'): ('MemberExpression', 4),
        (145, 'FLOAT'): ('MemberExpression', 4),
        (145, 'FOR'): ('MemberExpression', 4),
        (145, 'IDENTIFIER'): ('MemberExpression', 4),
        (145, 'IF'): ('MemberExpression', 4),
        (145, 'IN'): ('MemberExpression', 4),
        (145, 'INCREMENT_OPERATOR'): ('MemberExpression', 4),
        (145, 'INTEGER'): ('MemberExpression', 4),
        (145, 'MULTIPLICATIVE_OPERATOR'): ('MemberExpression', 4),
        (145, 'NEW'): ('MemberExpression', 4),
        (145, 'NULL'): ('MemberExpression', 4),
        (145, 'RELATIONAL_OPERATOR'): ('MemberExpression', 4),
        (145, 'RETURN'): ('MemberExpression', 4),
        (145, 'SHIFT_OPERATOR'): ('MemberExpression', 4),
        (145, 'STRING'): ('MemberExpression', 4),
        (145, 'THIS'): ('MemberExpression', 4),
        (145, 'TRUE'): ('MemberExpression', 4),
        (145, 'UNARY_OPERATOR'): ('MemberExpression', 4),
        (145, 'VAR'): ('MemberExpression', 4),
        (145, 'WHILE'): ('MemberExpression', 4),
        (145, 'WITH'): ('MemberExpression', 4),
        (145, ']'): ('MemberExpression', 4),
        (145, '^'): ('MemberExpression', 4),
        (145, '{'): ('MemberExpression', 4),
        (145, '|'): ('MemberExpression', 4),
        (145, '||'): ('MemberExpression', 4),
        (146, ')'): ('ArgumentListOpt', 0),
        (148, '&&'): ('MemberExpression', 4),
        (148, '&'): ('MemberExpression', 4),
        (148, '('): ('MemberExpression', 4),
        (148, ')'): ('MemberExpression', 4),
        (148, '+'): ('MemberExpression', 4),
        (148, ','): ('MemberExpression', 4),
        (148, '-'): ('MemberExpression', 4),
        (148, ':'): ('MemberExpression', 4),
        (148, ';'): ('MemberExpression', 4),
        (148, '?'): ('MemberExpression', 4),
        (148, 'ASSIGNMENT_OPERATOR'): ('MemberExpression', 4),
        (148, 'BREAK'): ('MemberExpression', 4),
        (148, 'CONTINUE'): ('MemberExpression', 4),
        (148, 'DELETE'): ('MemberExpression', 4),
        (148, 'EQUALITY_OPERATOR'): ('MemberExpression', 4),
        (148, 'FALSE'): ('MemberExpression', 4),
        (148, 'FLOAT'): ('MemberExpression', 4),
        (148, 'FOR'): ('MemberExpression', 4),
        (148, 'IDENTIFIER'): ('MemberExpression', 4),
        (148, 'IF'): ('MemberExpression', 4),
        (148, 'IN'): ('MemberExpression', 4),
        (148, 'INCREMENT_OPERATOR'): ('MemberExpression', 4),
        (148, 'INTEGER'): ('MemberExpression', 4),
        (148, 'MULTIPLICATIVE_OPERATOR'): ('MemberExpression', 4),
        (148, 'NEW'): ('MemberExpression', 4),
        (148, 'NULL'): ('MemberExpression', 4),
        (148, 'RELATIONAL_OPERATOR'): ('MemberExpression', 4),
        (148, 'RETURN'): ('MemberExpression', 4),
        (148, 'SHIFT_OPERATOR'): ('MemberExpression', 4),
        (148, 'STRING'): ('MemberExpression', 4),
        (148, 'THIS'): ('MemberExpression', 4),
        (148, 'TRUE'): ('MemberExpression', 4),
        (148, 'UNARY_OPERATOR'): ('MemberExpression', 4),
        (148, 'VAR'): ('MemberExpression', 4),
        (148, 'WHILE'): ('MemberExpression', 4),
        (148, 'WITH'): ('MemberExpression', 4),
        (148, ']'): ('MemberExpression', 4),
        (148, '^'): ('MemberExpression', 4),
        (148, '{'): ('MemberExpression', 4),
        (148, '|'): ('MemberExpression', 4),
        (148, '||'): ('MemberExpression', 4),
        (149, ')'): ('ArgumentListOpt', 1), (15, ')'): ('_3*', 3),
        (15, ','): ('_3*', 3), (150, ')'): ('ArgumentList', 1),
        (152, ')'): ('ArgumentList', 3), (155, '&&'): ('PrimaryExpression', 3),
        (155, '&'): ('PrimaryExpression', 3),
        (155, '('): ('PrimaryExpression', 3),
        (155, ')'): ('PrimaryExpression', 3),
        (155, '+'): ('PrimaryExpression', 3),
        (155, ','): ('PrimaryExpression', 3),
        (155, '-'): ('PrimaryExpression', 3),
        (155, '.'): ('PrimaryExpression', 3),
        (155, ':'): ('PrimaryExpression', 3),
        (155, ';'): ('PrimaryExpression', 3),
        (155, '?'): ('PrimaryExpression', 3),
        (155, 'ASSIGNMENT_OPERATOR'): ('PrimaryExpression', 3),
        (155, 'BREAK'): ('PrimaryExpression', 3),
        (155, 'CONTINUE'): ('PrimaryExpression', 3),
        (155, 'DELETE'): ('PrimaryExpression', 3),
        (155, 'EQUALITY_OPERATOR'): ('PrimaryExpression', 3),
        (155, 'FALSE'): ('PrimaryExpression', 3),
        (155, 'FLOAT'): ('PrimaryExpression', 3),
        (155, 'FOR'): ('PrimaryExpression', 3),
        (155, 'IDENTIFIER'): ('PrimaryExpression', 3),
        (155, 'IF'): ('PrimaryExpression', 3),
        (155, 'IN'): ('PrimaryExpression', 3),
        (155, 'INCREMENT_OPERATOR'): ('PrimaryExpression', 3),
        (155, 'INTEGER'): ('PrimaryExpression', 3),
        (155, 'MULTIPLICATIVE_OPERATOR'): ('PrimaryExpression', 3),
        (155, 'NEW'): ('PrimaryExpression', 3),
        (155, 'NULL'): ('PrimaryExpression', 3),
        (155, 'RELATIONAL_OPERATOR'): ('PrimaryExpression', 3),
        (155, 'RETURN'): ('PrimaryExpression', 3),
        (155, 'SHIFT_OPERATOR'): ('PrimaryExpression', 3),
        (155, 'STRING'): ('PrimaryExpression', 3),
        (155, 'THIS'): ('PrimaryExpression', 3),
        (155, 'TRUE'): ('PrimaryExpression', 3),
        (155, 'UNARY_OPERATOR'): ('PrimaryExpression', 3),
        (155, 'VAR'): ('PrimaryExpression', 3),
        (155, 'WHILE'): ('PrimaryExpression', 3),
        (155, 'WITH'): ('PrimaryExpression', 3),
        (155, '['): ('PrimaryExpression', 3),
        (155, ']'): ('PrimaryExpression', 3),
        (155, '^'): ('PrimaryExpression', 3),
        (155, '{'): ('PrimaryExpression', 3),
        (155, '|'): ('PrimaryExpression', 3),
        (155, '||'): ('PrimaryExpression', 3),
        (156, '&&'): ('PrimaryExpression', 1),
        (156, '&'): ('PrimaryExpression', 1),
        (156, '('): ('PrimaryExpression', 1),
        (156, ')'): ('PrimaryExpression', 1),
        (156, '+'): ('PrimaryExpression', 1),
        (156, ','): ('PrimaryExpression', 1),
        (156, '-'): ('PrimaryExpression', 1),
        (156, '.'): ('PrimaryExpression', 1),
        (156, ':'): ('PrimaryExpression', 1),
        (156, ';'): ('PrimaryExpression', 1),
        (156, '?'): ('PrimaryExpression', 1),
        (156, 'ASSIGNMENT_OPERATOR'): ('PrimaryExpression', 1),
        (156, 'BREAK'): ('PrimaryExpression', 1),
        (156, 'CONTINUE'): ('PrimaryExpression', 1),
        (156, 'DELETE'): ('PrimaryExpression', 1),
        (156, 'EQUALITY_OPERATOR'): ('PrimaryExpression', 1),
        (156, 'FALSE'): ('PrimaryExpression', 1),
        (156, 'FLOAT'): ('PrimaryExpression', 1),
        (156, 'FOR'): ('PrimaryExpression', 1),
        (156, 'IDENTIFIER'): ('PrimaryExpression', 1),
        (156, 'IF'): ('PrimaryExpression', 1),
        (156, 'IN'): ('PrimaryExpression', 1),
        (156, 'INCREMENT_OPERATOR'): ('PrimaryExpression', 1),
        (156, 'INTEGER'): ('PrimaryExpression', 1),
        (156, 'MULTIPLICATIVE_OPERATOR'): ('PrimaryExpression', 1),
        (156, 'NEW'): ('PrimaryExpression', 1),
        (156, 'NULL'): ('PrimaryExpression', 1),
        (156, 'RELATIONAL_OPERATOR'): ('PrimaryExpression', 1),
        (156, 'RETURN'): ('PrimaryExpression', 1),
        (156, 'SHIFT_OPERATOR'): ('PrimaryExpression', 1),
        (156, 'STRING'): ('PrimaryExpression', 1),
        (156, 'THIS'): ('PrimaryExpression', 1),
        (156, 'TRUE'): ('PrimaryExpression', 1),
        (156, 'UNARY_OPERATOR'): ('PrimaryExpression', 1),
        (156, 'VAR'): ('PrimaryExpression', 1),
        (156, 'WHILE'): ('PrimaryExpression', 1),
        (156, 'WITH'): ('PrimaryExpression', 1),
        (156, '['): ('PrimaryExpression', 1),
        (156, ']'): ('PrimaryExpression', 1),
        (156, '^'): ('PrimaryExpression', 1),
        (156, '{'): ('PrimaryExpression', 1),
        (156, '|'): ('PrimaryExpression', 1),
        (156, '||'): ('PrimaryExpression', 1),
        (157, '&&'): ('PrimaryExpression', 1),
        (157, '&'): ('PrimaryExpression', 1),
        (157, '('): ('PrimaryExpression', 1),
        (157, ')'): ('PrimaryExpression', 1),
        (157, '+'): ('PrimaryExpression', 1),
        (157, ','): ('PrimaryExpression', 1),
        (157, '-'): ('PrimaryExpression', 1),
        (157, '.'): ('PrimaryExpression', 1),
        (157, ':'): ('PrimaryExpression', 1),
        (157, ';'): ('PrimaryExpression', 1),
        (157, '?'): ('PrimaryExpression', 1),
        (157, 'ASSIGNMENT_OPERATOR'): ('PrimaryExpression', 1),
        (157, 'BREAK'): ('PrimaryExpression', 1),
        (157, 'CONTINUE'): ('PrimaryExpression', 1),
        (157, 'DELETE'): ('PrimaryExpression', 1),
        (157, 'EQUALITY_OPERATOR'): ('PrimaryExpression', 1),
        (157, 'FALSE'): ('PrimaryExpression', 1),
        (157, 'FLOAT'): ('PrimaryExpression', 1),
        (157, 'FOR'): ('PrimaryExpression', 1),
        (157, 'IDENTIFIER'): ('PrimaryExpression', 1),
        (157, 'IF'): ('PrimaryExpression', 1),
        (157, 'IN'): ('PrimaryExpression', 1),
        (157, 'INCREMENT_OPERATOR'): ('PrimaryExpression', 1),
        (157, 'INTEGER'): ('PrimaryExpression', 1),
        (157, 'MULTIPLICATIVE_OPERATOR'): ('PrimaryExpression', 1),
        (157, 'NEW'): ('PrimaryExpression', 1),
        (157, 'NULL'): ('PrimaryExpression', 1),
        (157, 'RELATIONAL_OPERATOR'): ('PrimaryExpression', 1),
        (157, 'RETURN'): ('PrimaryExpression', 1),
        (157, 'SHIFT_OPERATOR'): ('PrimaryExpression', 1),
        (157, 'STRING'): ('PrimaryExpression', 1),
        (157, 'THIS'): ('PrimaryExpression', 1),
        (157, 'TRUE'): ('PrimaryExpression', 1),
        (157, 'UNARY_OPERATOR'): ('PrimaryExpression', 1),
        (157, 'VAR'): ('PrimaryExpression', 1),
        (157, 'WHILE'): ('PrimaryExpression', 1),
        (157, 'WITH'): ('PrimaryExpression', 1),
        (157, '['): ('PrimaryExpression', 1),
        (157, ']'): ('PrimaryExpression', 1),
        (157, '^'): ('PrimaryExpression', 1),
        (157, '{'): ('PrimaryExpression', 1),
        (157, '|'): ('PrimaryExpression', 1),
        (157, '||'): ('PrimaryExpression', 1),
        (158, '&&'): ('PrimaryExpression', 1),
        (158, '&'): ('PrimaryExpression', 1),
        (158, '('): ('PrimaryExpression', 1),
        (158, ')'): ('PrimaryExpression', 1),
        (158, '+'): ('PrimaryExpression', 1),
        (158, ','): ('PrimaryExpression', 1),
        (158, '-'): ('PrimaryExpression', 1),
        (158, '.'): ('PrimaryExpression', 1),
        (158, ':'): ('PrimaryExpression', 1),
        (158, ';'): ('PrimaryExpression', 1),
        (158, '?'): ('PrimaryExpression', 1),
        (158, 'ASSIGNMENT_OPERATOR'): ('PrimaryExpression', 1),
        (158, 'BREAK'): ('PrimaryExpression', 1),
        (158, 'CONTINUE'): ('PrimaryExpression', 1),
        (158, 'DELETE'): ('PrimaryExpression', 1),
        (158, 'EQUALITY_OPERATOR'): ('PrimaryExpression', 1),
        (158, 'FALSE'): ('PrimaryExpression', 1),
        (158, 'FLOAT'): ('PrimaryExpression', 1),
        (158, 'FOR'): ('PrimaryExpression', 1),
        (158, 'IDENTIFIER'): ('PrimaryExpression', 1),
        (158, 'IF'): ('PrimaryExpression', 1),
        (158, 'IN'): ('PrimaryExpression', 1),
        (158, 'INCREMENT_OPERATOR'): ('PrimaryExpression', 1),
        (158, 'INTEGER'): ('PrimaryExpression', 1),
        (158, 'MULTIPLICATIVE_OPERATOR'): ('PrimaryExpression', 1),
        (158, 'NEW'): ('PrimaryExpression', 1),
        (158, 'NULL'): ('PrimaryExpression', 1),
        (158, 'RELATIONAL_OPERATOR'): ('PrimaryExpression', 1),
        (158, 'RETURN'): ('PrimaryExpression', 1),
        (158, 'SHIFT_OPERATOR'): ('PrimaryExpression', 1),
        (158, 'STRING'): ('PrimaryExpression', 1),
        (158, 'THIS'): ('PrimaryExpression', 1),
        (158, 'TRUE'): ('PrimaryExpression', 1),
        (158, 'UNARY_OPERATOR'): ('PrimaryExpression', 1),
        (158, 'VAR'): ('PrimaryExpression', 1),
        (158, 'WHILE'): ('PrimaryExpression', 1),
        (158, 'WITH'): ('PrimaryExpression', 1),
        (158, '['): ('PrimaryExpression', 1),
        (158, ']'): ('PrimaryExpression', 1),
        (158, '^'): ('PrimaryExpression', 1),
        (158, '{'): ('PrimaryExpression', 1),
        (158, '|'): ('PrimaryExpression', 1),
        (158, '||'): ('PrimaryExpression', 1),
        (159, '&&'): ('PrimaryExpression', 1),
        (159, '&'): ('PrimaryExpression', 1),
        (159, '('): ('PrimaryExpression', 1),
        (159, ')'): ('PrimaryExpression', 1),
        (159, '+'): ('PrimaryExpression', 1),
        (159, ','): ('PrimaryExpression', 1),
        (159, '-'): ('PrimaryExpression', 1),
        (159, '.'): ('PrimaryExpression', 1),
        (159, ':'): ('PrimaryExpression', 1),
        (159, ';'): ('PrimaryExpression', 1),
        (159, '?'): ('PrimaryExpression', 1),
        (159, 'ASSIGNMENT_OPERATOR'): ('PrimaryExpression', 1),
        (159, 'BREAK'): ('PrimaryExpression', 1),
        (159, 'CONTINUE'): ('PrimaryExpression', 1),
        (159, 'DELETE'): ('PrimaryExpression', 1),
        (159, 'EQUALITY_OPERATOR'): ('PrimaryExpression', 1),
        (159, 'FALSE'): ('PrimaryExpression', 1),
        (159, 'FLOAT'): ('PrimaryExpression', 1),
        (159, 'FOR'): ('PrimaryExpression', 1),
        (159, 'IDENTIFIER'): ('PrimaryExpression', 1),
        (159, 'IF'): ('PrimaryExpression', 1),
        (159, 'IN'): ('PrimaryExpression', 1),
        (159, 'INCREMENT_OPERATOR'): ('PrimaryExpression', 1),
        (159, 'INTEGER'): ('PrimaryExpression', 1),
        (159, 'MULTIPLICATIVE_OPERATOR'): ('PrimaryExpression', 1),
        (159, 'NEW'): ('PrimaryExpression', 1),
        (159, 'NULL'): ('PrimaryExpression', 1),
        (159, 'RELATIONAL_OPERATOR'): ('PrimaryExpression', 1),
        (159, 'RETURN'): ('PrimaryExpression', 1),
        (159, 'SHIFT_OPERATOR'): ('PrimaryExpression', 1),
        (159, 'STRING'): ('PrimaryExpression', 1),
        (159, 'THIS'): ('PrimaryExpression', 1),
        (159, 'TRUE'): ('PrimaryExpression', 1),
        (159, 'UNARY_OPERATOR'): ('PrimaryExpression', 1),
        (159, 'VAR'): ('PrimaryExpression', 1),
        (159, 'WHILE'): ('PrimaryExpression', 1),
        (159, 'WITH'): ('PrimaryExpression', 1),
        (159, '['): ('PrimaryExpression', 1),
        (159, ']'): ('PrimaryExpression', 1),
        (159, '^'): ('PrimaryExpression', 1),
        (159, '{'): ('PrimaryExpression', 1),
        (159, '|'): ('PrimaryExpression', 1),
        (159, '||'): ('PrimaryExpression', 1), (16, '('): ('_4*', 0),
        (16, '-'): ('_4*', 0), (16, ';'): ('_4*', 0),
        (16, 'BREAK'): ('_4*', 0), (16, 'CONTINUE'): ('_4*', 0),
        (16, 'DELETE'): ('_4*', 0), (16, 'FALSE'): ('_4*', 0),
        (16, 'FLOAT'): ('_4*', 0), (16, 'FOR'): ('_4*', 0),
        (16, 'IDENTIFIER'): ('_4*', 0), (16, 'IF'): ('_4*', 0),
        (16, 'INCREMENT_OPERATOR'): ('_4*', 0), (16, 'INTEGER'): ('_4*', 0),
        (16, 'NEW'): ('_4*', 0), (16, 'NULL'): ('_4*', 0),
        (16, 'RETURN'): ('_4*', 0), (16, 'STRING'): ('_4*', 0),
        (16, 'THIS'): ('_4*', 0), (16, 'TRUE'): ('_4*', 0),
        (16, 'UNARY_OPERATOR'): ('_4*', 0), (16, 'VAR'): ('_4*', 0),
        (16, 'WHILE'): ('_4*', 0), (16, 'WITH'): ('_4*', 0),
        (16, '{'): ('_4*', 0), (16, '}'): ('_4*', 0),
        (160, '&&'): ('PrimaryExpression', 1),
        (160, '&'): ('PrimaryExpression', 1),
        (160, '('): ('PrimaryExpression', 1),
        (160, ')'): ('PrimaryExpression', 1),
        (160, '+'): ('PrimaryExpression', 1),
        (160, ','): ('PrimaryExpression', 1),
        (160, '-'): ('PrimaryExpression', 1),
        (160, '.'): ('PrimaryExpression', 1),
        (160, ':'): ('PrimaryExpression', 1),
        (160, ';'): ('PrimaryExpression', 1),
        (160, '?'): ('PrimaryExpression', 1),
        (160, 'ASSIGNMENT_OPERATOR'): ('PrimaryExpression', 1),
        (160, 'BREAK'): ('PrimaryExpression', 1),
        (160, 'CONTINUE'): ('PrimaryExpression', 1),
        (160, 'DELETE'): ('PrimaryExpression', 1),
        (160, 'EQUALITY_OPERATOR'): ('PrimaryExpression', 1),
        (160, 'FALSE'): ('PrimaryExpression', 1),
        (160, 'FLOAT'): ('PrimaryExpression', 1),
        (160, 'FOR'): ('PrimaryExpression', 1),
        (160, 'IDENTIFIER'): ('PrimaryExpression', 1),
        (160, 'IF'): ('PrimaryExpression', 1),
        (160, 'IN'): ('PrimaryExpression', 1),
        (160, 'INCREMENT_OPERATOR'): ('PrimaryExpression', 1),
        (160, 'INTEGER'): ('PrimaryExpression', 1),
        (160, 'MULTIPLICATIVE_OPERATOR'): ('PrimaryExpression', 1),
        (160, 'NEW'): ('PrimaryExpression', 1),
        (160, 'NULL'): ('PrimaryExpression', 1),
        (160, 'RELATIONAL_OPERATOR'): ('PrimaryExpression', 1),
        (160, 'RETURN'): ('PrimaryExpression', 1),
        (160, 'SHIFT_OPERATOR'): ('PrimaryExpression', 1),
        (160, 'STRING'): ('PrimaryExpression', 1),
        (160, 'THIS'): ('PrimaryExpression', 1),
        (160, 'TRUE'): ('PrimaryExpression', 1),
        (160, 'UNARY_OPERATOR'): ('PrimaryExpression', 1),
        (160, 'VAR'): ('PrimaryExpression', 1),
        (160, 'WHILE'): ('PrimaryExpression', 1),
        (160, 'WITH'): ('PrimaryExpression', 1),
        (160, '['): ('PrimaryExpression', 1),
        (160, ']'): ('PrimaryExpression', 1),
        (160, '^'): ('PrimaryExpression', 1),
        (160, '{'): ('PrimaryExpression', 1),
        (160, '|'): ('PrimaryExpression', 1),
        (160, '||'): ('PrimaryExpression', 1),
        (161, '&&'): ('PrimaryExpression', 1),
        (161, '&'): ('PrimaryExpression', 1),
        (161, '('): ('PrimaryExpression', 1),
        (161, ')'): ('PrimaryExpression', 1),
        (161, '+'): ('PrimaryExpression', 1),
        (161, ','): ('PrimaryExpression', 1),
        (161, '-'): ('PrimaryExpression', 1),
        (161, '.'): ('PrimaryExpression', 1),
        (161, ':'): ('PrimaryExpression', 1),
        (161, ';'): ('PrimaryExpression', 1),
        (161, '?'): ('PrimaryExpression', 1),
        (161, 'ASSIGNMENT_OPERATOR'): ('PrimaryExpression', 1),
        (161, 'BREAK'): ('PrimaryExpression', 1),
        (161, 'CONTINUE'): ('PrimaryExpression', 1),
        (161, 'DELETE'): ('PrimaryExpression', 1),
        (161, 'EQUALITY_OPERATOR'): ('PrimaryExpression', 1),
        (161, 'FALSE'): ('PrimaryExpression', 1),
        (161, 'FLOAT'): ('PrimaryExpression', 1),
        (161, 'FOR'): ('PrimaryExpression', 1),
        (161, 'IDENTIFIER'): ('PrimaryExpression', 1),
        (161, 'IF'): ('PrimaryExpression', 1),
        (161, 'IN'): ('PrimaryExpression', 1),
        (161, 'INCREMENT_OPERATOR'): ('PrimaryExpression', 1),
        (161, 'INTEGER'): ('PrimaryExpression', 1),
        (161, 'MULTIPLICATIVE_OPERATOR'): ('PrimaryExpression', 1),
        (161, 'NEW'): ('PrimaryExpression', 1),
        (161, 'NULL'): ('PrimaryExpression', 1),
        (161, 'RELATIONAL_OPERATOR'): ('PrimaryExpression', 1),
        (161, 'RETURN'): ('PrimaryExpression', 1),
        (161, 'SHIFT_OPERATOR'): ('PrimaryExpression', 1),
        (161, 'STRING'): ('PrimaryExpression', 1),
        (161, 'THIS'): ('PrimaryExpression', 1),
        (161, 'TRUE'): ('PrimaryExpression', 1),
        (161, 'UNARY_OPERATOR'): ('PrimaryExpression', 1),
        (161, 'VAR'): ('PrimaryExpression', 1),
        (161, 'WHILE'): ('PrimaryExpression', 1),
        (161, 'WITH'): ('PrimaryExpression', 1),
        (161, '['): ('PrimaryExpression', 1),
        (161, ']'): ('PrimaryExpression', 1),
        (161, '^'): ('PrimaryExpression', 1),
        (161, '{'): ('PrimaryExpression', 1),
        (161, '|'): ('PrimaryExpression', 1),
        (161, '||'): ('PrimaryExpression', 1),
        (162, '&&'): ('PrimaryExpression', 1),
        (162, '&'): ('PrimaryExpression', 1),
        (162, '('): ('PrimaryExpression', 1),
        (162, ')'): ('PrimaryExpression', 1),
        (162, '+'): ('PrimaryExpression', 1),
        (162, ','): ('PrimaryExpression', 1),
        (162, '-'): ('PrimaryExpression', 1),
        (162, '.'): ('PrimaryExpression', 1),
        (162, ':'): ('PrimaryExpression', 1),
        (162, ';'): ('PrimaryExpression', 1),
        (162, '?'): ('PrimaryExpression', 1),
        (162, 'ASSIGNMENT_OPERATOR'): ('PrimaryExpression', 1),
        (162, 'BREAK'): ('PrimaryExpression', 1),
        (162, 'CONTINUE'): ('PrimaryExpression', 1),
        (162, 'DELETE'): ('PrimaryExpression', 1),
        (162, 'EQUALITY_OPERATOR'): ('PrimaryExpression', 1),
        (162, 'FALSE'): ('PrimaryExpression', 1),
        (162, 'FLOAT'): ('PrimaryExpression', 1),
        (162, 'FOR'): ('PrimaryExpression', 1),
        (162, 'IDENTIFIER'): ('PrimaryExpression', 1),
        (162, 'IF'): ('PrimaryExpression', 1),
        (162, 'IN'): ('PrimaryExpression', 1),
        (162, 'INCREMENT_OPERATOR'): ('PrimaryExpression', 1),
        (162, 'INTEGER'): ('PrimaryExpression', 1),
        (162, 'MULTIPLICATIVE_OPERATOR'): ('PrimaryExpression', 1),
        (162, 'NEW'): ('PrimaryExpression', 1),
        (162, 'NULL'): ('PrimaryExpression', 1),
        (162, 'RELATIONAL_OPERATOR'): ('PrimaryExpression', 1),
        (162, 'RETURN'): ('PrimaryExpression', 1),
        (162, 'SHIFT_OPERATOR'): ('PrimaryExpression', 1),
        (162, 'STRING'): ('PrimaryExpression', 1),
        (162, 'THIS'): ('PrimaryExpression', 1),
        (162, 'TRUE'): ('PrimaryExpression', 1),
        (162, 'UNARY_OPERATOR'): ('PrimaryExpression', 1),
        (162, 'VAR'): ('PrimaryExpression', 1),
        (162, 'WHILE'): ('PrimaryExpression', 1),
        (162, 'WITH'): ('PrimaryExpression', 1),
        (162, '['): ('PrimaryExpression', 1),
        (162, ']'): ('PrimaryExpression', 1),
        (162, '^'): ('PrimaryExpression', 1),
        (162, '{'): ('PrimaryExpression', 1),
        (162, '|'): ('PrimaryExpression', 1),
        (162, '||'): ('PrimaryExpression', 1),
        (163, '&&'): ('PrimaryExpression', 1),
        (163, '&'): ('PrimaryExpression', 1),
        (163, '('): ('PrimaryExpression', 1),
        (163, ')'): ('PrimaryExpression', 1),
        (163, '+'): ('PrimaryExpression', 1),
        (163, ','): ('PrimaryExpression', 1),
        (163, '-'): ('PrimaryExpression', 1),
        (163, '.'): ('PrimaryExpression', 1),
        (163, ':'): ('PrimaryExpression', 1),
        (163, ';'): ('PrimaryExpression', 1),
        (163, '?'): ('PrimaryExpression', 1),
        (163, 'ASSIGNMENT_OPERATOR'): ('PrimaryExpression', 1),
        (163, 'BREAK'): ('PrimaryExpression', 1),
        (163, 'CONTINUE'): ('PrimaryExpression', 1),
        (163, 'DELETE'): ('PrimaryExpression', 1),
        (163, 'EQUALITY_OPERATOR'): ('PrimaryExpression', 1),
        (163, 'FALSE'): ('PrimaryExpression', 1),
        (163, 'FLOAT'): ('PrimaryExpression', 1),
        (163, 'FOR'): ('PrimaryExpression', 1),
        (163, 'IDENTIFIER'): ('PrimaryExpression', 1),
        (163, 'IF'): ('PrimaryExpression', 1),
        (163, 'IN'): ('PrimaryExpression', 1),
        (163, 'INCREMENT_OPERATOR'): ('PrimaryExpression', 1),
        (163, 'INTEGER'): ('PrimaryExpression', 1),
        (163, 'MULTIPLICATIVE_OPERATOR'): ('PrimaryExpression', 1),
        (163, 'NEW'): ('PrimaryExpression', 1),
        (163, 'NULL'): ('PrimaryExpression', 1),
        (163, 'RELATIONAL_OPERATOR'): ('PrimaryExpression', 1),
        (163, 'RETURN'): ('PrimaryExpression', 1),
        (163, 'SHIFT_OPERATOR'): ('PrimaryExpression', 1),
        (163, 'STRING'): ('PrimaryExpression', 1),
        (163, 'THIS'): ('PrimaryExpression', 1),
        (163, 'TRUE'): ('PrimaryExpression', 1),
        (163, 'UNARY_OPERATOR'): ('PrimaryExpression', 1),
        (163, 'VAR'): ('PrimaryExpression', 1),
        (163, 'WHILE'): ('PrimaryExpression', 1),
        (163, 'WITH'): ('PrimaryExpression', 1),
        (163, '['): ('PrimaryExpression', 1),
        (163, ']'): ('PrimaryExpression', 1),
        (163, '^'): ('PrimaryExpression', 1),
        (163, '{'): ('PrimaryExpression', 1),
        (163, '|'): ('PrimaryExpression', 1),
        (163, '||'): ('PrimaryExpression', 1),
        (18, '('): ('CompoundStatement', 3),
        (18, '-'): ('CompoundStatement', 3),
        (18, ';'): ('CompoundStatement', 3),
        (18, 'BREAK'): ('CompoundStatement', 3),
        (18, 'CONTINUE'): ('CompoundStatement', 3),
        (18, 'DELETE'): ('CompoundStatement', 3),
        (18, 'ELSE'): ('CompoundStatement', 3),
        (18, 'FALSE'): ('CompoundStatement', 3),
        (18, 'FLOAT'): ('CompoundStatement', 3),
        (18, 'FOR'): ('CompoundStatement', 3),
        (18, 'FUNCTION'): ('CompoundStatement', 3),
        (18, 'IDENTIFIER'): ('CompoundStatement', 3),
        (18, 'IF'): ('CompoundStatement', 3),
        (18, 'INCREMENT_OPERATOR'): ('CompoundStatement', 3),
        (18, 'INTEGER'): ('CompoundStatement', 3),
        (18, 'NEW'): ('CompoundStatement', 3),
        (18, 'NULL'): ('CompoundStatement', 3),
        (18, 'RETURN'): ('CompoundStatement', 3),
        (18, 'STRING'): ('CompoundStatement', 3),
        (18, 'THIS'): ('CompoundStatement', 3),
        (18, 'TRUE'): ('CompoundStatement', 3),
        (18, 'UNARY_OPERATOR'): ('CompoundStatement', 3),
        (18, 'VAR'): ('CompoundStatement', 3),
        (18, 'WHILE'): ('CompoundStatement', 3),
        (18, 'WITH'): ('CompoundStatement', 3),
        (18, '{'): ('CompoundStatement', 3),
        (18, '}'): ('CompoundStatement', 3),
        (18, EOF): ('CompoundStatement', 3), (19, '}'): ('Statements', 1),
        (2, EOF): ('Program', 1), (20, '('): ('_4*', 2), (20, '-'): ('_4*', 2),
        (20, ';'): ('_4*', 2), (20, 'BREAK'): ('_4*', 2),
        (20, 'CONTINUE'): ('_4*', 2), (20, 'DELETE'): ('_4*', 2),
        (20, 'FALSE'): ('_4*', 2), (20, 'FLOAT'): ('_4*', 2),
        (20, 'FOR'): ('_4*', 2), (20, 'IDENTIFIER'): ('_4*', 2),
        (20, 'IF'): ('_4*', 2), (20, 'INCREMENT_OPERATOR'): ('_4*', 2),
        (20, 'INTEGER'): ('_4*', 2), (20, 'NEW'): ('_4*', 2),
        (20, 'NULL'): ('_4*', 2), (20, 'RETURN'): ('_4*', 2),
        (20, 'STRING'): ('_4*', 2), (20, 'THIS'): ('_4*', 2),
        (20, 'TRUE'): ('_4*', 2), (20, 'UNARY_OPERATOR'): ('_4*', 2),
        (20, 'VAR'): ('_4*', 2), (20, 'WHILE'): ('_4*', 2),
        (20, 'WITH'): ('_4*', 2), (20, '{'): ('_4*', 2), (20, '}'): ('_4*', 2),
        (21, '('): ('Statement', 1), (21, '-'): ('Statement', 1),
        (21, ';'): ('Statement', 1), (21, 'BREAK'): ('Statement', 1),
        (21, 'CONTINUE'): ('Statement', 1), (21, 'DELETE'): ('Statement', 1),
        (21, 'ELSE'): ('Statement', 1), (21, 'FALSE'): ('Statement', 1),
        (21, 'FLOAT'): ('Statement', 1), (21, 'FOR'): ('Statement', 1),
        (21, 'FUNCTION'): ('Statement', 1),
        (21, 'IDENTIFIER'): ('Statement', 1), (21, 'IF'): ('Statement', 1),
        (21, 'INCREMENT_OPERATOR'): ('Statement', 1),
        (21, 'INTEGER'): ('Statement', 1), (21, 'NEW'): ('Statement', 1),
        (21, 'NULL'): ('Statement', 1), (21, 'RETURN'): ('Statement', 1),
        (21, 'STRING'): ('Statement', 1), (21, 'THIS'): ('Statement', 1),
        (21, 'TRUE'): ('Statement', 1),
        (21, 'UNARY_OPERATOR'): ('Statement', 1),
        (21, 'VAR'): ('Statement', 1), (21, 'WHILE'): ('Statement', 1),
        (21, 'WITH'): ('Statement', 1), (21, '{'): ('Statement', 1),
        (21, '}'): ('Statement', 1), (21, EOF): ('Statement', 1),
        (24, '('): ('Statement', 3), (24, '-'): ('Statement', 3),
        (24, ';'): ('Statement', 3), (24, 'BREAK'): ('Statement', 3),
        (24, 'CONTINUE'): ('Statement', 3), (24, 'DELETE'): ('Statement', 3),
        (24, 'FALSE'): ('Statement', 3), (24, 'FLOAT'): ('Statement', 3),
        (24, 'FOR'): ('Statement', 3), (24, 'FUNCTION'): ('Statement', 3),
        (24, 'IDENTIFIER'): ('Statement', 3), (24, 'IF'): ('Statement', 3),
        (24, 'INCREMENT_OPERATOR'): ('Statement', 3),
        (24, 'INTEGER'): ('Statement', 3), (24, 'NEW'): ('Statement', 3),
        (24, 'NULL'): ('Statement', 3), (24, 'RETURN'): ('Statement', 3),
        (24, 'STRING'): ('Statement', 3), (24, 'THIS'): ('Statement', 3),
        (24, 'TRUE'): ('Statement', 3),
        (24, 'UNARY_OPERATOR'): ('Statement', 3),
        (24, 'VAR'): ('Statement', 3), (24, 'WHILE'): ('Statement', 3),
        (24, 'WITH'): ('Statement', 3), (24, '{'): ('Statement', 3),
        (24, '}'): ('Statement', 3), (24, EOF): ('Statement', 3),
        (26, '('): ('Statement', 5), (26, '-'): ('Statement', 5),
        (26, ';'): ('Statement', 5), (26, 'BREAK'): ('Statement', 5),
        (26, 'CONTINUE'): ('Statement', 5), (26, 'DELETE'): ('Statement', 5),
        (26, 'ELSE'): ('Statement', 5), (26, 'FALSE'): ('Statement', 5),
        (26, 'FLOAT'): ('Statement', 5), (26, 'FOR'): ('Statement', 5),
        (26, 'FUNCTION'): ('Statement', 5),
        (26, 'IDENTIFIER'): ('Statement', 5), (26, 'IF'): ('Statement', 5),
        (26, 'INCREMENT_OPERATOR'): ('Statement', 5),
        (26, 'INTEGER'): ('Statement', 5), (26, 'NEW'): ('Statement', 5),
        (26, 'NULL'): ('Statement', 5), (26, 'RETURN'): ('Statement', 5),
        (26, 'STRING'): ('Statement', 5), (26, 'THIS'): ('Statement', 5),
        (26, 'TRUE'): ('Statement', 5),
        (26, 'UNARY_OPERATOR'): ('Statement', 5),
        (26, 'VAR'): ('Statement', 5), (26, 'WHILE'): ('Statement', 5),
        (26, 'WITH'): ('Statement', 5), (26, '{'): ('Statement', 5),
        (26, '}'): ('Statement', 5), (26, EOF): ('Statement', 5),
        (29, '('): ('Statement', 3), (29, '-'): ('Statement', 3),
        (29, ';'): ('Statement', 3), (29, 'BREAK'): ('Statement', 3),
        (29, 'CONTINUE'): ('Statement', 3), (29, 'DELETE'): ('Statement', 3),
        (29, 'ELSE'): ('Statement', 3), (29, 'FALSE'): ('Statement', 3),
        (29, 'FLOAT'): ('Statement', 3), (29, 'FOR'): ('Statement', 3),
        (29, 'FUNCTION'): ('Statement', 3),
        (29, 'IDENTIFIER'): ('Statement', 3), (29, 'IF'): ('Statement', 3),
        (29, 'INCREMENT_OPERATOR'): ('Statement', 3),
        (29, 'INTEGER'): ('Statement', 3), (29, 'NEW'): ('Statement', 3),
        (29, 'NULL'): ('Statement', 3), (29, 'RETURN'): ('Statement', 3),
        (29, 'STRING'): ('Statement', 3), (29, 'THIS'): ('Statement', 3),
        (29, 'TRUE'): ('Statement', 3),
        (29, 'UNARY_OPERATOR'): ('Statement', 3),
        (29, 'VAR'): ('Statement', 3), (29, 'WHILE'): ('Statement', 3),
        (29, 'WITH'): ('Statement', 3), (29, '{'): ('Statement', 3),
        (29, '}'): ('Statement', 3), (29, EOF): ('Statement', 3),
        (3, '('): ('_0*', 2), (3, '-'): ('_0*', 2), (3, ';'): ('_0*', 2),
        (3, 'BREAK'): ('_0*', 2), (3, 'CONTINUE'): ('_0*', 2),
        (3, 'DELETE'): ('_0*', 2), (3, 'FALSE'): ('_0*', 2),
        (3, 'FLOAT'): ('_0*', 2), (3, 'FOR'): ('_0*', 2),
        (3, 'FUNCTION'): ('_0*', 2), (3, 'IDENTIFIER'): ('_0*', 2),
        (3, 'IF'): ('_0*', 2), (3, 'INCREMENT_OPERATOR'): ('_0*', 2),
        (3, 'INTEGER'): ('_0*', 2), (3, 'NEW'): ('_0*', 2),
        (3, 'NULL'): ('_0*', 2), (3, 'RETURN'): ('_0*', 2),
        (3, 'STRING'): ('_0*', 2), (3, 'THIS'): ('_0*', 2),
        (3, 'TRUE'): ('_0*', 2), (3, 'UNARY_OPERATOR'): ('_0*', 2),
        (3, 'VAR'): ('_0*', 2), (3, 'WHILE'): ('_0*', 2),
        (3, 'WITH'): ('_0*', 2), (3, '{'): ('_0*', 2), (3, EOF): ('_0*', 2),
        (32, ';'): ('ExpressionOpt', 0), (34, ')'): ('ExpressionOpt', 0),
        (37, '('): ('Statement', 8), (37, '-'): ('Statement', 8),
        (37, ';'): ('Statement', 8), (37, 'BREAK'): ('Statement', 8),
        (37, 'CONTINUE'): ('Statement', 8), (37, 'DELETE'): ('Statement', 8),
        (37, 'ELSE'): ('Statement', 8), (37, 'FALSE'): ('Statement', 8),
        (37, 'FLOAT'): ('Statement', 8), (37, 'FOR'): ('Statement', 8),
        (37, 'FUNCTION'): ('Statement', 8),
        (37, 'IDENTIFIER'): ('Statement', 8), (37, 'IF'): ('Statement', 8),
        (37, 'INCREMENT_OPERATOR'): ('Statement', 8),
        (37, 'INTEGER'): ('Statement', 8), (37, 'NEW'): ('Statement', 8),
        (37, 'NULL'): ('Statement', 8), (37, 'RETURN'): ('Statement', 8),
        (37, 'STRING'): ('Statement', 8), (37, 'THIS'): ('Statement', 8),
        (37, 'TRUE'): ('Statement', 8),
        (37, 'UNARY_OPERATOR'): ('Statement', 8),
        (37, 'VAR'): ('Statement', 8), (37, 'WHILE'): ('Statement', 8),
        (37, 'WITH'): ('Statement', 8), (37, '{'): ('Statement', 8),
        (37, '}'): ('Statement', 8), (37, EOF): ('Statement', 8),
        (39, ';'): ('ExpressionOpt', 0), (41, ')'): ('ExpressionOpt', 0),
        (44, '('): ('Statement', 9), (44, '-'): ('Statement', 9),
        (44, ';'): ('Statement', 9), (44, 'BREAK'): ('Statement', 9),
        (44, 'CONTINUE'): ('Statement', 9), (44, 'DELETE'): ('Statement', 9),
        (44, 'ELSE'): ('Statement', 9), (44, 'FALSE'): ('Statement', 9),
        (44, 'FLOAT'): ('Statement', 9), (44, 'FOR'): ('Statement', 9),
        (44, 'FUNCTION'): ('Statement', 9),
        (44, 'IDENTIFIER'): ('Statement', 9), (44, 'IF'): ('Statement', 9),
        (44, 'INCREMENT_OPERATOR'): ('Statement', 9),
        (44, 'INTEGER'): ('Statement', 9), (44, 'NEW'): ('Statement', 9),
        (44, 'NULL'): ('Statement', 9), (44, 'RETURN'): ('Statement', 9),
        (44, 'STRING'): ('Statement', 9), (44, 'THIS'): ('Statement', 9),
        (44, 'TRUE'): ('Statement', 9),
        (44, 'UNARY_OPERATOR'): ('Statement', 9),
        (44, 'VAR'): ('Statement', 9), (44, 'WHILE'): ('Statement', 9),
        (44, 'WITH'): ('Statement', 9), (44, '{'): ('Statement', 9),
        (44, '}'): ('Statement', 9), (44, EOF): ('Statement', 9),
        (48, '('): ('Statement', 7), (48, '-'): ('Statement', 7),
        (48, ';'): ('Statement', 7), (48, 'BREAK'): ('Statement', 7),
        (48, 'CONTINUE'): ('Statement', 7), (48, 'DELETE'): ('Statement', 7),
        (48, 'ELSE'): ('Statement', 7), (48, 'FALSE'): ('Statement', 7),
        (48, 'FLOAT'): ('Statement', 7), (48, 'FOR'): ('Statement', 7),
        (48, 'FUNCTION'): ('Statement', 7),
        (48, 'IDENTIFIER'): ('Statement', 7), (48, 'IF'): ('Statement', 7),
        (48, 'INCREMENT_OPERATOR'): ('Statement', 7),
        (48, 'INTEGER'): ('Statement', 7), (48, 'NEW'): ('Statement', 7),
        (48, 'NULL'): ('Statement', 7), (48, 'RETURN'): ('Statement', 7),
        (48, 'STRING'): ('Statement', 7), (48, 'THIS'): ('Statement', 7),
        (48, 'TRUE'): ('Statement', 7),
        (48, 'UNARY_OPERATOR'): ('Statement', 7),
        (48, 'VAR'): ('Statement', 7), (48, 'WHILE'): ('Statement', 7),
        (48, 'WITH'): ('Statement', 7), (48, '{'): ('Statement', 7),
        (48, '}'): ('Statement', 7), (48, EOF): ('Statement', 7),
        (50, '('): ('Statement', 2), (50, '-'): ('Statement', 2),
        (50, ';'): ('Statement', 2), (50, 'BREAK'): ('Statement', 2),
        (50, 'CONTINUE'): ('Statement', 2), (50, 'DELETE'): ('Statement', 2),
        (50, 'ELSE'): ('Statement', 2), (50, 'FALSE'): ('Statement', 2),
        (50, 'FLOAT'): ('Statement', 2), (50, 'FOR'): ('Statement', 2),
        (50, 'FUNCTION'): ('Statement', 2),
        (50, 'IDENTIFIER'): ('Statement', 2), (50, 'IF'): ('Statement', 2),
        (50, 'INCREMENT_OPERATOR'): ('Statement', 2),
        (50, 'INTEGER'): ('Statement', 2), (50, 'NEW'): ('Statement', 2),
        (50, 'NULL'): ('Statement', 2), (50, 'RETURN'): ('Statement', 2),
        (50, 'STRING'): ('Statement', 2), (50, 'THIS'): ('Statement', 2),
        (50, 'TRUE'): ('Statement', 2),
        (50, 'UNARY_OPERATOR'): ('Statement', 2),
        (50, 'VAR'): ('Statement', 2), (50, 'WHILE'): ('Statement', 2),
        (50, 'WITH'): ('Statement', 2), (50, '{'): ('Statement', 2),
        (50, '}'): ('Statement', 2), (50, EOF): ('Statement', 2),
        (52, '('): ('Statement', 2), (52, '-'): ('Statement', 2),
        (52, ';'): ('Statement', 2), (52, 'BREAK'): ('Statement', 2),
        (52, 'CONTINUE'): ('Statement', 2), (52, 'DELETE'): ('Statement', 2),
        (52, 'ELSE'): ('Statement', 2), (52, 'FALSE'): ('Statement', 2),
        (52, 'FLOAT'): ('Statement', 2), (52, 'FOR'): ('Statement', 2),
        (52, 'FUNCTION'): ('Statement', 2),
        (52, 'IDENTIFIER'): ('Statement', 2), (52, 'IF'): ('Statement', 2),
        (52, 'INCREMENT_OPERATOR'): ('Statement', 2),
        (52, 'INTEGER'): ('Statement', 2), (52, 'NEW'): ('Statement', 2),
        (52, 'NULL'): ('Statement', 2), (52, 'RETURN'): ('Statement', 2),
        (52, 'STRING'): ('Statement', 2), (52, 'THIS'): ('Statement', 2),
        (52, 'TRUE'): ('Statement', 2),
        (52, 'UNARY_OPERATOR'): ('Statement', 2),
        (52, 'VAR'): ('Statement', 2), (52, 'WHILE'): ('Statement', 2),
        (52, 'WITH'): ('Statement', 2), (52, '{'): ('Statement', 2),
        (52, '}'): ('Statement', 2), (52, EOF): ('Statement', 2),
        (57, '('): ('Statement', 5), (57, '-'): ('Statement', 5),
        (57, ';'): ('Statement', 5), (57, 'BREAK'): ('Statement', 5),
        (57, 'CONTINUE'): ('Statement', 5), (57, 'DELETE'): ('Statement', 5),
        (57, 'ELSE'): ('Statement', 5), (57, 'FALSE'): ('Statement', 5),
        (57, 'FLOAT'): ('Statement', 5), (57, 'FOR'): ('Statement', 5),
        (57, 'FUNCTION'): ('Statement', 5),
        (57, 'IDENTIFIER'): ('Statement', 5), (57, 'IF'): ('Statement', 5),
        (57, 'INCREMENT_OPERATOR'): ('Statement', 5),
        (57, 'INTEGER'): ('Statement', 5), (57, 'NEW'): ('Statement', 5),
        (57, 'NULL'): ('Statement', 5), (57, 'RETURN'): ('Statement', 5),
        (57, 'STRING'): ('Statement', 5), (57, 'THIS'): ('Statement', 5),
        (57, 'TRUE'): ('Statement', 5),
        (57, 'UNARY_OPERATOR'): ('Statement', 5),
        (57, 'VAR'): ('Statement', 5), (57, 'WHILE'): ('Statement', 5),
        (57, 'WITH'): ('Statement', 5), (57, '{'): ('Statement', 5),
        (57, '}'): ('Statement', 5), (57, EOF): ('Statement', 5),
        (58, ';'): ('ExpressionOpt', 0), (6, ')'): ('ParameterListOpt', 0),
        (60, '('): ('Statement', 3), (60, '-'): ('Statement', 3),
        (60, ';'): ('Statement', 3), (60, 'BREAK'): ('Statement', 3),
        (60, 'CONTINUE'): ('Statement', 3), (60, 'DELETE'): ('Statement', 3),
        (60, 'ELSE'): ('Statement', 3), (60, 'FALSE'): ('Statement', 3),
        (60, 'FLOAT'): ('Statement', 3), (60, 'FOR'): ('Statement', 3),
        (60, 'FUNCTION'): ('Statement', 3),
        (60, 'IDENTIFIER'): ('Statement', 3), (60, 'IF'): ('Statement', 3),
        (60, 'INCREMENT_OPERATOR'): ('Statement', 3),
        (60, 'INTEGER'): ('Statement', 3), (60, 'NEW'): ('Statement', 3),
        (60, 'NULL'): ('Statement', 3), (60, 'RETURN'): ('Statement', 3),
        (60, 'STRING'): ('Statement', 3), (60, 'THIS'): ('Statement', 3),
        (60, 'TRUE'): ('Statement', 3),
        (60, 'UNARY_OPERATOR'): ('Statement', 3),
        (60, 'VAR'): ('Statement', 3), (60, 'WHILE'): ('Statement', 3),
        (60, 'WITH'): ('Statement', 3), (60, '{'): ('Statement', 3),
        (60, '}'): ('Statement', 3), (60, EOF): ('Statement', 3),
        (61, '('): ('Statement', 1), (61, '-'): ('Statement', 1),
        (61, ';'): ('Statement', 1), (61, 'BREAK'): ('Statement', 1),
        (61, 'CONTINUE'): ('Statement', 1), (61, 'DELETE'): ('Statement', 1),
        (61, 'ELSE'): ('Statement', 1), (61, 'FALSE'): ('Statement', 1),
        (61, 'FLOAT'): ('Statement', 1), (61, 'FOR'): ('Statement', 1),
        (61, 'FUNCTION'): ('Statement', 1),
        (61, 'IDENTIFIER'): ('Statement', 1), (61, 'IF'): ('Statement', 1),
        (61, 'INCREMENT_OPERATOR'): ('Statement', 1),
        (61, 'INTEGER'): ('Statement', 1), (61, 'NEW'): ('Statement', 1),
        (61, 'NULL'): ('Statement', 1), (61, 'RETURN'): ('Statement', 1),
        (61, 'STRING'): ('Statement', 1), (61, 'THIS'): ('Statement', 1),
        (61, 'TRUE'): ('Statement', 1),
        (61, 'UNARY_OPERATOR'): ('Statement', 1),
        (61, 'VAR'): ('Statement', 1), (61, 'WHILE'): ('Statement', 1),
        (61, 'WITH'): ('Statement', 1), (61, '{'): ('Statement', 1),
        (61, '}'): ('Statement', 1), (61, EOF): ('Statement', 1),
        (63, '('): ('Statement', 2), (63, '-'): ('Statement', 2),
        (63, ';'): ('Statement', 2), (63, 'BREAK'): ('Statement', 2),
        (63, 'CONTINUE'): ('Statement', 2), (63, 'DELETE'): ('Statement', 2),
        (63, 'ELSE'): ('Statement', 2), (63, 'FALSE'): ('Statement', 2),
        (63, 'FLOAT'): ('Statement', 2), (63, 'FOR'): ('Statement', 2),
        (63, 'FUNCTION'): ('Statement', 2),
        (63, 'IDENTIFIER'): ('Statement', 2), (63, 'IF'): ('Statement', 2),
        (63, 'INCREMENT_OPERATOR'): ('Statement', 2),
        (63, 'INTEGER'): ('Statement', 2), (63, 'NEW'): ('Statement', 2),
        (63, 'NULL'): ('Statement', 2), (63, 'RETURN'): ('Statement', 2),
        (63, 'STRING'): ('Statement', 2), (63, 'THIS'): ('Statement', 2),
        (63, 'TRUE'): ('Statement', 2),
        (63, 'UNARY_OPERATOR'): ('Statement', 2),
        (63, 'VAR'): ('Statement', 2), (63, 'WHILE'): ('Statement', 2),
        (63, 'WITH'): ('Statement', 2), (63, '{'): ('Statement', 2),
        (63, '}'): ('Statement', 2), (63, EOF): ('Statement', 2),
        (64, '('): ('Condition', 1), (64, '-'): ('Condition', 1),
        (64, ';'): ('Condition', 1), (64, 'BREAK'): ('Condition', 1),
        (64, 'CONTINUE'): ('Condition', 1), (64, 'DELETE'): ('Condition', 1),
        (64, 'FALSE'): ('Condition', 1), (64, 'FLOAT'): ('Condition', 1),
        (64, 'FOR'): ('Condition', 1), (64, 'IDENTIFIER'): ('Condition', 1),
        (64, 'IF'): ('Condition', 1),
        (64, 'INCREMENT_OPERATOR'): ('Condition', 1),
        (64, 'INTEGER'): ('Condition', 1), (64, 'NEW'): ('Condition', 1),
        (64, 'NULL'): ('Condition', 1), (64, 'RETURN'): ('Condition', 1),
        (64, 'STRING'): ('Condition', 1), (64, 'THIS'): ('Condition', 1),
        (64, 'TRUE'): ('Condition', 1),
        (64, 'UNARY_OPERATOR'): ('Condition', 1),
        (64, 'VAR'): ('Condition', 1), (64, 'WHILE'): ('Condition', 1),
        (64, 'WITH'): ('Condition', 1), (64, '{'): ('Condition', 1),
        (66, ';'): ('VariablesOrExpression', 2),
        (66, 'IN'): ('VariablesOrExpression', 2),
        (67, ';'): ('VariablesOrExpression', 1),
        (67, 'IN'): ('VariablesOrExpression', 1), (68, ','): ('_7*', 0),
        (68, ';'): ('_7*', 0), (68, 'IN'): ('_7*', 0),
        (69, ';'): ('Variables', 2), (69, 'IN'): ('Variables', 2),
        (71, ','): ('_7*', 3), (71, ';'): ('_7*', 3), (71, 'IN'): ('_7*', 3),
        (72, ','): ('Variable', 1), (72, ';'): ('Variable', 1),
        (72, 'IN'): ('Variable', 1), (74, ','): ('Variable', 3),
        (74, ';'): ('Variable', 3), (74, 'IN'): ('Variable', 3),
        (75, ')'): ('ExpressionOpt', 1), (75, ';'): ('ExpressionOpt', 1),
        (76, '('): ('Expression', 1), (76, ')'): ('Expression', 1),
        (76, '-'): ('Expression', 1), (76, ';'): ('Expression', 1),
        (76, 'BREAK'): ('Expression', 1), (76, 'CONTINUE'): ('Expression', 1),
        (76, 'DELETE'): ('Expression', 1), (76, 'FALSE'): ('Expression', 1),
        (76, 'FLOAT'): ('Expression', 1), (76, 'FOR'): ('Expression', 1),
        (76, 'IDENTIFIER'): ('Expression', 1), (76, 'IF'): ('Expression', 1),
        (76, 'IN'): ('Expression', 1),
        (76, 'INCREMENT_OPERATOR'): ('Expression', 1),
        (76, 'INTEGER'): ('Expression', 1), (76, 'NEW'): ('Expression', 1),
        (76, 'NULL'): ('Expression', 1), (76, 'RETURN'): ('Expression', 1),
        (76, 'STRING'): ('Expression', 1), (76, 'THIS'): ('Expression', 1),
        (76, 'TRUE'): ('Expression', 1),
        (76, 'UNARY_OPERATOR'): ('Expression', 1),
        (76, 'VAR'): ('Expression', 1), (76, 'WHILE'): ('Expression', 1),
        (76, 'WITH'): ('Expression', 1), (76, ']'): ('Expression', 1),
        (76, '{'): ('Expression', 1), (78, '('): ('Expression', 3),
        (78, ')'): ('Expression', 3), (78, '-'): ('Expression', 3),
        (78, ';'): ('Expression', 3), (78, 'BREAK'): ('Expression', 3),
        (78, 'CONTINUE'): ('Expression', 3), (78, 'DELETE'): ('Expression', 3),
        (78, 'FALSE'): ('Expression', 3), (78, 'FLOAT'): ('Expression', 3),
        (78, 'FOR'): ('Expression', 3), (78, 'IDENTIFIER'): ('Expression', 3),
        (78, 'IF'): ('Expression', 3), (78, 'IN'): ('Expression', 3),
        (78, 'INCREMENT_OPERATOR'): ('Expression', 3),
        (78, 'INTEGER'): ('Expression', 3), (78, 'NEW'): ('Expression', 3),
        (78, 'NULL'): ('Expression', 3), (78, 'RETURN'): ('Expression', 3),
        (78, 'STRING'): ('Expression', 3), (78, 'THIS'): ('Expression', 3),
        (78, 'TRUE'): ('Expression', 3),
        (78, 'UNARY_OPERATOR'): ('Expression', 3),
        (78, 'VAR'): ('Expression', 3), (78, 'WHILE'): ('Expression', 3),
        (78, 'WITH'): ('Expression', 3), (78, ']'): ('Expression', 3),
        (78, '{'): ('Expression', 3), (79, '('): ('AssignmentExpression', 1),
        (79, ')'): ('AssignmentExpression', 1),
        (79, ','): ('AssignmentExpression', 1),
        (79, '-'): ('AssignmentExpression', 1),
        (79, ':'): ('AssignmentExpression', 1),
        (79, ';'): ('AssignmentExpression', 1),
        (79, 'BREAK'): ('AssignmentExpression', 1),
        (79, 'CONTINUE'): ('AssignmentExpression', 1),
        (79, 'DELETE'): ('AssignmentExpression', 1),
        (79, 'FALSE'): ('AssignmentExpression', 1),
        (79, 'FLOAT'): ('AssignmentExpression', 1),
        (79, 'FOR'): ('AssignmentExpression', 1),
        (79, 'IDENTIFIER'): ('AssignmentExpression', 1),
        (79, 'IF'): ('AssignmentExpression', 1),
        (79, 'IN'): ('AssignmentExpression', 1),
        (79, 'INCREMENT_OPERATOR'): ('AssignmentExpression', 1),
        (79, 'INTEGER'): ('AssignmentExpression', 1),
        (79, 'NEW'): ('AssignmentExpression', 1),
        (79, 'NULL'): ('AssignmentExpression', 1),
        (79, 'RETURN'): ('AssignmentExpression', 1),
        (79, 'STRING'): ('AssignmentExpression', 1),
        (79, 'THIS'): ('AssignmentExpression', 1),
        (79, 'TRUE'): ('AssignmentExpression', 1),
        (79, 'UNARY_OPERATOR'): ('AssignmentExpression', 1),
        (79, 'VAR'): ('AssignmentExpression', 1),
        (79, 'WHILE'): ('AssignmentExpression', 1),
        (79, 'WITH'): ('AssignmentExpression', 1),
        (79, ']'): ('AssignmentExpression', 1),
        (79, '{'): ('AssignmentExpression', 1),
        (81, '('): ('AssignmentExpression', 3),
        (81, ')'): ('AssignmentExpression', 3),
        (81, ','): ('AssignmentExpression', 3),
        (81, '-'): ('AssignmentExpression', 3),
        (81, ':'): ('AssignmentExpression', 3),
        (81, ';'): ('AssignmentExpression', 3),
        (81, 'ASSIGNMENT_OPERATOR'): ('AssignmentExpression', 3),
        (81, 'BREAK'): ('AssignmentExpression', 3),
        (81, 'CONTINUE'): ('AssignmentExpression', 3),
        (81, 'DELETE'): ('AssignmentExpression', 3),
        (81, 'FALSE'): ('AssignmentExpression', 3),
        (81, 'FLOAT'): ('AssignmentExpression', 3),
        (81, 'FOR'): ('AssignmentExpression', 3),
        (81, 'IDENTIFIER'): ('AssignmentExpression', 3),
        (81, 'IF'): ('AssignmentExpression', 3),
        (81, 'IN'): ('AssignmentExpression', 3),
        (81, 'INCREMENT_OPERATOR'): ('AssignmentExpression', 3),
        (81, 'INTEGER'): ('AssignmentExpression', 3),
        (81, 'NEW'): ('AssignmentExpression', 3),
        (81, 'NULL'): ('AssignmentExpression', 3),
        (81, 'RETURN'): ('AssignmentExpression', 3),
        (81, 'STRING'): ('AssignmentExpression', 3),
        (81, 'THIS'): ('AssignmentExpression', 3),
        (81, 'TRUE'): ('AssignmentExpression', 3),
        (81, 'UNARY_OPERATOR'): ('AssignmentExpression', 3),
        (81, 'VAR'): ('AssignmentExpression', 3),
        (81, 'WHILE'): ('AssignmentExpression', 3),
        (81, 'WITH'): ('AssignmentExpression', 3),
        (81, ']'): ('AssignmentExpression', 3),
        (81, '{'): ('AssignmentExpression', 3),
        (82, '('): ('ConditionalExpression', 1),
        (82, ')'): ('ConditionalExpression', 1),
        (82, ','): ('ConditionalExpression', 1),
        (82, '-'): ('ConditionalExpression', 1),
        (82, ':'): ('ConditionalExpression', 1),
        (82, ';'): ('ConditionalExpression', 1),
        (82, 'ASSIGNMENT_OPERATOR'): ('ConditionalExpression', 1),
        (82, 'BREAK'): ('ConditionalExpression', 1),
        (82, 'CONTINUE'): ('ConditionalExpression', 1),
        (82, 'DELETE'): ('ConditionalExpression', 1),
        (82, 'FALSE'): ('ConditionalExpression', 1),
        (82, 'FLOAT'): ('ConditionalExpression', 1),
        (82, 'FOR'): ('ConditionalExpression', 1),
        (82, 'IDENTIFIER'): ('ConditionalExpression', 1),
        (82, 'IF'): ('ConditionalExpression', 1),
        (82, 'IN'): ('ConditionalExpression', 1),
        (82, 'INCREMENT_OPERATOR'): ('ConditionalExpression', 1),
        (82, 'INTEGER'): ('ConditionalExpression', 1),
        (82, 'NEW'): ('ConditionalExpression', 1),
        (82, 'NULL'): ('ConditionalExpression', 1),
        (82, 'RETURN'): ('ConditionalExpression', 1),
        (82, 'STRING'): ('ConditionalExpression', 1),
        (82, 'THIS'): ('ConditionalExpression', 1),
        (82, 'TRUE'): ('ConditionalExpression', 1),
        (82, 'UNARY_OPERATOR'): ('ConditionalExpression', 1),
        (82, 'VAR'): ('ConditionalExpression', 1),
        (82, 'WHILE'): ('ConditionalExpression', 1),
        (82, 'WITH'): ('ConditionalExpression', 1),
        (82, ']'): ('ConditionalExpression', 1),
        (82, '{'): ('ConditionalExpression', 1),
        (86, '('): ('ConditionalExpression', 5),
        (86, ')'): ('ConditionalExpression', 5),
        (86, ','): ('ConditionalExpression', 5),
        (86, '-'): ('ConditionalExpression', 5),
        (86, ':'): ('ConditionalExpression', 5),
        (86, ';'): ('ConditionalExpression', 5),
        (86, 'ASSIGNMENT_OPERATOR'): ('ConditionalExpression', 5),
        (86, 'BREAK'): ('ConditionalExpression', 5),
        (86, 'CONTINUE'): ('ConditionalExpression', 5),
        (86, 'DELETE'): ('ConditionalExpression', 5),
        (86, 'FALSE'): ('ConditionalExpression', 5),
        (86, 'FLOAT'): ('ConditionalExpression', 5),
        (86, 'FOR'): ('ConditionalExpression', 5),
        (86, 'IDENTIFIER'): ('ConditionalExpression', 5),
        (86, 'IF'): ('ConditionalExpression', 5),
        (86, 'IN'): ('ConditionalExpression', 5),
        (86, 'INCREMENT_OPERATOR'): ('ConditionalExpression', 5),
        (86, 'INTEGER'): ('ConditionalExpression', 5),
        (86, 'NEW'): ('ConditionalExpression', 5),
        (86, 'NULL'): ('ConditionalExpression', 5),
        (86, 'RETURN'): ('ConditionalExpression', 5),
        (86, 'STRING'): ('ConditionalExpression', 5),
        (86, 'THIS'): ('ConditionalExpression', 5),
        (86, 'TRUE'): ('ConditionalExpression', 5),
        (86, 'UNARY_OPERATOR'): ('ConditionalExpression', 5),
        (86, 'VAR'): ('ConditionalExpression', 5),
        (86, 'WHILE'): ('ConditionalExpression', 5),
        (86, 'WITH'): ('ConditionalExpression', 5),
        (86, ']'): ('ConditionalExpression', 5),
        (86, '{'): ('ConditionalExpression', 5),
        (87, '('): ('OrExpression', 1), (87, ')'): ('OrExpression', 1),
        (87, ','): ('OrExpression', 1), (87, '-'): ('OrExpression', 1),
        (87, ':'): ('OrExpression', 1), (87, ';'): ('OrExpression', 1),
        (87, '?'): ('OrExpression', 1),
        (87, 'ASSIGNMENT_OPERATOR'): ('OrExpression', 1),
        (87, 'BREAK'): ('OrExpression', 1),
        (87, 'CONTINUE'): ('OrExpression', 1),
        (87, 'DELETE'): ('OrExpression', 1),
        (87, 'FALSE'): ('OrExpression', 1), (87, 'FLOAT'): ('OrExpression', 1),
        (87, 'FOR'): ('OrExpression', 1),
        (87, 'IDENTIFIER'): ('OrExpression', 1),
        (87, 'IF'): ('OrExpression', 1), (87, 'IN'): ('OrExpression', 1),
        (87, 'INCREMENT_OPERATOR'): ('OrExpression', 1),
        (87, 'INTEGER'): ('OrExpression', 1), (87, 'NEW'): ('OrExpression', 1),
        (87, 'NULL'): ('OrExpression', 1), (87, 'RETURN'): ('OrExpression', 1),
        (87, 'STRING'): ('OrExpression', 1), (87, 'THIS'): ('OrExpression', 1),
        (87, 'TRUE'): ('OrExpression', 1),
        (87, 'UNARY_OPERATOR'): ('OrExpression', 1),
        (87, 'VAR'): ('OrExpression', 1), (87, 'WHILE'): ('OrExpression', 1),
        (87, 'WITH'): ('OrExpression', 1), (87, ']'): ('OrExpression', 1),
        (87, '{'): ('OrExpression', 1), (89, '('): ('OrExpression', 3),
        (89, ')'): ('OrExpression', 3), (89, ','): ('OrExpression', 3),
        (89, '-'): ('OrExpression', 3), (89, ':'): ('OrExpression', 3),
        (89, ';'): ('OrExpression', 3), (89, '?'): ('OrExpression', 3),
        (89, 'ASSIGNMENT_OPERATOR'): ('OrExpression', 3),
        (89, 'BREAK'): ('OrExpression', 3),
        (89, 'CONTINUE'): ('OrExpression', 3),
        (89, 'DELETE'): ('OrExpression', 3),
        (89, 'FALSE'): ('OrExpression', 3), (89, 'FLOAT'): ('OrExpression', 3),
        (89, 'FOR'): ('OrExpression', 3),
        (89, 'IDENTIFIER'): ('OrExpression', 3),
        (89, 'IF'): ('OrExpression', 3), (89, 'IN'): ('OrExpression', 3),
        (89, 'INCREMENT_OPERATOR'): ('OrExpression', 3),
        (89, 'INTEGER'): ('OrExpression', 3), (89, 'NEW'): ('OrExpression', 3),
        (89, 'NULL'): ('OrExpression', 3), (89, 'RETURN'): ('OrExpression', 3),
        (89, 'STRING'): ('OrExpression', 3), (89, 'THIS'): ('OrExpression', 3),
        (89, 'TRUE'): ('OrExpression', 3),
        (89, 'UNARY_OPERATOR'): ('OrExpression', 3),
        (89, 'VAR'): ('OrExpression', 3), (89, 'WHILE'): ('OrExpression', 3),
        (89, 'WITH'): ('OrExpression', 3), (89, ']'): ('OrExpression', 3),
        (89, '{'): ('OrExpression', 3), (9, '('): ('Element', 6),
        (9, '-'): ('Element', 6), (9, ';'): ('Element', 6),
        (9, 'BREAK'): ('Element', 6), (9, 'CONTINUE'): ('Element', 6),
        (9, 'DELETE'): ('Element', 6), (9, 'FALSE'): ('Element', 6),
        (9, 'FLOAT'): ('Element', 6), (9, 'FOR'): ('Element', 6),
        (9, 'FUNCTION'): ('Element', 6), (9, 'IDENTIFIER'): ('Element', 6),
        (9, 'IF'): ('Element', 6), (9, 'INCREMENT_OPERATOR'): ('Element', 6),
        (9, 'INTEGER'): ('Element', 6), (9, 'NEW'): ('Element', 6),
        (9, 'NULL'): ('Element', 6), (9, 'RETURN'): ('Element', 6),
        (9, 'STRING'): ('Element', 6), (9, 'THIS'): ('Element', 6),
        (9, 'TRUE'): ('Element', 6), (9, 'UNARY_OPERATOR'): ('Element', 6),
        (9, 'VAR'): ('Element', 6), (9, 'WHILE'): ('Element', 6),
        (9, 'WITH'): ('Element', 6), (9, '{'): ('Element', 6),
        (9, EOF): ('Element', 6), (90, '('): ('AndExpression', 1),
        (90, ')'): ('AndExpression', 1), (90, ','): ('AndExpression', 1),
        (90, '-'): ('AndExpression', 1), (90, ':'): ('AndExpression', 1),
        (90, ';'): ('AndExpression', 1), (90, '?'): ('AndExpression', 1),
        (90, 'ASSIGNMENT_OPERATOR'): ('AndExpression', 1),
        (90, 'BREAK'): ('AndExpression', 1),
        (90, 'CONTINUE'): ('AndExpression', 1),
        (90, 'DELETE'): ('AndExpression', 1),
        (90, 'FALSE'): ('AndExpression', 1),
        (90, 'FLOAT'): ('AndExpression', 1), (90, 'FOR'): ('AndExpression', 1),
        (90, 'IDENTIFIER'): ('AndExpression', 1),
        (90, 'IF'): ('AndExpression', 1), (90, 'IN'): ('AndExpression', 1),
        (90, 'INCREMENT_OPERATOR'): ('AndExpression', 1),
        (90, 'INTEGER'): ('AndExpression', 1),
        (90, 'NEW'): ('AndExpression', 1), (90, 'NULL'): ('AndExpression', 1),
        (90, 'RETURN'): ('AndExpression', 1),
        (90, 'STRING'): ('AndExpression', 1),
        (90, 'THIS'): ('AndExpression', 1), (90, 'TRUE'): ('AndExpression', 1),
        (90, 'UNARY_OPERATOR'): ('AndExpression', 1),
        (90, 'VAR'): ('AndExpression', 1), (90, 'WHILE'): ('AndExpression', 1),
        (90, 'WITH'): ('AndExpression', 1), (90, ']'): ('AndExpression', 1),
        (90, '{'): ('AndExpression', 1), (90, '||'): ('AndExpression', 1),
        (92, '('): ('AndExpression', 3), (92, ')'): ('AndExpression', 3),
        (92, ','): ('AndExpression', 3), (92, '-'): ('AndExpression', 3),
        (92, ':'): ('AndExpression', 3), (92, ';'): ('AndExpression', 3),
        (92, '?'): ('AndExpression', 3),
        (92, 'ASSIGNMENT_OPERATOR'): ('AndExpression', 3),
        (92, 'BREAK'): ('AndExpression', 3),
        (92, 'CONTINUE'): ('AndExpression', 3),
        (92, 'DELETE'): ('AndExpression', 3),
        (92, 'FALSE'): ('AndExpression', 3),
        (92, 'FLOAT'): ('AndExpression', 3), (92, 'FOR'): ('AndExpression', 3),
        (92, 'IDENTIFIER'): ('AndExpression', 3),
        (92, 'IF'): ('AndExpression', 3), (92, 'IN'): ('AndExpression', 3),
        (92, 'INCREMENT_OPERATOR'): ('AndExpression', 3),
        (92, 'INTEGER'): ('AndExpression', 3),
        (92, 'NEW'): ('AndExpression', 3), (92, 'NULL'): ('AndExpression', 3),
        (92, 'RETURN'): ('AndExpression', 3),
        (92, 'STRING'): ('AndExpression', 3),
        (92, 'THIS'): ('AndExpression', 3), (92, 'TRUE'): ('AndExpression', 3),
        (92, 'UNARY_OPERATOR'): ('AndExpression', 3),
        (92, 'VAR'): ('AndExpression', 3), (92, 'WHILE'): ('AndExpression', 3),
        (92, 'WITH'): ('AndExpression', 3), (92, ']'): ('AndExpression', 3),
        (92, '{'): ('AndExpression', 3), (92, '||'): ('AndExpression', 3),
        (93, '&&'): ('BitwiseOrExpression', 1),
        (93, '('): ('BitwiseOrExpression', 1),
        (93, ')'): ('BitwiseOrExpression', 1),
        (93, ','): ('BitwiseOrExpression', 1),
        (93, '-'): ('BitwiseOrExpression', 1),
        (93, ':'): ('BitwiseOrExpression', 1),
        (93, ';'): ('BitwiseOrExpression', 1),
        (93, '?'): ('BitwiseOrExpression', 1),
        (93, 'ASSIGNMENT_OPERATOR'): ('BitwiseOrExpression', 1),
        (93, 'BREAK'): ('BitwiseOrExpression', 1),
        (93, 'CONTINUE'): ('BitwiseOrExpression', 1),
        (93, 'DELETE'): ('BitwiseOrExpression', 1),
        (93, 'FALSE'): ('BitwiseOrExpression', 1),
        (93, 'FLOAT'): ('BitwiseOrExpression', 1),
        (93, 'FOR'): ('BitwiseOrExpression', 1),
        (93, 'IDENTIFIER'): ('BitwiseOrExpression', 1),
        (93, 'IF'): ('BitwiseOrExpression', 1),
        (93, 'IN'): ('BitwiseOrExpression', 1),
        (93, 'INCREMENT_OPERATOR'): ('BitwiseOrExpression', 1),
        (93, 'INTEGER'): ('BitwiseOrExpression', 1),
        (93, 'NEW'): ('BitwiseOrExpression', 1),
        (93, 'NULL'): ('BitwiseOrExpression', 1),
        (93, 'RETURN'): ('BitwiseOrExpression', 1),
        (93, 'STRING'): ('BitwiseOrExpression', 1),
        (93, 'THIS'): ('BitwiseOrExpression', 1),
        (93, 'TRUE'): ('BitwiseOrExpression', 1),
        (93, 'UNARY_OPERATOR'): ('BitwiseOrExpression', 1),
        (93, 'VAR'): ('BitwiseOrExpression', 1),
        (93, 'WHILE'): ('BitwiseOrExpression', 1),
        (93, 'WITH'): ('BitwiseOrExpression', 1),
        (93, ']'): ('BitwiseOrExpression', 1),
        (93, '{'): ('BitwiseOrExpression', 1),
        (93, '||'): ('BitwiseOrExpression', 1),
        (95, '&&'): ('BitwiseOrExpression', 3),
        (95, '('): ('BitwiseOrExpression', 3),
        (95, ')'): ('BitwiseOrExpression', 3),
        (95, ','): ('BitwiseOrExpression', 3),
        (95, '-'): ('BitwiseOrExpression', 3),
        (95, ':'): ('BitwiseOrExpression', 3),
        (95, ';'): ('BitwiseOrExpression', 3),
        (95, '?'): ('BitwiseOrExpression', 3),
        (95, 'ASSIGNMENT_OPERATOR'): ('BitwiseOrExpression', 3),
        (95, 'BREAK'): ('BitwiseOrExpression', 3),
        (95, 'CONTINUE'): ('BitwiseOrExpression', 3),
        (95, 'DELETE'): ('BitwiseOrExpression', 3),
        (95, 'FALSE'): ('BitwiseOrExpression', 3),
        (95, 'FLOAT'): ('BitwiseOrExpression', 3),
        (95, 'FOR'): ('BitwiseOrExpression', 3),
        (95, 'IDENTIFIER'): ('BitwiseOrExpression', 3),
        (95, 'IF'): ('BitwiseOrExpression', 3),
        (95, 'IN'): ('BitwiseOrExpression', 3),
        (95, 'INCREMENT_OPERATOR'): ('BitwiseOrExpression', 3),
        (95, 'INTEGER'): ('BitwiseOrExpression', 3),
        (95, 'NEW'): ('BitwiseOrExpression', 3),
        (95, 'NULL'): ('BitwiseOrExpression', 3),
        (95, 'RETURN'): ('BitwiseOrExpression', 3),
        (95, 'STRING'): ('BitwiseOrExpression', 3),
        (95, 'THIS'): ('BitwiseOrExpression', 3),
        (95, 'TRUE'): ('BitwiseOrExpression', 3),
        (95, 'UNARY_OPERATOR'): ('BitwiseOrExpression', 3),
        (95, 'VAR'): ('BitwiseOrExpression', 3),
        (95, 'WHILE'): ('BitwiseOrExpression', 3),
        (95, 'WITH'): ('BitwiseOrExpression', 3),
        (95, ']'): ('BitwiseOrExpression', 3),
        (95, '{'): ('BitwiseOrExpression', 3),
        (95, '||'): ('BitwiseOrExpression', 3),
        (96, '&&'): ('BitwiseXorExpression', 1),
        (96, '('): ('BitwiseXorExpression', 1),
        (96, ')'): ('BitwiseXorExpression', 1),
        (96, ','): ('BitwiseXorExpression', 1),
        (96, '-'): ('BitwiseXorExpression', 1),
        (96, ':'): ('BitwiseXorExpression', 1),
        (96, ';'): ('BitwiseXorExpression', 1),
        (96, '?'): ('BitwiseXorExpression', 1),
        (96, 'ASSIGNMENT_OPERATOR'): ('BitwiseXorExpression', 1),
        (96, 'BREAK'): ('BitwiseXorExpression', 1),
        (96, 'CONTINUE'): ('BitwiseXorExpression', 1),
        (96, 'DELETE'): ('BitwiseXorExpression', 1),
        (96, 'FALSE'): ('BitwiseXorExpression', 1),
        (96, 'FLOAT'): ('BitwiseXorExpression', 1),
        (96, 'FOR'): ('BitwiseXorExpression', 1),
        (96, 'IDENTIFIER'): ('BitwiseXorExpression', 1),
        (96, 'IF'): ('BitwiseXorExpression', 1),
        (96, 'IN'): ('BitwiseXorExpression', 1),
        (96, 'INCREMENT_OPERATOR'): ('BitwiseXorExpression', 1),
        (96, 'INTEGER'): ('BitwiseXorExpression', 1),
        (96, 'NEW'): ('BitwiseXorExpression', 1),
        (96, 'NULL'): ('BitwiseXorExpression', 1),
        (96, 'RETURN'): ('BitwiseXorExpression', 1),
        (96, 'STRING'): ('BitwiseXorExpression', 1),
        (96, 'THIS'): ('BitwiseXorExpression', 1),
        (96, 'TRUE'): ('BitwiseXorExpression', 1),
        (96, 'UNARY_OPERATOR'): ('BitwiseXorExpression', 1),
        (96, 'VAR'): ('BitwiseXorExpression', 1),
        (96, 'WHILE'): ('BitwiseXorExpression', 1),
        (96, 'WITH'): ('BitwiseXorExpression', 1),
        (96, ']'): ('BitwiseXorExpression', 1),
        (96, '{'): ('BitwiseXorExpression', 1),
        (96, '|'): ('BitwiseXorExpression', 1),
        (96, '||'): ('BitwiseXorExpression', 1),
        (98, '&&'): ('BitwiseXorExpression', 3),
        (98, '('): ('BitwiseXorExpression', 3),
        (98, ')'): ('BitwiseXorExpression', 3),
        (98, ','): ('BitwiseXorExpression', 3),
        (98, '-'): ('BitwiseXorExpression', 3),
        (98, ':'): ('BitwiseXorExpression', 3),
        (98, ';'): ('BitwiseXorExpression', 3),
        (98, '?'): ('BitwiseXorExpression', 3),
        (98, 'ASSIGNMENT_OPERATOR'): ('BitwiseXorExpression', 3),
        (98, 'BREAK'): ('BitwiseXorExpression', 3),
        (98, 'CONTINUE'): ('BitwiseXorExpression', 3),
        (98, 'DELETE'): ('BitwiseXorExpression', 3),
        (98, 'FALSE'): ('BitwiseXorExpression', 3),
        (98, 'FLOAT'): ('BitwiseXorExpression', 3),
        (98, 'FOR'): ('BitwiseXorExpression', 3),
        (98, 'IDENTIFIER'): ('BitwiseXorExpression', 3),
        (98, 'IF'): ('BitwiseXorExpression', 3),
        (98, 'IN'): ('BitwiseXorExpression', 3),
        (98, 'INCREMENT_OPERATOR'): ('BitwiseXorExpression', 3),
        (98, 'INTEGER'): ('BitwiseXorExpression', 3),
        (98, 'NEW'): ('BitwiseXorExpression', 3),
        (98, 'NULL'): ('BitwiseXorExpression', 3),
        (98, 'RETURN'): ('BitwiseXorExpression', 3),
        (98, 'STRING'): ('BitwiseXorExpression', 3),
        (98, 'THIS'): ('BitwiseXorExpression', 3),
        (98, 'TRUE'): ('BitwiseXorExpression', 3),
        (98, 'UNARY_OPERATOR'): ('BitwiseXorExpression', 3),
        (98, 'VAR'): ('BitwiseXorExpression', 3),
        (98, 'WHILE'): ('BitwiseXorExpression', 3),
        (98, 'WITH'): ('BitwiseXorExpression', 3),
        (98, ']'): ('BitwiseXorExpression', 3),
        (98, '{'): ('BitwiseXorExpression', 3),
        (98, '|'): ('BitwiseXorExpression', 3),
        (98, '||'): ('BitwiseXorExpression', 3),
        (99, '&&'): ('BitwiseAndExpression', 1),
        (99, '('): ('BitwiseAndExpression', 1),
        (99, ')'): ('BitwiseAndExpression', 1),
        (99, ','): ('BitwiseAndExpression', 1),
        (99, '-'): ('BitwiseAndExpression', 1),
        (99, ':'): ('BitwiseAndExpression', 1),
        (99, ';'): ('BitwiseAndExpression', 1),
        (99, '?'): ('BitwiseAndExpression', 1),
        (99, 'ASSIGNMENT_OPERATOR'): ('BitwiseAndExpression', 1),
        (99, 'BREAK'): ('BitwiseAndExpression', 1),
        (99, 'CONTINUE'): ('BitwiseAndExpression', 1),
        (99, 'DELETE'): ('BitwiseAndExpression', 1),
        (99, 'FALSE'): ('BitwiseAndExpression', 1),
        (99, 'FLOAT'): ('BitwiseAndExpression', 1),
        (99, 'FOR'): ('BitwiseAndExpression', 1),
        (99, 'IDENTIFIER'): ('BitwiseAndExpression', 1),
        (99, 'IF'): ('BitwiseAndExpression', 1),
        (99, 'IN'): ('BitwiseAndExpression', 1),
        (99, 'INCREMENT_OPERATOR'): ('BitwiseAndExpression', 1),
        (99, 'INTEGER'): ('BitwiseAndExpression', 1),
        (99, 'NEW'): ('BitwiseAndExpression', 1),
        (99, 'NULL'): ('BitwiseAndExpression', 1),
        (99, 'RETURN'): ('BitwiseAndExpression', 1),
        (99, 'STRING'): ('BitwiseAndExpression', 1),
        (99, 'THIS'): ('BitwiseAndExpression', 1),
        (99, 'TRUE'): ('BitwiseAndExpression', 1),
        (99, 'UNARY_OPERATOR'): ('BitwiseAndExpression', 1),
        (99, 'VAR'): ('BitwiseAndExpression', 1),
        (99, 'WHILE'): ('BitwiseAndExpression', 1),
        (99, 'WITH'): ('BitwiseAndExpression', 1),
        (99, ']'): ('BitwiseAndExpression', 1),
        (99, '^'): ('BitwiseAndExpression', 1),
        (99, '{'): ('BitwiseAndExpression', 1),
        (99, '|'): ('BitwiseAndExpression', 1),
        (99, '||'): ('BitwiseAndExpression', 1)
    }
    _goto = {
        (0, 'Program'): 1, (0, '_0*'): 2, (100, 'AdditiveExpression'): 108,
        (100, 'BitwiseAndExpression'): 101, (100, 'EqualityExpression'): 99,
        (100, 'MemberExpression'): 119, (100, 'MultiplicativeExpression'): 111,
        (100, 'PrimaryExpression'): 140, (100, 'RelationalExpression'): 102,
        (100, 'ShiftExpression'): 105, (100, 'UnaryExpression'): 116,
        (103, 'AdditiveExpression'): 108, (103, 'EqualityExpression'): 104,
        (103, 'MemberExpression'): 119, (103, 'MultiplicativeExpression'): 111,
        (103, 'PrimaryExpression'): 140, (103, 'RelationalExpression'): 102,
        (103, 'ShiftExpression'): 105, (103, 'UnaryExpression'): 116,
        (106, 'AdditiveExpression'): 108, (106, 'MemberExpression'): 119,
        (106, 'MultiplicativeExpression'): 111,
        (106, 'PrimaryExpression'): 140, (106, 'ShiftExpression'): 107,
        (106, 'UnaryExpression'): 116, (109, 'AdditiveExpression'): 108,
        (109, 'MemberExpression'): 119, (109, 'MultiplicativeExpression'): 111,
        (109, 'PrimaryExpression'): 140, (109, 'ShiftExpression'): 110,
        (109, 'UnaryExpression'): 116, (112, 'AdditiveExpression'): 113,
        (112, 'MemberExpression'): 119, (112, 'MultiplicativeExpression'): 111,
        (112, 'PrimaryExpression'): 140, (112, 'UnaryExpression'): 116,
        (114, 'AdditiveExpression'): 115, (114, 'MemberExpression'): 119,
        (114, 'MultiplicativeExpression'): 111,
        (114, 'PrimaryExpression'): 140, (114, 'UnaryExpression'): 116,
        (117, 'MemberExpression'): 119, (117, 'MultiplicativeExpression'): 118,
        (117, 'PrimaryExpression'): 140, (117, 'UnaryExpression'): 116,
        (12, '_3*'): 13, (120, 'MemberExpression'): 119,
        (120, 'PrimaryExpression'): 140, (120, 'UnaryExpression'): 121,
        (122, 'MemberExpression'): 119, (122, 'PrimaryExpression'): 140,
        (122, 'UnaryExpression'): 123, (124, 'MemberExpression'): 125,
        (124, 'PrimaryExpression'): 140, (127, '_10?'): 128,
        (128, 'ConstructorCall'): 129, (132, 'MemberExpression'): 133,
        (132, 'PrimaryExpression'): 140, (135, 'AdditiveExpression'): 108,
        (135, 'AndExpression'): 87, (135, 'ArgumentList'): 149,
        (135, 'ArgumentListOpt'): 136, (135, 'AssignmentExpression'): 150,
        (135, 'BitwiseAndExpression'): 96, (135, 'BitwiseOrExpression'): 90,
        (135, 'BitwiseXorExpression'): 93, (135, 'ConditionalExpression'): 79,
        (135, 'EqualityExpression'): 99, (135, 'MemberExpression'): 119,
        (135, 'MultiplicativeExpression'): 111, (135, 'OrExpression'): 82,
        (135, 'PrimaryExpression'): 140, (135, 'RelationalExpression'): 102,
        (135, 'ShiftExpression'): 105, (135, 'UnaryExpression'): 116,
        (138, 'ConstructorCall'): 139, (141, 'MemberExpression'): 142,
        (141, 'PrimaryExpression'): 140, (143, 'AdditiveExpression'): 108,
        (143, 'AndExpression'): 87, (143, 'AssignmentExpression'): 76,
        (143, 'BitwiseAndExpression'): 96, (143, 'BitwiseOrExpression'): 90,
        (143, 'BitwiseXorExpression'): 93, (143, 'ConditionalExpression'): 79,
        (143, 'EqualityExpression'): 99, (143, 'Expression'): 144,
        (143, 'MemberExpression'): 119, (143, 'MultiplicativeExpression'): 111,
        (143, 'OrExpression'): 82, (143, 'PrimaryExpression'): 140,
        (143, 'RelationalExpression'): 102, (143, 'ShiftExpression'): 105,
        (143, 'UnaryExpression'): 116, (146, 'AdditiveExpression'): 108,
        (146, 'AndExpression'): 87, (146, 'ArgumentList'): 149,
        (146, 'ArgumentListOpt'): 147, (146, 'AssignmentExpression'): 150,
        (146, 'BitwiseAndExpression'): 96, (146, 'BitwiseOrExpression'): 90,
        (146, 'BitwiseXorExpression'): 93, (146, 'ConditionalExpression'): 79,
        (146, 'EqualityExpression'): 99, (146, 'MemberExpression'): 119,
        (146, 'MultiplicativeExpression'): 111, (146, 'OrExpression'): 82,
        (146, 'PrimaryExpression'): 140, (146, 'RelationalExpression'): 102,
        (146, 'ShiftExpression'): 105, (146, 'UnaryExpression'): 116,
        (151, 'AdditiveExpression'): 108, (151, 'AndExpression'): 87,
        (151, 'ArgumentList'): 152, (151, 'AssignmentExpression'): 150,
        (151, 'BitwiseAndExpression'): 96, (151, 'BitwiseOrExpression'): 90,
        (151, 'BitwiseXorExpression'): 93, (151, 'ConditionalExpression'): 79,
        (151, 'EqualityExpression'): 99, (151, 'MemberExpression'): 119,
        (151, 'MultiplicativeExpression'): 111, (151, 'OrExpression'): 82,
        (151, 'PrimaryExpression'): 140, (151, 'RelationalExpression'): 102,
        (151, 'ShiftExpression'): 105, (151, 'UnaryExpression'): 116,
        (153, 'AdditiveExpression'): 108, (153, 'AndExpression'): 87,
        (153, 'AssignmentExpression'): 76, (153, 'BitwiseAndExpression'): 96,
        (153, 'BitwiseOrExpression'): 90, (153, 'BitwiseXorExpression'): 93,
        (153, 'ConditionalExpression'): 79, (153, 'EqualityExpression'): 99,
        (153, 'Expression'): 154, (153, 'MemberExpression'): 119,
        (153, 'MultiplicativeExpression'): 111, (153, 'OrExpression'): 82,
        (153, 'PrimaryExpression'): 140, (153, 'RelationalExpression'): 102,
        (153, 'ShiftExpression'): 105, (153, 'UnaryExpression'): 116,
        (16, 'Statements'): 17, (16, '_4*'): 19,
        (19, 'AdditiveExpression'): 108, (19, 'AndExpression'): 87,
        (19, 'AssignmentExpression'): 76, (19, 'BitwiseAndExpression'): 96,
        (19, 'BitwiseOrExpression'): 90, (19, 'BitwiseXorExpression'): 93,
        (19, 'CompoundStatement'): 61, (19, 'ConditionalExpression'): 79,
        (19, 'EqualityExpression'): 99, (19, 'Expression'): 67,
        (19, 'MemberExpression'): 119, (19, 'MultiplicativeExpression'): 111,
        (19, 'OrExpression'): 82, (19, 'PrimaryExpression'): 140,
        (19, 'RelationalExpression'): 102, (19, 'ShiftExpression'): 105,
        (19, 'Statement'): 20, (19, 'UnaryExpression'): 116,
        (19, 'VariablesOrExpression'): 62, (2, 'AdditiveExpression'): 108,
        (2, 'AndExpression'): 87, (2, 'AssignmentExpression'): 76,
        (2, 'BitwiseAndExpression'): 96, (2, 'BitwiseOrExpression'): 90,
        (2, 'BitwiseXorExpression'): 93, (2, 'CompoundStatement'): 61,
        (2, 'ConditionalExpression'): 79, (2, 'Element'): 3,
        (2, 'EqualityExpression'): 99, (2, 'Expression'): 67,
        (2, 'MemberExpression'): 119, (2, 'MultiplicativeExpression'): 111,
        (2, 'OrExpression'): 82, (2, 'PrimaryExpression'): 140,
        (2, 'RelationalExpression'): 102, (2, 'ShiftExpression'): 105,
        (2, 'Statement'): 10, (2, 'UnaryExpression'): 116,
        (2, 'VariablesOrExpression'): 62, (22, 'AdditiveExpression'): 108,
        (22, 'AndExpression'): 87, (22, 'AssignmentExpression'): 76,
        (22, 'BitwiseAndExpression'): 96, (22, 'BitwiseOrExpression'): 90,
        (22, 'BitwiseXorExpression'): 93, (22, 'Condition'): 23,
        (22, 'ConditionalExpression'): 79, (22, 'EqualityExpression'): 99,
        (22, 'Expression'): 64, (22, 'MemberExpression'): 119,
        (22, 'MultiplicativeExpression'): 111, (22, 'OrExpression'): 82,
        (22, 'PrimaryExpression'): 140, (22, 'RelationalExpression'): 102,
        (22, 'ShiftExpression'): 105, (22, 'UnaryExpression'): 116,
        (23, 'AdditiveExpression'): 108, (23, 'AndExpression'): 87,
        (23, 'AssignmentExpression'): 76, (23, 'BitwiseAndExpression'): 96,
        (23, 'BitwiseOrExpression'): 90, (23, 'BitwiseXorExpression'): 93,
        (23, 'CompoundStatement'): 61, (23, 'ConditionalExpression'): 79,
        (23, 'EqualityExpression'): 99, (23, 'Expression'): 67,
        (23, 'MemberExpression'): 119, (23, 'MultiplicativeExpression'): 111,
        (23, 'OrExpression'): 82, (23, 'PrimaryExpression'): 140,
        (23, 'RelationalExpression'): 102, (23, 'ShiftExpression'): 105,
        (23, 'Statement'): 24, (23, 'UnaryExpression'): 116,
        (23, 'VariablesOrExpression'): 62, (25, 'AdditiveExpression'): 108,
        (25, 'AndExpression'): 87, (25, 'AssignmentExpression'): 76,
        (25, 'BitwiseAndExpression'): 96, (25, 'BitwiseOrExpression'): 90,
        (25, 'BitwiseXorExpression'): 93, (25, 'CompoundStatement'): 61,
        (25, 'ConditionalExpression'): 79, (25, 'EqualityExpression'): 99,
        (25, 'Expression'): 67, (25, 'MemberExpression'): 119,
        (25, 'MultiplicativeExpression'): 111, (25, 'OrExpression'): 82,
        (25, 'PrimaryExpression'): 140, (25, 'RelationalExpression'): 102,
        (25, 'ShiftExpression'): 105, (25, 'Statement'): 26,
        (25, 'UnaryExpression'): 116, (25, 'VariablesOrExpression'): 62,
        (27, 'AdditiveExpression'): 108, (27, 'AndExpression'): 87,
        (27, 'AssignmentExpression'): 76, (27, 'BitwiseAndExpression'): 96,
        (27, 'BitwiseOrExpression'): 90, (27, 'BitwiseXorExpression'): 93,
        (27, 'Condition'): 28, (27, 'ConditionalExpression'): 79,
        (27, 'EqualityExpression'): 99, (27, 'Expression'): 64,
        (27, 'MemberExpression'): 119, (27, 'MultiplicativeExpression'): 111,
        (27, 'OrExpression'): 82, (27, 'PrimaryExpression'): 140,
        (27, 'RelationalExpression'): 102, (27, 'ShiftExpression'): 105,
        (27, 'UnaryExpression'): 116, (28, 'AdditiveExpression'): 108,
        (28, 'AndExpression'): 87, (28, 'AssignmentExpression'): 76,
        (28, 'BitwiseAndExpression'): 96, (28, 'BitwiseOrExpression'): 90,
        (28, 'BitwiseXorExpression'): 93, (28, 'CompoundStatement'): 61,
        (28, 'ConditionalExpression'): 79, (28, 'EqualityExpression'): 99,
        (28, 'Expression'): 67, (28, 'MemberExpression'): 119,
        (28, 'MultiplicativeExpression'): 111, (28, 'OrExpression'): 82,
        (28, 'PrimaryExpression'): 140, (28, 'RelationalExpression'): 102,
        (28, 'ShiftExpression'): 105, (28, 'Statement'): 29,
        (28, 'UnaryExpression'): 116, (28, 'VariablesOrExpression'): 62,
        (31, 'AdditiveExpression'): 108, (31, 'AndExpression'): 87,
        (31, 'AssignmentExpression'): 76, (31, 'BitwiseAndExpression'): 96,
        (31, 'BitwiseOrExpression'): 90, (31, 'BitwiseXorExpression'): 93,
        (31, 'ConditionalExpression'): 79, (31, 'EqualityExpression'): 99,
        (31, 'Expression'): 67, (31, 'MemberExpression'): 119,
        (31, 'MultiplicativeExpression'): 111, (31, 'OrExpression'): 82,
        (31, 'PrimaryExpression'): 140, (31, 'RelationalExpression'): 102,
        (31, 'ShiftExpression'): 105, (31, 'UnaryExpression'): 116,
        (31, 'VariablesOrExpression'): 38, (32, 'AdditiveExpression'): 108,
        (32, 'AndExpression'): 87, (32, 'AssignmentExpression'): 76,
        (32, 'BitwiseAndExpression'): 96, (32, 'BitwiseOrExpression'): 90,
        (32, 'BitwiseXorExpression'): 93, (32, 'ConditionalExpression'): 79,
        (32, 'EqualityExpression'): 99, (32, 'Expression'): 75,
        (32, 'ExpressionOpt'): 33, (32, 'MemberExpression'): 119,
        (32, 'MultiplicativeExpression'): 111, (32, 'OrExpression'): 82,
        (32, 'PrimaryExpression'): 140, (32, 'RelationalExpression'): 102,
        (32, 'ShiftExpression'): 105, (32, 'UnaryExpression'): 116,
        (34, 'AdditiveExpression'): 108, (34, 'AndExpression'): 87,
        (34, 'AssignmentExpression'): 76, (34, 'BitwiseAndExpression'): 96,
        (34, 'BitwiseOrExpression'): 90, (34, 'BitwiseXorExpression'): 93,
        (34, 'ConditionalExpression'): 79, (34, 'EqualityExpression'): 99,
        (34, 'Expression'): 75, (34, 'ExpressionOpt'): 35,
        (34, 'MemberExpression'): 119, (34, 'MultiplicativeExpression'): 111,
        (34, 'OrExpression'): 82, (34, 'PrimaryExpression'): 140,
        (34, 'RelationalExpression'): 102, (34, 'ShiftExpression'): 105,
        (34, 'UnaryExpression'): 116, (36, 'AdditiveExpression'): 108,
        (36, 'AndExpression'): 87, (36, 'AssignmentExpression'): 76,
        (36, 'BitwiseAndExpression'): 96, (36, 'BitwiseOrExpression'): 90,
        (36, 'BitwiseXorExpression'): 93, (36, 'CompoundStatement'): 61,
        (36, 'ConditionalExpression'): 79, (36, 'EqualityExpression'): 99,
        (36, 'Expression'): 67, (36, 'MemberExpression'): 119,
        (36, 'MultiplicativeExpression'): 111, (36, 'OrExpression'): 82,
        (36, 'PrimaryExpression'): 140, (36, 'RelationalExpression'): 102,
        (36, 'ShiftExpression'): 105, (36, 'Statement'): 37,
        (36, 'UnaryExpression'): 116, (36, 'VariablesOrExpression'): 62,
        (39, 'AdditiveExpression'): 108, (39, 'AndExpression'): 87,
        (39, 'AssignmentExpression'): 76, (39, 'BitwiseAndExpression'): 96,
        (39, 'BitwiseOrExpression'): 90, (39, 'BitwiseXorExpression'): 93,
        (39, 'ConditionalExpression'): 79, (39, 'EqualityExpression'): 99,
        (39, 'Expression'): 75, (39, 'ExpressionOpt'): 40,
        (39, 'MemberExpression'): 119, (39, 'MultiplicativeExpression'): 111,
        (39, 'OrExpression'): 82, (39, 'PrimaryExpression'): 140,
        (39, 'RelationalExpression'): 102, (39, 'ShiftExpression'): 105,
        (39, 'UnaryExpression'): 116, (41, 'AdditiveExpression'): 108,
        (41, 'AndExpression'): 87, (41, 'AssignmentExpression'): 76,
        (41, 'BitwiseAndExpression'): 96, (41, 'BitwiseOrExpression'): 90,
        (41, 'BitwiseXorExpression'): 93, (41, 'ConditionalExpression'): 79,
        (41, 'EqualityExpression'): 99, (41, 'Expression'): 75,
        (41, 'ExpressionOpt'): 42, (41, 'MemberExpression'): 119,
        (41, 'MultiplicativeExpression'): 111, (41, 'OrExpression'): 82,
        (41, 'PrimaryExpression'): 140, (41, 'RelationalExpression'): 102,
        (41, 'ShiftExpression'): 105, (41, 'UnaryExpression'): 116,
        (43, 'AdditiveExpression'): 108, (43, 'AndExpression'): 87,
        (43, 'AssignmentExpression'): 76, (43, 'BitwiseAndExpression'): 96,
        (43, 'BitwiseOrExpression'): 90, (43, 'BitwiseXorExpression'): 93,
        (43, 'CompoundStatement'): 61, (43, 'ConditionalExpression'): 79,
        (43, 'EqualityExpression'): 99, (43, 'Expression'): 67,
        (43, 'MemberExpression'): 119, (43, 'MultiplicativeExpression'): 111,
        (43, 'OrExpression'): 82, (43, 'PrimaryExpression'): 140,
        (43, 'RelationalExpression'): 102, (43, 'ShiftExpression'): 105,
        (43, 'Statement'): 44, (43, 'UnaryExpression'): 116,
        (43, 'VariablesOrExpression'): 62, (45, 'AdditiveExpression'): 108,
        (45, 'AndExpression'): 87, (45, 'AssignmentExpression'): 76,
        (45, 'BitwiseAndExpression'): 96, (45, 'BitwiseOrExpression'): 90,
        (45, 'BitwiseXorExpression'): 93, (45, 'ConditionalExpression'): 79,
        (45, 'EqualityExpression'): 99, (45, 'Expression'): 46,
        (45, 'MemberExpression'): 119, (45, 'MultiplicativeExpression'): 111,
        (45, 'OrExpression'): 82, (45, 'PrimaryExpression'): 140,
        (45, 'RelationalExpression'): 102, (45, 'ShiftExpression'): 105,
        (45, 'UnaryExpression'): 116, (47, 'AdditiveExpression'): 108,
        (47, 'AndExpression'): 87, (47, 'AssignmentExpression'): 76,
        (47, 'BitwiseAndExpression'): 96, (47, 'BitwiseOrExpression'): 90,
        (47, 'BitwiseXorExpression'): 93, (47, 'CompoundStatement'): 61,
        (47, 'ConditionalExpression'): 79, (47, 'EqualityExpression'): 99,
        (47, 'Expression'): 67, (47, 'MemberExpression'): 119,
        (47, 'MultiplicativeExpression'): 111, (47, 'OrExpression'): 82,
        (47, 'PrimaryExpression'): 140, (47, 'RelationalExpression'): 102,
        (47, 'ShiftExpression'): 105, (47, 'Statement'): 48,
        (47, 'UnaryExpression'): 116, (47, 'VariablesOrExpression'): 62,
        (54, 'AdditiveExpression'): 108, (54, 'AndExpression'): 87,
        (54, 'AssignmentExpression'): 76, (54, 'BitwiseAndExpression'): 96,
        (54, 'BitwiseOrExpression'): 90, (54, 'BitwiseXorExpression'): 93,
        (54, 'ConditionalExpression'): 79, (54, 'EqualityExpression'): 99,
        (54, 'Expression'): 55, (54, 'MemberExpression'): 119,
        (54, 'MultiplicativeExpression'): 111, (54, 'OrExpression'): 82,
        (54, 'PrimaryExpression'): 140, (54, 'RelationalExpression'): 102,
        (54, 'ShiftExpression'): 105, (54, 'UnaryExpression'): 116,
        (56, 'AdditiveExpression'): 108, (56, 'AndExpression'): 87,
        (56, 'AssignmentExpression'): 76, (56, 'BitwiseAndExpression'): 96,
        (56, 'BitwiseOrExpression'): 90, (56, 'BitwiseXorExpression'): 93,
        (56, 'CompoundStatement'): 61, (56, 'ConditionalExpression'): 79,
        (56, 'EqualityExpression'): 99, (56, 'Expression'): 67,
        (56, 'MemberExpression'): 119, (56, 'MultiplicativeExpression'): 111,
        (56, 'OrExpression'): 82, (56, 'PrimaryExpression'): 140,
        (56, 'RelationalExpression'): 102, (56, 'ShiftExpression'): 105,
        (56, 'Statement'): 57, (56, 'UnaryExpression'): 116,
        (56, 'VariablesOrExpression'): 62, (58, 'AdditiveExpression'): 108,
        (58, 'AndExpression'): 87, (58, 'AssignmentExpression'): 76,
        (58, 'BitwiseAndExpression'): 96, (58, 'BitwiseOrExpression'): 90,
        (58, 'BitwiseXorExpression'): 93, (58, 'ConditionalExpression'): 79,
        (58, 'EqualityExpression'): 99, (58, 'Expression'): 75,
        (58, 'ExpressionOpt'): 59, (58, 'MemberExpression'): 119,
        (58, 'MultiplicativeExpression'): 111, (58, 'OrExpression'): 82,
        (58, 'PrimaryExpression'): 140, (58, 'RelationalExpression'): 102,
        (58, 'ShiftExpression'): 105, (58, 'UnaryExpression'): 116,
        (6, 'ParameterList'): 11, (6, 'ParameterListOpt'): 7,
        (65, 'Variable'): 68, (65, 'Variables'): 66, (68, '_7*'): 69,
        (70, 'Variable'): 71, (73, 'AdditiveExpression'): 108,
        (73, 'AndExpression'): 87, (73, 'AssignmentExpression'): 74,
        (73, 'BitwiseAndExpression'): 96, (73, 'BitwiseOrExpression'): 90,
        (73, 'BitwiseXorExpression'): 93, (73, 'ConditionalExpression'): 79,
        (73, 'EqualityExpression'): 99, (73, 'MemberExpression'): 119,
        (73, 'MultiplicativeExpression'): 111, (73, 'OrExpression'): 82,
        (73, 'PrimaryExpression'): 140, (73, 'RelationalExpression'): 102,
        (73, 'ShiftExpression'): 105, (73, 'UnaryExpression'): 116,
        (77, 'AdditiveExpression'): 108, (77, 'AndExpression'): 87,
        (77, 'AssignmentExpression'): 76, (77, 'BitwiseAndExpression'): 96,
        (77, 'BitwiseOrExpression'): 90, (77, 'BitwiseXorExpression'): 93,
        (77, 'ConditionalExpression'): 79, (77, 'EqualityExpression'): 99,
        (77, 'Expression'): 78, (77, 'MemberExpression'): 119,
        (77, 'MultiplicativeExpression'): 111, (77, 'OrExpression'): 82,
        (77, 'PrimaryExpression'): 140, (77, 'RelationalExpression'): 102,
        (77, 'ShiftExpression'): 105, (77, 'UnaryExpression'): 116,
        (8, 'CompoundStatement'): 9, (80, 'AdditiveExpression'): 108,
        (80, 'AndExpression'): 87, (80, 'AssignmentExpression'): 81,
        (80, 'BitwiseAndExpression'): 96, (80, 'BitwiseOrExpression'): 90,
        (80, 'BitwiseXorExpression'): 93, (80, 'ConditionalExpression'): 79,
        (80, 'EqualityExpression'): 99, (80, 'MemberExpression'): 119,
        (80, 'MultiplicativeExpression'): 111, (80, 'OrExpression'): 82,
        (80, 'PrimaryExpression'): 140, (80, 'RelationalExpression'): 102,
        (80, 'ShiftExpression'): 105, (80, 'UnaryExpression'): 116,
        (83, 'AdditiveExpression'): 108, (83, 'AndExpression'): 87,
        (83, 'AssignmentExpression'): 84, (83, 'BitwiseAndExpression'): 96,
        (83, 'BitwiseOrExpression'): 90, (83, 'BitwiseXorExpression'): 93,
        (83, 'ConditionalExpression'): 79, (83, 'EqualityExpression'): 99,
        (83, 'MemberExpression'): 119, (83, 'MultiplicativeExpression'): 111,
        (83, 'OrExpression'): 82, (83, 'PrimaryExpression'): 140,
        (83, 'RelationalExpression'): 102, (83, 'ShiftExpression'): 105,
        (83, 'UnaryExpression'): 116, (85, 'AdditiveExpression'): 108,
        (85, 'AndExpression'): 87, (85, 'AssignmentExpression'): 86,
        (85, 'BitwiseAndExpression'): 96, (85, 'BitwiseOrExpression'): 90,
        (85, 'BitwiseXorExpression'): 93, (85, 'ConditionalExpression'): 79,
        (85, 'EqualityExpression'): 99, (85, 'MemberExpression'): 119,
        (85, 'MultiplicativeExpression'): 111, (85, 'OrExpression'): 82,
        (85, 'PrimaryExpression'): 140, (85, 'RelationalExpression'): 102,
        (85, 'ShiftExpression'): 105, (85, 'UnaryExpression'): 116,
        (88, 'AdditiveExpression'): 108, (88, 'AndExpression'): 87,
        (88, 'BitwiseAndExpression'): 96, (88, 'BitwiseOrExpression'): 90,
        (88, 'BitwiseXorExpression'): 93, (88, 'EqualityExpression'): 99,
        (88, 'MemberExpression'): 119, (88, 'MultiplicativeExpression'): 111,
        (88, 'OrExpression'): 89, (88, 'PrimaryExpression'): 140,
        (88, 'RelationalExpression'): 102, (88, 'ShiftExpression'): 105,
        (88, 'UnaryExpression'): 116, (91, 'AdditiveExpression'): 108,
        (91, 'AndExpression'): 92, (91, 'BitwiseAndExpression'): 96,
        (91, 'BitwiseOrExpression'): 90, (91, 'BitwiseXorExpression'): 93,
        (91, 'EqualityExpression'): 99, (91, 'MemberExpression'): 119,
        (91, 'MultiplicativeExpression'): 111, (91, 'PrimaryExpression'): 140,
        (91, 'RelationalExpression'): 102, (91, 'ShiftExpression'): 105,
        (91, 'UnaryExpression'): 116, (94, 'AdditiveExpression'): 108,
        (94, 'BitwiseAndExpression'): 96, (94, 'BitwiseOrExpression'): 95,
        (94, 'BitwiseXorExpression'): 93, (94, 'EqualityExpression'): 99,
        (94, 'MemberExpression'): 119, (94, 'MultiplicativeExpression'): 111,
        (94, 'PrimaryExpression'): 140, (94, 'RelationalExpression'): 102,
        (94, 'ShiftExpression'): 105, (94, 'UnaryExpression'): 116,
        (97, 'AdditiveExpression'): 108, (97, 'BitwiseAndExpression'): 96,
        (97, 'BitwiseXorExpression'): 98, (97, 'EqualityExpression'): 99,
        (97, 'MemberExpression'): 119, (97, 'MultiplicativeExpression'): 111,
        (97, 'PrimaryExpression'): 140, (97, 'RelationalExpression'): 102,
        (97, 'ShiftExpression'): 105, (97, 'UnaryExpression'): 116
    }
    _shift = {
        (1, EOF): 164, (100, '('): 153, (100, '-'): 122, (100, 'DELETE'): 132,
        (100, 'FALSE'): 160, (100, 'FLOAT'): 158, (100, 'IDENTIFIER'): 156,
        (100, 'INCREMENT_OPERATOR'): 124, (100, 'INTEGER'): 157,
        (100, 'NEW'): 127, (100, 'NULL'): 162, (100, 'STRING'): 159,
        (100, 'THIS'): 163, (100, 'TRUE'): 161, (100, 'UNARY_OPERATOR'): 120,
        (102, 'EQUALITY_OPERATOR'): 103, (102, 'RELATIONAL_OPERATOR'): 106,
        (103, '('): 153, (103, '-'): 122, (103, 'DELETE'): 132,
        (103, 'FALSE'): 160, (103, 'FLOAT'): 158, (103, 'IDENTIFIER'): 156,
        (103, 'INCREMENT_OPERATOR'): 124, (103, 'INTEGER'): 157,
        (103, 'NEW'): 127, (103, 'NULL'): 162, (103, 'STRING'): 159,
        (103, 'THIS'): 163, (103, 'TRUE'): 161, (103, 'UNARY_OPERATOR'): 120,
        (106, '('): 153, (106, '-'): 122, (106, 'DELETE'): 132,
        (106, 'FALSE'): 160, (106, 'FLOAT'): 158, (106, 'IDENTIFIER'): 156,
        (106, 'INCREMENT_OPERATOR'): 124, (106, 'INTEGER'): 157,
        (106, 'NEW'): 127, (106, 'NULL'): 162, (106, 'STRING'): 159,
        (106, 'THIS'): 163, (106, 'TRUE'): 161, (106, 'UNARY_OPERATOR'): 120,
        (108, 'SHIFT_OPERATOR'): 109, (109, '('): 153, (109, '-'): 122,
        (109, 'DELETE'): 132, (109, 'FALSE'): 160, (109, 'FLOAT'): 158,
        (109, 'IDENTIFIER'): 156, (109, 'INCREMENT_OPERATOR'): 124,
        (109, 'INTEGER'): 157, (109, 'NEW'): 127, (109, 'NULL'): 162,
        (109, 'STRING'): 159, (109, 'THIS'): 163, (109, 'TRUE'): 161,
        (109, 'UNARY_OPERATOR'): 120, (111, '+'): 112, (111, '-'): 114,
        (112, '('): 153, (112, '-'): 122, (112, 'DELETE'): 132,
        (112, 'FALSE'): 160, (112, 'FLOAT'): 158, (112, 'IDENTIFIER'): 156,
        (112, 'INCREMENT_OPERATOR'): 124, (112, 'INTEGER'): 157,
        (112, 'NEW'): 127, (112, 'NULL'): 162, (112, 'STRING'): 159,
        (112, 'THIS'): 163, (112, 'TRUE'): 161, (112, 'UNARY_OPERATOR'): 120,
        (114, '('): 153, (114, '-'): 122, (114, 'DELETE'): 132,
        (114, 'FALSE'): 160, (114, 'FLOAT'): 158, (114, 'IDENTIFIER'): 156,
        (114, 'INCREMENT_OPERATOR'): 124, (114, 'INTEGER'): 157,
        (114, 'NEW'): 127, (114, 'NULL'): 162, (114, 'STRING'): 159,
        (114, 'THIS'): 163, (114, 'TRUE'): 161, (114, 'UNARY_OPERATOR'): 120,
        (116, 'MULTIPLICATIVE_OPERATOR'): 117, (117, '('): 153,
        (117, '-'): 122, (117, 'DELETE'): 132, (117, 'FALSE'): 160,
        (117, 'FLOAT'): 158, (117, 'IDENTIFIER'): 156,
        (117, 'INCREMENT_OPERATOR'): 124, (117, 'INTEGER'): 157,
        (117, 'NEW'): 127, (117, 'NULL'): 162, (117, 'STRING'): 159,
        (117, 'THIS'): 163, (117, 'TRUE'): 161, (117, 'UNARY_OPERATOR'): 120,
        (119, 'INCREMENT_OPERATOR'): 126, (120, '('): 153, (120, '-'): 122,
        (120, 'DELETE'): 132, (120, 'FALSE'): 160, (120, 'FLOAT'): 158,
        (120, 'IDENTIFIER'): 156, (120, 'INCREMENT_OPERATOR'): 124,
        (120, 'INTEGER'): 157, (120, 'NEW'): 127, (120, 'NULL'): 162,
        (120, 'STRING'): 159, (120, 'THIS'): 163, (120, 'TRUE'): 161,
        (120, 'UNARY_OPERATOR'): 120, (122, '('): 153, (122, '-'): 122,
        (122, 'DELETE'): 132, (122, 'FALSE'): 160, (122, 'FLOAT'): 158,
        (122, 'IDENTIFIER'): 156, (122, 'INCREMENT_OPERATOR'): 124,
        (122, 'INTEGER'): 157, (122, 'NEW'): 127, (122, 'NULL'): 162,
        (122, 'STRING'): 159, (122, 'THIS'): 163, (122, 'TRUE'): 161,
        (122, 'UNARY_OPERATOR'): 120, (124, '('): 153, (124, 'FALSE'): 160,
        (124, 'FLOAT'): 158, (124, 'IDENTIFIER'): 156, (124, 'INTEGER'): 157,
        (124, 'NULL'): 162, (124, 'STRING'): 159, (124, 'THIS'): 163,
        (124, 'TRUE'): 161, (127, 'THIS'): 130, (128, 'IDENTIFIER'): 134,
        (13, ','): 14, (130, '.'): 131, (132, '('): 153, (132, 'FALSE'): 160,
        (132, 'FLOAT'): 158, (132, 'IDENTIFIER'): 156, (132, 'INTEGER'): 157,
        (132, 'NULL'): 162, (132, 'STRING'): 159, (132, 'THIS'): 163,
        (132, 'TRUE'): 161, (134, '('): 135, (134, '.'): 138, (135, '('): 153,
        (135, '-'): 122, (135, 'DELETE'): 132, (135, 'FALSE'): 160,
        (135, 'FLOAT'): 158, (135, 'IDENTIFIER'): 156,
        (135, 'INCREMENT_OPERATOR'): 124, (135, 'INTEGER'): 157,
        (135, 'NEW'): 127, (135, 'NULL'): 162, (135, 'STRING'): 159,
        (135, 'THIS'): 163, (135, 'TRUE'): 161, (135, 'UNARY_OPERATOR'): 120,
        (136, ')'): 137, (138, 'IDENTIFIER'): 134, (14, 'IDENTIFIER'): 15,
        (140, '('): 146, (140, '.'): 141, (140, '['): 143, (141, '('): 153,
        (141, 'FALSE'): 160, (141, 'FLOAT'): 158, (141, 'IDENTIFIER'): 156,
        (141, 'INTEGER'): 157, (141, 'NULL'): 162, (141, 'STRING'): 159,
        (141, 'THIS'): 163, (141, 'TRUE'): 161, (143, '('): 153,
        (143, '-'): 122, (143, 'DELETE'): 132, (143, 'FALSE'): 160,
        (143, 'FLOAT'): 158, (143, 'IDENTIFIER'): 156,
        (143, 'INCREMENT_OPERATOR'): 124, (143, 'INTEGER'): 157,
        (143, 'NEW'): 127, (143, 'NULL'): 162, (143, 'STRING'): 159,
        (143, 'THIS'): 163, (143, 'TRUE'): 161, (143, 'UNARY_OPERATOR'): 120,
        (144, ']'): 145, (146, '('): 153, (146, '-'): 122,
        (146, 'DELETE'): 132, (146, 'FALSE'): 160, (146, 'FLOAT'): 158,
        (146, 'IDENTIFIER'): 156, (146, 'INCREMENT_OPERATOR'): 124,
        (146, 'INTEGER'): 157, (146, 'NEW'): 127, (146, 'NULL'): 162,
        (146, 'STRING'): 159, (146, 'THIS'): 163, (146, 'TRUE'): 161,
        (146, 'UNARY_OPERATOR'): 120, (147, ')'): 148, (150, ','): 151,
        (151, '('): 153, (151, '-'): 122, (151, 'DELETE'): 132,
        (151, 'FALSE'): 160, (151, 'FLOAT'): 158, (151, 'IDENTIFIER'): 156,
        (151, 'INCREMENT_OPERATOR'): 124, (151, 'INTEGER'): 157,
        (151, 'NEW'): 127, (151, 'NULL'): 162, (151, 'STRING'): 159,
        (151, 'THIS'): 163, (151, 'TRUE'): 161, (151, 'UNARY_OPERATOR'): 120,
        (153, '('): 153, (153, '-'): 122, (153, 'DELETE'): 132,
        (153, 'FALSE'): 160, (153, 'FLOAT'): 158, (153, 'IDENTIFIER'): 156,
        (153, 'INCREMENT_OPERATOR'): 124, (153, 'INTEGER'): 157,
        (153, 'NEW'): 127, (153, 'NULL'): 162, (153, 'STRING'): 159,
        (153, 'THIS'): 163, (153, 'TRUE'): 161, (153, 'UNARY_OPERATOR'): 120,
        (154, ')'): 155, (17, '}'): 18, (19, '('): 153, (19, '-'): 122,
        (19, ';'): 21, (19, 'BREAK'): 49, (19, 'CONTINUE'): 51,
        (19, 'DELETE'): 132, (19, 'FALSE'): 160, (19, 'FLOAT'): 158,
        (19, 'FOR'): 30, (19, 'IDENTIFIER'): 156, (19, 'IF'): 22,
        (19, 'INCREMENT_OPERATOR'): 124, (19, 'INTEGER'): 157,
        (19, 'NEW'): 127, (19, 'NULL'): 162, (19, 'RETURN'): 58,
        (19, 'STRING'): 159, (19, 'THIS'): 163, (19, 'TRUE'): 161,
        (19, 'UNARY_OPERATOR'): 120, (19, 'VAR'): 65, (19, 'WHILE'): 27,
        (19, 'WITH'): 53, (19, '{'): 16, (2, '('): 153, (2, '-'): 122,
        (2, ';'): 21, (2, 'BREAK'): 49, (2, 'CONTINUE'): 51,
        (2, 'DELETE'): 132, (2, 'FALSE'): 160, (2, 'FLOAT'): 158,
        (2, 'FOR'): 30, (2, 'FUNCTION'): 4, (2, 'IDENTIFIER'): 156,
        (2, 'IF'): 22, (2, 'INCREMENT_OPERATOR'): 124, (2, 'INTEGER'): 157,
        (2, 'NEW'): 127, (2, 'NULL'): 162, (2, 'RETURN'): 58,
        (2, 'STRING'): 159, (2, 'THIS'): 163, (2, 'TRUE'): 161,
        (2, 'UNARY_OPERATOR'): 120, (2, 'VAR'): 65, (2, 'WHILE'): 27,
        (2, 'WITH'): 53, (2, '{'): 16, (22, '('): 153, (22, '-'): 122,
        (22, 'DELETE'): 132, (22, 'FALSE'): 160, (22, 'FLOAT'): 158,
        (22, 'IDENTIFIER'): 156, (22, 'INCREMENT_OPERATOR'): 124,
        (22, 'INTEGER'): 157, (22, 'NEW'): 127, (22, 'NULL'): 162,
        (22, 'STRING'): 159, (22, 'THIS'): 163, (22, 'TRUE'): 161,
        (22, 'UNARY_OPERATOR'): 120, (23, '('): 153, (23, '-'): 122,
        (23, ';'): 21, (23, 'BREAK'): 49, (23, 'CONTINUE'): 51,
        (23, 'DELETE'): 132, (23, 'FALSE'): 160, (23, 'FLOAT'): 158,
        (23, 'FOR'): 30, (23, 'IDENTIFIER'): 156, (23, 'IF'): 22,
        (23, 'INCREMENT_OPERATOR'): 124, (23, 'INTEGER'): 157,
        (23, 'NEW'): 127, (23, 'NULL'): 162, (23, 'RETURN'): 58,
        (23, 'STRING'): 159, (23, 'THIS'): 163, (23, 'TRUE'): 161,
        (23, 'UNARY_OPERATOR'): 120, (23, 'VAR'): 65, (23, 'WHILE'): 27,
        (23, 'WITH'): 53, (23, '{'): 16, (24, 'ELSE'): 25, (25, '('): 153,
        (25, '-'): 122, (25, ';'): 21, (25, 'BREAK'): 49, (25, 'CONTINUE'): 51,
        (25, 'DELETE'): 132, (25, 'FALSE'): 160, (25, 'FLOAT'): 158,
        (25, 'FOR'): 30, (25, 'IDENTIFIER'): 156, (25, 'IF'): 22,
        (25, 'INCREMENT_OPERATOR'): 124, (25, 'INTEGER'): 157,
        (25, 'NEW'): 127, (25, 'NULL'): 162, (25, 'RETURN'): 58,
        (25, 'STRING'): 159, (25, 'THIS'): 163, (25, 'TRUE'): 161,
        (25, 'UNARY_OPERATOR'): 120, (25, 'VAR'): 65, (25, 'WHILE'): 27,
        (25, 'WITH'): 53, (25, '{'): 16, (27, '('): 153, (27, '-'): 122,
        (27, 'DELETE'): 132, (27, 'FALSE'): 160, (27, 'FLOAT'): 158,
        (27, 'IDENTIFIER'): 156, (27, 'INCREMENT_OPERATOR'): 124,
        (27, 'INTEGER'): 157, (27, 'NEW'): 127, (27, 'NULL'): 162,
        (27, 'STRING'): 159, (27, 'THIS'): 163, (27, 'TRUE'): 161,
        (27, 'UNARY_OPERATOR'): 120, (28, '('): 153, (28, '-'): 122,
        (28, ';'): 21, (28, 'BREAK'): 49, (28, 'CONTINUE'): 51,
        (28, 'DELETE'): 132, (28, 'FALSE'): 160, (28, 'FLOAT'): 158,
        (28, 'FOR'): 30, (28, 'IDENTIFIER'): 156, (28, 'IF'): 22,
        (28, 'INCREMENT_OPERATOR'): 124, (28, 'INTEGER'): 157,
        (28, 'NEW'): 127, (28, 'NULL'): 162, (28, 'RETURN'): 58,
        (28, 'STRING'): 159, (28, 'THIS'): 163, (28, 'TRUE'): 161,
        (28, 'UNARY_OPERATOR'): 120, (28, 'VAR'): 65, (28, 'WHILE'): 27,
        (28, 'WITH'): 53, (28, '{'): 16, (30, '('): 31, (31, '('): 153,
        (31, '-'): 122, (31, ';'): 32, (31, 'DELETE'): 132, (31, 'FALSE'): 160,
        (31, 'FLOAT'): 158, (31, 'IDENTIFIER'): 156,
        (31, 'INCREMENT_OPERATOR'): 124, (31, 'INTEGER'): 157,
        (31, 'NEW'): 127, (31, 'NULL'): 162, (31, 'STRING'): 159,
        (31, 'THIS'): 163, (31, 'TRUE'): 161, (31, 'UNARY_OPERATOR'): 120,
        (31, 'VAR'): 65, (32, '('): 153, (32, '-'): 122, (32, 'DELETE'): 132,
        (32, 'FALSE'): 160, (32, 'FLOAT'): 158, (32, 'IDENTIFIER'): 156,
        (32, 'INCREMENT_OPERATOR'): 124, (32, 'INTEGER'): 157,
        (32, 'NEW'): 127, (32, 'NULL'): 162, (32, 'STRING'): 159,
        (32, 'THIS'): 163, (32, 'TRUE'): 161, (32, 'UNARY_OPERATOR'): 120,
        (33, ';'): 34, (34, '('): 153, (34, '-'): 122, (34, 'DELETE'): 132,
        (34, 'FALSE'): 160, (34, 'FLOAT'): 158, (34, 'IDENTIFIER'): 156,
        (34, 'INCREMENT_OPERATOR'): 124, (34, 'INTEGER'): 157,
        (34, 'NEW'): 127, (34, 'NULL'): 162, (34, 'STRING'): 159,
        (34, 'THIS'): 163, (34, 'TRUE'): 161, (34, 'UNARY_OPERATOR'): 120,
        (35, ')'): 36, (36, '('): 153, (36, '-'): 122, (36, ';'): 21,
        (36, 'BREAK'): 49, (36, 'CONTINUE'): 51, (36, 'DELETE'): 132,
        (36, 'FALSE'): 160, (36, 'FLOAT'): 158, (36, 'FOR'): 30,
        (36, 'IDENTIFIER'): 156, (36, 'IF'): 22,
        (36, 'INCREMENT_OPERATOR'): 124, (36, 'INTEGER'): 157,
        (36, 'NEW'): 127, (36, 'NULL'): 162, (36, 'RETURN'): 58,
        (36, 'STRING'): 159, (36, 'THIS'): 163, (36, 'TRUE'): 161,
        (36, 'UNARY_OPERATOR'): 120, (36, 'VAR'): 65, (36, 'WHILE'): 27,
        (36, 'WITH'): 53, (36, '{'): 16, (38, ';'): 39, (38, 'IN'): 45,
        (39, '('): 153, (39, '-'): 122, (39, 'DELETE'): 132,
        (39, 'FALSE'): 160, (39, 'FLOAT'): 158, (39, 'IDENTIFIER'): 156,
        (39, 'INCREMENT_OPERATOR'): 124, (39, 'INTEGER'): 157,
        (39, 'NEW'): 127, (39, 'NULL'): 162, (39, 'STRING'): 159,
        (39, 'THIS'): 163, (39, 'TRUE'): 161, (39, 'UNARY_OPERATOR'): 120,
        (4, 'IDENTIFIER'): 5, (40, ';'): 41, (41, '('): 153, (41, '-'): 122,
        (41, 'DELETE'): 132, (41, 'FALSE'): 160, (41, 'FLOAT'): 158,
        (41, 'IDENTIFIER'): 156, (41, 'INCREMENT_OPERATOR'): 124,
        (41, 'INTEGER'): 157, (41, 'NEW'): 127, (41, 'NULL'): 162,
        (41, 'STRING'): 159, (41, 'THIS'): 163, (41, 'TRUE'): 161,
        (41, 'UNARY_OPERATOR'): 120, (42, ')'): 43, (43, '('): 153,
        (43, '-'): 122, (43, ';'): 21, (43, 'BREAK'): 49, (43, 'CONTINUE'): 51,
        (43, 'DELETE'): 132, (43, 'FALSE'): 160, (43, 'FLOAT'): 158,
        (43, 'FOR'): 30, (43, 'IDENTIFIER'): 156, (43, 'IF'): 22,
        (43, 'INCREMENT_OPERATOR'): 124, (43, 'INTEGER'): 157,
        (43, 'NEW'): 127, (43, 'NULL'): 162, (43, 'RETURN'): 58,
        (43, 'STRING'): 159, (43, 'THIS'): 163, (43, 'TRUE'): 161,
        (43, 'UNARY_OPERATOR'): 120, (43, 'VAR'): 65, (43, 'WHILE'): 27,
        (43, 'WITH'): 53, (43, '{'): 16, (45, '('): 153, (45, '-'): 122,
        (45, 'DELETE'): 132, (45, 'FALSE'): 160, (45, 'FLOAT'): 158,
        (45, 'IDENTIFIER'): 156, (45, 'INCREMENT_OPERATOR'): 124,
        (45, 'INTEGER'): 157, (45, 'NEW'): 127, (45, 'NULL'): 162,
        (45, 'STRING'): 159, (45, 'THIS'): 163, (45, 'TRUE'): 161,
        (45, 'UNARY_OPERATOR'): 120, (46, ')'): 47, (47, '('): 153,
        (47, '-'): 122, (47, ';'): 21, (47, 'BREAK'): 49, (47, 'CONTINUE'): 51,
        (47, 'DELETE'): 132, (47, 'FALSE'): 160, (47, 'FLOAT'): 158,
        (47, 'FOR'): 30, (47, 'IDENTIFIER'): 156, (47, 'IF'): 22,
        (47, 'INCREMENT_OPERATOR'): 124, (47, 'INTEGER'): 157,
        (47, 'NEW'): 127, (47, 'NULL'): 162, (47, 'RETURN'): 58,
        (47, 'STRING'): 159, (47, 'THIS'): 163, (47, 'TRUE'): 161,
        (47, 'UNARY_OPERATOR'): 120, (47, 'VAR'): 65, (47, 'WHILE'): 27,
        (47, 'WITH'): 53, (47, '{'): 16, (49, ';'): 50, (5, '('): 6,
        (51, ';'): 52, (53, '('): 54, (54, '('): 153, (54, '-'): 122,
        (54, 'DELETE'): 132, (54, 'FALSE'): 160, (54, 'FLOAT'): 158,
        (54, 'IDENTIFIER'): 156, (54, 'INCREMENT_OPERATOR'): 124,
        (54, 'INTEGER'): 157, (54, 'NEW'): 127, (54, 'NULL'): 162,
        (54, 'STRING'): 159, (54, 'THIS'): 163, (54, 'TRUE'): 161,
        (54, 'UNARY_OPERATOR'): 120, (55, ')'): 56, (56, '('): 153,
        (56, '-'): 122, (56, ';'): 21, (56, 'BREAK'): 49, (56, 'CONTINUE'): 51,
        (56, 'DELETE'): 132, (56, 'FALSE'): 160, (56, 'FLOAT'): 158,
        (56, 'FOR'): 30, (56, 'IDENTIFIER'): 156, (56, 'IF'): 22,
        (56, 'INCREMENT_OPERATOR'): 124, (56, 'INTEGER'): 157,
        (56, 'NEW'): 127, (56, 'NULL'): 162, (56, 'RETURN'): 58,
        (56, 'STRING'): 159, (56, 'THIS'): 163, (56, 'TRUE'): 161,
        (56, 'UNARY_OPERATOR'): 120, (56, 'VAR'): 65, (56, 'WHILE'): 27,
        (56, 'WITH'): 53, (56, '{'): 16, (58, '('): 153, (58, '-'): 122,
        (58, 'DELETE'): 132, (58, 'FALSE'): 160, (58, 'FLOAT'): 158,
        (58, 'IDENTIFIER'): 156, (58, 'INCREMENT_OPERATOR'): 124,
        (58, 'INTEGER'): 157, (58, 'NEW'): 127, (58, 'NULL'): 162,
        (58, 'STRING'): 159, (58, 'THIS'): 163, (58, 'TRUE'): 161,
        (58, 'UNARY_OPERATOR'): 120, (59, ';'): 60, (6, 'IDENTIFIER'): 12,
        (62, ';'): 63, (65, 'IDENTIFIER'): 72, (69, ','): 70, (7, ')'): 8,
        (70, 'IDENTIFIER'): 72, (72, '='): 73, (73, '('): 153, (73, '-'): 122,
        (73, 'DELETE'): 132, (73, 'FALSE'): 160, (73, 'FLOAT'): 158,
        (73, 'IDENTIFIER'): 156, (73, 'INCREMENT_OPERATOR'): 124,
        (73, 'INTEGER'): 157, (73, 'NEW'): 127, (73, 'NULL'): 162,
        (73, 'STRING'): 159, (73, 'THIS'): 163, (73, 'TRUE'): 161,
        (73, 'UNARY_OPERATOR'): 120, (76, ','): 77, (77, '('): 153,
        (77, '-'): 122, (77, 'DELETE'): 132, (77, 'FALSE'): 160,
        (77, 'FLOAT'): 158, (77, 'IDENTIFIER'): 156,
        (77, 'INCREMENT_OPERATOR'): 124, (77, 'INTEGER'): 157,
        (77, 'NEW'): 127, (77, 'NULL'): 162, (77, 'STRING'): 159,
        (77, 'THIS'): 163, (77, 'TRUE'): 161, (77, 'UNARY_OPERATOR'): 120,
        (79, 'ASSIGNMENT_OPERATOR'): 80, (8, '{'): 16, (80, '('): 153,
        (80, '-'): 122, (80, 'DELETE'): 132, (80, 'FALSE'): 160,
        (80, 'FLOAT'): 158, (80, 'IDENTIFIER'): 156,
        (80, 'INCREMENT_OPERATOR'): 124, (80, 'INTEGER'): 157,
        (80, 'NEW'): 127, (80, 'NULL'): 162, (80, 'STRING'): 159,
        (80, 'THIS'): 163, (80, 'TRUE'): 161, (80, 'UNARY_OPERATOR'): 120,
        (82, '?'): 83, (83, '('): 153, (83, '-'): 122, (83, 'DELETE'): 132,
        (83, 'FALSE'): 160, (83, 'FLOAT'): 158, (83, 'IDENTIFIER'): 156,
        (83, 'INCREMENT_OPERATOR'): 124, (83, 'INTEGER'): 157,
        (83, 'NEW'): 127, (83, 'NULL'): 162, (83, 'STRING'): 159,
        (83, 'THIS'): 163, (83, 'TRUE'): 161, (83, 'UNARY_OPERATOR'): 120,
        (84, ':'): 85, (85, '('): 153, (85, '-'): 122, (85, 'DELETE'): 132,
        (85, 'FALSE'): 160, (85, 'FLOAT'): 158, (85, 'IDENTIFIER'): 156,
        (85, 'INCREMENT_OPERATOR'): 124, (85, 'INTEGER'): 157,
        (85, 'NEW'): 127, (85, 'NULL'): 162, (85, 'STRING'): 159,
        (85, 'THIS'): 163, (85, 'TRUE'): 161, (85, 'UNARY_OPERATOR'): 120,
        (87, '||'): 88, (88, '('): 153, (88, '-'): 122, (88, 'DELETE'): 132,
        (88, 'FALSE'): 160, (88, 'FLOAT'): 158, (88, 'IDENTIFIER'): 156,
        (88, 'INCREMENT_OPERATOR'): 124, (88, 'INTEGER'): 157,
        (88, 'NEW'): 127, (88, 'NULL'): 162, (88, 'STRING'): 159,
        (88, 'THIS'): 163, (88, 'TRUE'): 161, (88, 'UNARY_OPERATOR'): 120,
        (90, '&&'): 91, (91, '('): 153, (91, '-'): 122, (91, 'DELETE'): 132,
        (91, 'FALSE'): 160, (91, 'FLOAT'): 158, (91, 'IDENTIFIER'): 156,
        (91, 'INCREMENT_OPERATOR'): 124, (91, 'INTEGER'): 157,
        (91, 'NEW'): 127, (91, 'NULL'): 162, (91, 'STRING'): 159,
        (91, 'THIS'): 163, (91, 'TRUE'): 161, (91, 'UNARY_OPERATOR'): 120,
        (93, '|'): 94, (94, '('): 153, (94, '-'): 122, (94, 'DELETE'): 132,
        (94, 'FALSE'): 160, (94, 'FLOAT'): 158, (94, 'IDENTIFIER'): 156,
        (94, 'INCREMENT_OPERATOR'): 124, (94, 'INTEGER'): 157,
        (94, 'NEW'): 127, (94, 'NULL'): 162, (94, 'STRING'): 159,
        (94, 'THIS'): 163, (94, 'TRUE'): 161, (94, 'UNARY_OPERATOR'): 120,
        (96, '^'): 97, (97, '('): 153, (97, '-'): 122, (97, 'DELETE'): 132,
        (97, 'FALSE'): 160, (97, 'FLOAT'): 158, (97, 'IDENTIFIER'): 156,
        (97, 'INCREMENT_OPERATOR'): 124, (97, 'INTEGER'): 157,
        (97, 'NEW'): 127, (97, 'NULL'): 162, (97, 'STRING'): 159,
        (97, 'THIS'): 163, (97, 'TRUE'): 161, (97, 'UNARY_OPERATOR'): 120,
        (99, '&'): 100
    }

    def __init__(self, max_err=None, errcorr_pre=4, errcorr_post=4):
        """Create a new parser instance.

        The constructor arguments are all optional, they control the
        handling of parse errors: `max_err` can be given to bound the
        number of errors reported during one run of the parser.
        `errcorr_pre` controls how many tokens before an invalid token
        the parser considers when trying to repair the input.
        `errcorr_post` controls how far beyond an invalid token the
        parser reads when evaluating the quality of an attempted
        repair.
        """
        self.max_err = max_err
        self.m = errcorr_pre
        self.n = errcorr_post

    @staticmethod
    def leaves(tree):
        """Iterate over the leaves of a parse tree.

        This function can be used to reconstruct the input from a
        parse tree.
        """
        if tree[0] in Parser.terminals:
            yield tree
        else:
            for x in tree[1:]:
                for t in Parser.leaves(x):
                    yield t

    def _parse(self, tokens, stack, state):
        """Internal function to construct a parse tree.

        'Tokens' is the input token stream, 'stack' is the inital stack
        and 'state' is the inital state of the automaton.

        Returns a 4-tuple (done, count, state, error).  'done' is a
        boolean indicationg whether parsing is completed, 'count' is
        number of successfully shifted tokens, and 'error' is None on
        success or else the first token which could not be parsed.
        """
        read_next = True
        count = 0
        while state != self._halting_state:
            if read_next:
                try:
                    lookahead = next(tokens)
                except StopIteration:
                    return (False,count,state,None)
                read_next = False
            token = lookahead[0]

            if (state,token) in self._shift:
                stack.append((state,lookahead))
                state = self._shift[(state,token)]
                read_next = True
                count += 1
            elif (state,token) in self._reduce:
                X,n = self._reduce[(state,token)]
                if n > 0:
                    state = stack[-n][0]
                    tree = [ X ]
                    for s in stack[-n:]:
                        if s[1][0] in self._transparent:
                            tree.extend(s[1][1:])
                        else:
                            tree.append(s[1])
                    tree = tuple(tree)
                    del stack[-n:]
                else:
                    tree = (X,)
                stack.append((state,tree))
                state = self._goto[(state,X)]
            else:
                return (False,count,state,lookahead)
        return (True,count,state,None)

    def _try_parse(self, tokens, stack, state):
        count = 0
        while state != self._halting_state and count < len(tokens):
            token = tokens[count][0]

            if (state,token) in self._shift:
                stack.append(state)
                state = self._shift[(state,token)]
                count += 1
            elif (state,token) in self._reduce:
                X,n = self._reduce[(state,token)]
                if n > 0:
                    state = stack[-n]
                    del stack[-n:]
                stack.append(state)
                state = self._goto[(state,X)]
            else:
                break
        return count

    def parse(self, tokens):
        """Parse the tokens from `tokens` and construct a parse tree.

        `tokens` must be an interable over tuples.  The first element
        of each tuple must be a terminal symbol of the grammar which
        is used for parsing.  All other element of the tuple are just
        copied into the constructed parse tree.

        If `tokens` is invalid, a ParseErrors exception is raised.
        Otherwise the function returns the parse tree.
        """
        errors = []
        tokens = chain(tokens, [(self.EOF,)])
        stack = []
        state = 0
        while True:
            done,_,state,lookahead = self._parse(tokens, stack, state)
            if done:
                break

            expect = [ t for s,t in list(self._reduce.keys())+list(self._shift.keys())
                       if s == state ]
            errors.append((lookahead, expect))
            if self.max_err is not None and len(errors) >= self.max_err:
                raise self.ParseErrors(errors, None)

            queue = []
            def split_input(m, stack, lookahead, queue):
                for s in stack:
                    for t in self.leaves(s[1]):
                        queue.append(t)
                        if len(queue) > m:
                            yield queue.pop(0)
                queue.append(lookahead)
            in2 = split_input(self.m, stack, lookahead, queue)
            stack = []
            done,_,state,lookahead = self._parse(in2, stack, 0)
            m = len(queue)
            for i in range(0, self.n):
                try:
                    queue.append(next(tokens))
                except StopIteration:
                    break

            def vary_queue(queue, m):
                for i in range(m-1, -1, -1):
                    for t in self.terminals:
                        yield queue[:i]+[(t,)]+queue[i:]
                    if queue[i][0] == self.EOF:
                        continue
                    for t in self.terminals:
                        if t == queue[i]:
                            continue
                        yield queue[:i]+[(t,)]+queue[i+1:]
                    yield queue[:i]+queue[i+1:]
            best_val = len(queue)-m+1
            best_queue = queue
            for q2 in vary_queue(queue, m):
                pos = self._try_parse(q2, [ s[0] for s in stack ], state)
                val = len(q2) - pos
                if val < best_val:
                    best_val = val
                    best_queue = q2
                    if val == len(q2):
                        break
            if best_val >= len(queue)-m+1:
                raise self.ParseErrors(errors, None)
            tokens = chain(best_queue, tokens)

        tree = stack[0][1]
        if errors:
            raise self.ParseErrors(errors, tree)
        return tree
