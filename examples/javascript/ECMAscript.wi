# p. 217ff of
# http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf
PrimaryExpression : See 11.1
this
Identifier
Literal
ArrayLiteral
ObjectLiteral
( Expression )
ArrayLiteral : See 11.1.4
[ Elisionopt ]
[ ElementList ]
[ ElementList , Elisionopt ]
ElementList : See 11.1.4
Elisionopt AssignmentExpression
ElementList , Elisionopt AssignmentExpression
Elision : See 11.1.4
,
Elision ,
ObjectLiteral : See 11.1.5
{ }
{ PropertyNameAndValueList }
{ PropertyNameAndValueList , }
PropertyNameAndValueList : See 11.1.5
PropertyAssignment
PropertyNameAndValueList ,  PropertyAssignment
PropertyAssignment : See 11.1.5
PropertyName : AssignmentExpression
get PropertyName ( ) { FunctionBody }
set PropertyName ( PropertySetParameterList ) { FunctionBody }
PropertyName : See 11.1.5
IdentifierName
StringLiteral
NumericLiteral
PropertySetParameterList : See 11.1.5
Identifier© Ecma International 2011 219
MemberExpression : See 11.2
PrimaryExpression
FunctionExpression
MemberExpression [ Expression ]
MemberExpression . IdentifierName
new MemberExpression Arguments
NewExpression : See 11.2
MemberExpression
new NewExpression
CallExpression : See 11.2
MemberExpression Arguments
CallExpression Arguments
CallExpression [ Expression ]
CallExpression . IdentifierName
Arguments : See 11.2
( )
( ArgumentList  )
ArgumentList : See 11.2
AssignmentExpression
ArgumentList , AssignmentExpression
LeftHandSideExpression : See 11.2
NewExpression
CallExpression
PostfixExpression : See 11.3
LeftHandSideExpression
LeftHandSideExpression [no LineTerminator here] ++
LeftHandSideExpression [no LineTerminator here] --
UnaryExpression : See 11.4
PostfixExpression
delete UnaryExpression
void UnaryExpression
typeof UnaryExpression
++ UnaryExpression
-- UnaryExpression
+ UnaryExpression
- UnaryExpression
~ UnaryExpression
! UnaryExpression
MultiplicativeExpression : See 11.5
UnaryExpression
MultiplicativeExpression * UnaryExpression
MultiplicativeExpression / UnaryExpression
MultiplicativeExpression % UnaryExpression220 © Ecma International 2011
AdditiveExpression : See 11.6
MultiplicativeExpression
AdditiveExpression + MultiplicativeExpression
AdditiveExpression - MultiplicativeExpression
ShiftExpression : See 11.7
AdditiveExpression
ShiftExpression << AdditiveExpression
ShiftExpression >> AdditiveExpression
ShiftExpression >>> AdditiveExpression
RelationalExpression : See 11.8
ShiftExpression
RelationalExpression < ShiftExpression
RelationalExpression > ShiftExpression
RelationalExpression <= ShiftExpression
RelationalExpression >= ShiftExpression
RelationalExpression instanceof ShiftExpression
RelationalExpression in ShiftExpression
RelationalExpressionNoIn : See 11.8
ShiftExpression
RelationalExpressionNoIn < ShiftExpression
RelationalExpressionNoIn > ShiftExpression
RelationalExpressionNoIn <= ShiftExpression
RelationalExpressionNoIn >= ShiftExpression
RelationalExpressionNoIn instanceof ShiftExpression
EqualityExpression : See 11.9
RelationalExpression
EqualityExpression == RelationalExpression
EqualityExpression != RelationalExpression
EqualityExpression === RelationalExpression
EqualityExpression !== RelationalExpression
EqualityExpressionNoIn : See 11.9
RelationalExpressionNoIn
EqualityExpressionNoIn == RelationalExpressionNoIn
EqualityExpressionNoIn != RelationalExpressionNoIn
EqualityExpressionNoIn === RelationalExpressionNoIn
EqualityExpressionNoIn !== RelationalExpressionNoIn
BitwiseANDExpression : See 11.10
EqualityExpression
BitwiseANDExpression & EqualityExpression
BitwiseANDExpressionNoIn : See 11.10
EqualityExpressionNoIn
BitwiseANDExpressionNoIn & EqualityExpressionNoIn© Ecma International 2011 221
BitwiseXORExpression : See 11.10
BitwiseANDExpression
BitwiseXORExpression ^ BitwiseANDExpression
BitwiseXORExpressionNoIn : See 11.10
BitwiseANDExpressionNoIn
BitwiseXORExpressionNoIn ^ BitwiseANDExpressionNoIn
BitwiseORExpression : See 11.10
BitwiseXORExpression
BitwiseORExpression | BitwiseXORExpression
BitwiseORExpressionNoIn : See 11.10
BitwiseXORExpressionNoIn
BitwiseORExpressionNoIn | BitwiseXORExpressionNoIn
LogicalANDExpression : See 11.11
BitwiseORExpression
LogicalANDExpression && BitwiseORExpression
LogicalANDExpressionNoIn : See 11.11
BitwiseORExpressionNoIn
LogicalANDExpressionNoIn && BitwiseORExpressionNoIn
LogicalORExpression : See 11.11
LogicalANDExpression
LogicalORExpression || LogicalANDExpression
LogicalORExpressionNoIn : See 11.11
LogicalANDExpressionNoIn
LogicalORExpressionNoIn || LogicalANDExpressionNoIn
ConditionalExpression : See 11.12
LogicalORExpression
LogicalORExpression ? AssignmentExpression : AssignmentExpression
ConditionalExpressionNoIn : See 11.12
LogicalORExpressionNoIn
LogicalORExpressionNoIn ? AssignmentExpression : AssignmentExpressionNoIn
AssignmentExpression : See 11.13
ConditionalExpression
LeftHandSideExpression = AssignmentExpression 
LeftHandSideExpression AssignmentOperator AssignmentExpression
AssignmentExpressionNoIn : See 11.13
ConditionalExpressionNoIn
LeftHandSideExpression = AssignmentExpressionNoIn
LeftHandSideExpression AssignmentOperator AssignmentExpressionNoIn222 © Ecma International 2011
AssignmentOperator : one of See 11.13
*= /= %= += -= <<= >>= >>>= &= ^= |=
Expression : See 11.14
AssignmentExpression
Expression , AssignmentExpression
ExpressionNoIn : See 11.14
AssignmentExpressionNoIn
ExpressionNoIn , AssignmentExpressionNoIn
A.4 Statements
Statement : See clause 12
Block
VariableStatement
EmptyStatement
ExpressionStatement
IfStatement
IterationStatement
ContinueStatement
BreakStatement
ReturnStatement
WithStatement
LabelledStatement
SwitchStatement
ThrowStatement
TryStatement
DebuggerStatement
Block : See 12.1
{ StatementListopt }
StatementList : See 12.1
Statement
StatementList Statement
VariableStatement : See 12.2
var VariableDeclarationList ;
VariableDeclarationList : See 12.2
VariableDeclaration
VariableDeclarationList , VariableDeclaration
VariableDeclarationListNoIn : See 12.2
VariableDeclarationNoIn
VariableDeclarationListNoIn , VariableDeclarationNoIn
VariableDeclaration : See 12.2
Identifier Initialiseropt
VariableDeclarationNoIn : See 12.2
Identifier InitialiserNoInopt© Ecma International 2011 223
Initialiser : See 12.2
= AssignmentExpression
InitialiserNoIn : See 12.2
= AssignmentExpressionNoIn
EmptyStatement : See 12.3
;
ExpressionStatement : See 12.4
[lookahead  {{, function}] Expression ;
IfStatement : See 12.5
if ( Expression ) Statement  else Statement
if ( Expression ) Statement
IterationStatement : See 12.6
do Statement while ( Expression );
while ( Expression ) Statement
for (ExpressionNoInopt; Expressionopt ; Expressionopt ) Statement
for ( var VariableDeclarationListNoIn; Expressionopt ; Expressionopt ) Statement
for ( LeftHandSideExpression in Expression ) Statement
for ( var VariableDeclarationNoIn in Expression ) Statement
ContinueStatement : See 12.7
continue ;
continue [no LineTerminator here] Identifier ;
BreakStatement : See 12.8
break ;
break [no LineTerminator here] Identifier ;
ReturnStatement : See 12.9
return ;
return [no LineTerminator here] Expression ;
WithStatement : See 12.10
with ( Expression ) Statement
SwitchStatement : See 12.11
switch ( Expression ) CaseBlock
CaseBlock : See 12.11
{ CaseClausesopt }
{ CaseClausesopt DefaultClause CaseClausesopt }
CaseClauses : See 12.11
CaseClause
CaseClauses CaseClause224 © Ecma International 2011
CaseClause : See 12.11
case Expression : StatementListopt
DefaultClause : See 12.11
default : StatementListopt
LabelledStatement : See 12.12
Identifier : Statement
ThrowStatement : See 12.13
throw [no LineTerminator here] Expression ;
TryStatement : See 12.14
try Block Catch
try Block Finally
try Block Catch Finally
Catch : See 12.14
catch ( Identifier ) Block
Finally : See 12.14
finally Block
DebuggerStatement : See 12.15
debugger ;
A.5 Functions and Programs
FunctionDeclaration : See clause 13
function Identifier ( FormalParameterListopt ) { FunctionBody }
FunctionExpression : See clause 13
function Identifieropt ( FormalParameterListopt ) { FunctionBody }
FormalParameterList : See clause 13
Identifier
FormalParameterList , Identifier
FunctionBody : See clause 13
SourceElementsopt
Program : See clause 14
SourceElementsopt
SourceElements : See clause 14
SourceElement
SourceElements SourceElement© Ecma International 2011 225
SourceElement : See clause 14
Statement
FunctionDeclaration
