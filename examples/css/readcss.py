#! /usr/bin/env python3
# readcss.py - illustrate the use of a Wisent-generated parser
# example code autogenerated on 2009-07-16 23:25:29
# generator: wisent 0.5, http://seehuhn.de/pages/wisent
# source: css.wi

import sys

from parser import Parser
from scanner import tokens

def print_tree(tree, terminals, indent=0):
    """Print a parse tree to stdout."""
    prefix = "    "*indent
    if tree[0] in terminals:
        print(prefix + repr(tree))
    else:
        print(prefix + str(tree[0]))
        for x in tree[1:]:
            print_tree(x, terminals, indent+1)

fname = sys.argv[1]
text = open(fname, encoding="utf-8").read()
tokens_input = tokens(text)

p = Parser()
try:
    tree = p.parse(tokens_input)
except p.ParseErrors as e:
    for token,expected in e.errors:
        if token[0] == p.EOF:
            print("unexpected end of file", file=sys.stderr)
            continue

        found = repr(token[0])
        if len(expected) == 1:
            msg = "%s:%d:%d:missing %s (found %s)"%(fname,token[2],token[3],repr(expected[0]),found)
        else:
            msg1 = "%s:%d:%d:parse error before %s, "%(fname,token[2],token[3],found)
            l = sorted([ repr(s) for s in expected ])
            msg2 = "expected one of "+", ".join(l)
            msg = msg1+msg2
        print(msg, file=sys.stderr)
    raise SystemExit(1)

print_tree(tree, p.terminals)
